[
  {
    "objectID": "listings.html",
    "href": "listings.html",
    "title": "Listings",
    "section": "",
    "text": "Hands-on Exercise 8\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver geopgraphical segmentation with spatially constrainted clustering techniques\n\n\n\nJeffery Lau\n\n\nOct 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 3\n\n\n\nTake-home\n\n\n\nIn this exercise, we will develop an interactive Geospatial Analytics Shiny App to enable users to explore crime patterns in West Malaysia. By leveraging spatial clustering…\n\n\n\nJeffery Lau\n\n\nOct 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 7\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver geopgraphical segmentation with spatially constrainted clustering techniques\n\n\n\nJeffery Lau\n\n\nOct 11, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 6\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with Spatial Autocorrelation\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 9\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to perform spatially constraint clustering\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 10\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 2\n\n\n\nTake-home\n\n\n\nIn this exercise, we will be analyzing drug use offence in Thailand from 2017 - 2022, using spatial autocorrelation techniques to identify clusters, outliers and hotspots of…\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 6\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver the Global and Local Spatial Autocorrelation Analysis Methods\n\n\n\nJeffery Lau\n\n\nSep 21, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 5\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with GWmodel\n\n\n\nJeffery Lau\n\n\nSep 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 5\n\n\n\nHands-on\n\n\n\nIn this exercise we learn about spatial weights and applications\n\n\n\nJeffery Lau\n\n\nSep 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 11\n\n\n\nHands-on\n\n\n\nIn this exercise we will learn how to build predictive model by using geographical random forest method.\n\n\n\nJeffery Lau\n\n\nSep 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 4\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with sparr to perform spatial temporal analysis on our data\n\n\n\nJeffery Lau\n\n\nSep 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 4\n\n\n\nHands-on\n\n\n\nHands-on on Spatial-Temporal Analysis covered in In-class exercise 4\n\n\n\nJeffery Lau\n\n\nSep 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 1\n\n\n\nTake-home\n\n\n\nIn this exercise, We will be analyzing armed conflict data in Myanmar, using spatial point pattern analysis to understand the distribution and relationships between conflict…\n\n\n\nJeffery Lau\n\n\nSep 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 3\n\n\n\nIn-class\n\n\n\nIn this exercise we revisted on how to do proper CRS projection and transformations. Note: Last modified to update title only.\n\n\n\nJeffery Lau\n\n\nSep 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 3\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver the 1st and 2nd Order Spatial Point Patterns Analysis Methods\n\n\n\nJeffery Lau\n\n\nAug 30, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 2\n\n\n\nIn-class\n\n\n\nIn this exercise we learn to handle corrupted data, transforming CRS as well as some geoprocessing and joining of geospatial and aspatial data. Note: Last modified to update…\n\n\n\nJeffery Lau\n\n\nAug 26, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 2\n\n\n\nHands-on\n\n\n\nIn this exercise we work with themeatic mapping using tmap package to visualize our data\n\n\n\nJeffery Lau\n\n\nAug 19, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 1\n\n\n\nIn-class\n\n\n\nFirst lesson, learnt how to setup quatro doc. Note: Last modified to update title only.\n\n\n\nJeffery Lau\n\n\nAug 19, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 1\n\n\n\nHands-on\n\n\n\nIn this exercise we get our first hands-on with geoprocessing and basic plotting with R\n\n\n\nJeffery Lau\n\n\nAug 17, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "in-class_ex/ex02/ic_ex02.html",
    "href": "in-class_ex/ex02/ic_ex02.html",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "The following code chunk uses p_load() to install and load the sf and tidyverse packages.\n\npacman::p_load(sf, tidyverse, DT)"
  },
  {
    "objectID": "in-class_ex/ex02/ic_ex02.html#fixing-data-files",
    "href": "in-class_ex/ex02/ic_ex02.html#fixing-data-files",
    "title": "In-class Exercise 2",
    "section": "2.1 Fixing data files",
    "text": "2.1 Fixing data files\nNotice how much less tidy the kml file data is as compared to the shp file\n\nmpsz19_shp = st_read(dsn=\"data/MPSZ-2019\", layer=\"MPSZ-2019\") \n\nReading layer `MPSZ-2019' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex02/data/MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz19_kml = st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex02/data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nNotice that the CRS is also wrong, it is in GCS instead of PCS\n\n# Check CRS\nst_crs(mpsz19_shp)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n# Look up epsg code https://epsg.io/?q=3414\nmpsz19_shp &lt;- st_transform(mpsz19_shp, crs = 3414)\n\n# Check CRS again\nst_crs(mpsz19_shp)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "in-class_ex/ex02/ic_ex02.html#load-aspatial-data",
    "href": "in-class_ex/ex02/ic_ex02.html#load-aspatial-data",
    "title": "In-class Exercise 2",
    "section": "2.2 Load Aspatial Data",
    "text": "2.2 Load Aspatial Data\n\npopdata &lt;- read_csv(\"data/respopagesextod2023/respopagesextod2023.csv\")\n\nhead(popdata)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  &lt;chr&gt;      &lt;chr&gt;                  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;dbl&gt;\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2023\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats        0  2023\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2023\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2023\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2023\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    40  2023"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#loading-packages",
    "href": "in-class_ex/ex04/ic_ex04.html#loading-packages",
    "title": "In-class Exercise 4",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nWe will be loading the following packages, on top of the standard package with the additional sparr to work with spatio-temporal densities\n\npacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse)"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#import-data",
    "href": "in-class_ex/ex04/ic_ex04.html#import-data",
    "title": "In-class Exercise 4",
    "section": "2.2 Import data",
    "text": "2.2 Import data\nNext we import our data required, the boundary and forest fire data.\n\n# Load data\nkbb_sf &lt;- st_read(dsn = \"data/rawdata\", layer = \"Kepulauan_Bangka_Belitung\") %&gt;%\n  st_union() %&gt;%\n  st_zm(drop = TRUE, what = \"ZM\") %&gt;% \n  st_transform(crs = 32748)\n\nReading layer `Kepulauan_Bangka_Belitung' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex04/data/rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 298 features and 27 fields\nGeometry type: POLYGON\nDimension:     XYZ\nBounding box:  xmin: 105.1085 ymin: -3.116593 xmax: 106.8488 ymax: -1.501603\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nff_sf &lt;- read_csv(\"data/rawdata/forestfires.csv\") %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;% # Sequence always long then lat (x -&gt; y)\n  st_transform(crs = 32748)\n\nWe also create an owin for the boundary map\n\nkbb_owin &lt;- as.owin(kbb_sf)\nclass(kbb_owin)\n\n[1] \"owin\"\n\nplot(kbb_owin)"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#data-wrangling",
    "href": "in-class_ex/ex04/ic_ex04.html#data-wrangling",
    "title": "In-class Exercise 4",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\nStart by creating the year of day, month num and abbr for our forest fire\n\n# read_csv can detect the datetype\nff_sf &lt;- ff_sf %&gt;%\n  mutate(DayofYear = yday(acq_date)) %&gt;%\n  mutate(Month_num = month(acq_date)) %&gt;%\n  mutate(Month_fac = month(acq_date, label = T, abbr = F))\n\nff_sf\n\nSimple feature collection with 741 features and 16 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 521564.1 ymin: 9658137 xmax: 695791 ymax: 9828767\nProjected CRS: WGS 84 / UTM zone 48S\n# A tibble: 741 × 17\n   brightness  scan track acq_date   acq_time satellite instrument confidence\n *      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;date&gt;        &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;           &lt;dbl&gt;\n 1       312.   1.3   1.1 2023-01-10      629 Aqua      MODIS              67\n 2       314.   1.2   1.1 2023-01-10      629 Aqua      MODIS              70\n 3       315.   1.2   1.1 2023-01-10      629 Aqua      MODIS              71\n 4       309.   1.2   1.1 2023-01-10      629 Aqua      MODIS              54\n 5       308.   1.2   1.1 2023-01-10      629 Aqua      MODIS              33\n 6       322.   1.3   1.1 2023-01-10      629 Aqua      MODIS              72\n 7       318.   1.2   1.1 2023-01-10      629 Aqua      MODIS              71\n 8       318.   1.2   1.1 2023-01-10      629 Aqua      MODIS              75\n 9       327.   2     1.4 2023-01-12      616 Aqua      MODIS              73\n10       321.   2     1.4 2023-01-12      616 Aqua      MODIS              75\n# ℹ 731 more rows\n# ℹ 9 more variables: version &lt;dbl&gt;, bright_t31 &lt;dbl&gt;, frp &lt;dbl&gt;,\n#   daynight &lt;chr&gt;, type &lt;dbl&gt;, geometry &lt;POINT [m]&gt;, DayofYear &lt;dbl&gt;,\n#   Month_num &lt;dbl&gt;, Month_fac &lt;ord&gt;"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#data-exploration",
    "href": "in-class_ex/ex04/ic_ex04.html#data-exploration",
    "title": "In-class Exercise 4",
    "section": "2.4 Data Exploration",
    "text": "2.4 Data Exploration\n\ntm_shape(kbb_sf) + tm_polygons() + \n  tm_shape(ff_sf) + tm_bubbles(size = 0.1, col = \"brightness\") # (markets, symbol -&gt; own emblem), bubbles, squares\n\n\n\n\n\n\n\n\n\ntm_shape(kbb_sf) + tm_polygons() +\n  tm_shape(ff_sf) + tm_squares(size = 0.1) +\n  tm_facets(by=\"Month_fac\",\n            free.coords = F,\n            drop.units = T)"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#data-preparation",
    "href": "in-class_ex/ex04/ic_ex04.html#data-preparation",
    "title": "In-class Exercise 4",
    "section": "3.1 Data Preparation",
    "text": "3.1 Data Preparation\nGet fire month with geometry\n\nff_month &lt;- ff_sf %&gt;%\n  select(Month_num)\n\nConvert to ppp\n\nff_month_ppp &lt;- as.ppp(ff_month)\nplot(ff_month_ppp)\n\n\n\n\n\n\n\n\nNo duplicates detected\n\nany(duplicated(ff_month_ppp))\n\n[1] FALSE\n\n\n\nff_ppp_owin &lt;- ff_month_ppp[kbb_owin]\nplot(ff_ppp_owin)"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#compute-st-kde",
    "href": "in-class_ex/ex04/ic_ex04.html#compute-st-kde",
    "title": "In-class Exercise 4",
    "section": "3.2 Compute ST KDE",
    "text": "3.2 Compute ST KDE\n\nst_kde &lt;- spattemp.density(ff_ppp_owin)\nsummary(st_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 15102.47 (spatial)\n  lambda = 0.0304 (temporal)\n\nNo. of observations\n  741 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512066.8, 705559.4] x [9655398, 9834006]\n\nTemporal bound\n  [1, 12]\n\nEvaluation\n  128 x 128 x 12 trivariate lattice\n  Density range: [1.233458e-27, 8.202976e-10]\n\n\nVisualize the kde\n\ntims &lt;- c(7,8,9,10,11,12)\npar(mfcol = c(2,3))\nfor(i in tims) {\n  plot(st_kde, i,\n       override.par = F,\n       fix.range = T,\n       main=paste(\"KDE at month\",i))\n  }"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#altenative-method",
    "href": "in-class_ex/ex04/ic_ex04.html#altenative-method",
    "title": "In-class Exercise 4",
    "section": "3.3 Altenative method",
    "text": "3.3 Altenative method\n\nff_doy &lt;- ff_sf %&gt;%\n  select(DayofYear) %&gt;% \n  as.ppp()\n\nff_doy_owin &lt;- ff_doy[kbb_owin]\nplot(ff_doy_owin)\n\n\n\n\n\n\n\n\n\n# Take yday owin\nst_doy_kde &lt;- spattemp.density(ff_doy_owin)\nsummary(st_doy_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 15102.47 (spatial)\n  lambda = 6.3198 (temporal)\n\nNo. of observations\n  741 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512066.8, 705559.4] x [9655398, 9834006]\n\nTemporal bound\n  [10, 352]\n\nEvaluation\n  128 x 128 x 343 trivariate lattice\n  Density range: [3.959516e-27, 2.751287e-12]\n\n\nCheckout animation (https://tilmandavies.github.io/sparr/articles/fmd_animation/fmd_animation.html) to see the diffusion"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html",
    "href": "in-class_ex/ex09/ic_ex09.html",
    "title": "In-class Exercise 9",
    "section": "",
    "text": "pacman::p_load(spdep, sp, tmap, sf, ClustGeo, \n               cluster, factoextra, NbClust,\n               tidyverse, GGally)\n\n\nshan_sf &lt;- read_rds(\"./data/rds/shan_sf.rds\")\nshan_ict &lt;- read_rds(\"./data/rds/shan_ict.rds\")"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#hirearchical-clustering",
    "href": "in-class_ex/ex09/ic_ex09.html#hirearchical-clustering",
    "title": "In-class Exercise 9",
    "section": "2.1 Hirearchical Clustering",
    "text": "2.1 Hirearchical Clustering\n\nproxmat &lt;- dist(shan_ict, method = 'euclidean')\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#appending-sf-to-cluster",
    "href": "in-class_ex/ex09/ic_ex09.html#appending-sf-to-cluster",
    "title": "In-class Exercise 9",
    "section": "2.2 Appending sf to cluster",
    "text": "2.2 Appending sf to cluster\n\nshan_sf_cluster &lt;- cbind(shan_sf, \n                         as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`) %&gt;%\n  select(-c(3:4, 7:9)) %&gt;%\n  rename(TS = TS.x)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#plot-dendogram",
    "href": "in-class_ex/ex09/ic_ex09.html#plot-dendogram",
    "title": "In-class Exercise 9",
    "section": "2.3 Plot dendogram",
    "text": "2.3 Plot dendogram\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, k = 6, border = 2.5)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#plot-clusters",
    "href": "in-class_ex/ex09/ic_ex09.html#plot-clusters",
    "title": "In-class Exercise 9",
    "section": "2.4 Plot Clusters",
    "text": "2.4 Plot Clusters\n\nqtm(shan_sf_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#computing-spatial-dist-mat",
    "href": "in-class_ex/ex09/ic_ex09.html#computing-spatial-dist-mat",
    "title": "In-class Exercise 9",
    "section": "3.1 Computing Spatial Dist Mat",
    "text": "3.1 Computing Spatial Dist Mat\n\nshan.nb &lt;- poly2nb(shan_sf)\nsummary(shan.nb)\n\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#visualizing-neighbours",
    "href": "in-class_ex/ex09/ic_ex09.html#visualizing-neighbours",
    "title": "In-class Exercise 9",
    "section": "3.2 Visualizing Neighbours",
    "text": "3.2 Visualizing Neighbours\n\nplot(st_geometry(shan_sf), border=grey(.5))\npts &lt;- st_coordinates(st_centroid(shan_sf))\nplot(shan.nb, pts, col=\"blue\", add=TRUE)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#compute-edge-cost-and-visualzie-mst",
    "href": "in-class_ex/ex09/ic_ex09.html#compute-edge-cost-and-visualzie-mst",
    "title": "In-class Exercise 9",
    "section": "3.3 Compute edge cost and visualzie MST",
    "text": "3.3 Compute edge cost and visualzie MST\n\nlcosts &lt;- nbcosts(shan.nb, shan_ict)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#incomprate-cost-into-weight-objects",
    "href": "in-class_ex/ex09/ic_ex09.html#incomprate-cost-into-weight-objects",
    "title": "In-class Exercise 9",
    "section": "3.4 Incomprate cost into weight objects",
    "text": "3.4 Incomprate cost into weight objects\n\nshan.w &lt;- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#compute-mst",
    "href": "in-class_ex/ex09/ic_ex09.html#compute-mst",
    "title": "In-class Exercise 9",
    "section": "3.5 Compute MST",
    "text": "3.5 Compute MST\n\nshan.mst &lt;- mstree(shan.w)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#visualize-mst",
    "href": "in-class_ex/ex09/ic_ex09.html#visualize-mst",
    "title": "In-class Exercise 9",
    "section": "3.6 Visualize MST",
    "text": "3.6 Visualize MST\n\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot.mst(shan.mst, \n         pts, \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#compute-cluster-using-skater",
    "href": "in-class_ex/ex09/ic_ex09.html#compute-cluster-using-skater",
    "title": "In-class Exercise 9",
    "section": "3.7 Compute cluster using SKATER",
    "text": "3.7 Compute cluster using SKATER\n\nskater.clust6 &lt;- skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5) #Cluster N-1"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#visualize-the-skater-tree",
    "href": "in-class_ex/ex09/ic_ex09.html#visualize-the-skater-tree",
    "title": "In-class Exercise 9",
    "section": "3.8 Visualize the SKATER tree",
    "text": "3.8 Visualize the SKATER tree\n\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot(skater.clust6, \n     pts, \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#visualize-cluster",
    "href": "in-class_ex/ex09/ic_ex09.html#visualize-cluster",
    "title": "In-class Exercise 9",
    "section": "3.9 Visualize Cluster",
    "text": "3.9 Visualize Cluster\n\ngroups_mat &lt;- as.matrix(skater.clust6$groups)\nshan_sf_spatialcluster &lt;- cbind(shan_sf_cluster, as.factor(groups_mat)) %&gt;%\n  rename(`skater_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"skater_CLUSTER\")\n\n\n\n\n\n\n\n\n\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.8, 0.6))\n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"skater_CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#computing-spatial-dist-mat-1",
    "href": "in-class_ex/ex09/ic_ex09.html#computing-spatial-dist-mat-1",
    "title": "In-class Exercise 9",
    "section": "## 4.1 Computing Spatial Dist Mat",
    "text": "## 4.1 Computing Spatial Dist Mat\n\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#cluster-graph",
    "href": "in-class_ex/ex09/ic_ex09.html#cluster-graph",
    "title": "In-class Exercise 9",
    "section": "4.2 Cluster graph",
    "text": "4.2 Cluster graph\n\ncr &lt;- choicealpha(proxmat, distmat, \n                  range.alpha = seq(0, 1, 0.1), \n                  K=6, graph = TRUE)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#clustgeo-clustering",
    "href": "in-class_ex/ex09/ic_ex09.html#clustgeo-clustering",
    "title": "In-class Exercise 9",
    "section": "4.3 Clustgeo Clustering",
    "text": "4.3 Clustgeo Clustering\n\nclustG &lt;- hclustgeo(proxmat, distmat, alpha = 0.2)\ngroups &lt;- as.factor(cutree(clustG, k=6))\nshan_sf_clustGeo &lt;- cbind(shan_sf, \n                          as.matrix(groups)) %&gt;%\n  rename(`clustGeo` = `as.matrix.groups.`)\n\n\nqtm(shan_sf_clustGeo, \"clustGeo\")\n\n\n\n\n\n\n\n\n\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.8, 0.6))\n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"skater_CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\nclustGeo.map &lt;- qtm(shan_sf_clustGeo,\n                   \"clustGeo\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\ntmap_arrange(hclust.map, shclust.map, \n             clustGeo.map,\n             asp=NA, ncol=3)"
  },
  {
    "objectID": "in-class_ex/ex09/ic_ex09.html#parallel-coordinates",
    "href": "in-class_ex/ex09/ic_ex09.html#parallel-coordinates",
    "title": "In-class Exercise 9",
    "section": "4.4 Parallel Coordinates",
    "text": "4.4 Parallel Coordinates\n\nggparcoord(data = shan_sf_clustGeo, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ clustGeo) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\n\nUse parallel coordinates to understand your cluster &lt; 0.8 correlation can consider"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html",
    "href": "take-home_ex/ex03/th_ex03.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "Crime is a pressing issue in Malaysia, impacting both urban and rural communities. Understanding the spatial and temporal patterns of crime is crucial for law enforcement agencies to allocate resources effectively and implement targeted crime prevention strategies. Traditional crime analysis methods often rely on basic statistical analysis and simple geographic visualizations. However, by employing advanced statistical techniques such as clustering, we can delve deeper into the underlying factors driving crime and identify specific hotspots or crime clusters.\n\n\nThis project aims to leverage spatial clustering techniques to identify distinct crime patterns and analyze the socio-economic factors associated with these patterns. By integrating crime data with additional socio-economic indicators such as labor force statistics and inequality measures, we can gain a more comprehensive understanding of the factors influencing crime in Malaysia (West).\n\n\n\n\nApply spatial clustering techniques to visualize similar regions based on crime patterns enriched with socio-economic data.\nInterpret and analyse spatial clusters with crime characteristics and their relationship with socio-economic factors and deem their suitability for the Shiny application.\nDevelop a storyboard for the Shiny application incoperating effective and interative visualizations to communicate the findings to a diverse audience."
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#motivation",
    "href": "take-home_ex/ex03/th_ex03.html#motivation",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "This project aims to leverage spatial clustering techniques to identify distinct crime patterns and analyze the socio-economic factors associated with these patterns. By integrating crime data with additional socio-economic indicators such as labor force statistics and inequality measures, we can gain a more comprehensive understanding of the factors influencing crime in Malaysia (West)."
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#objectives",
    "href": "take-home_ex/ex03/th_ex03.html#objectives",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "Apply spatial clustering techniques to visualize similar regions based on crime patterns enriched with socio-economic data.\nInterpret and analyse spatial clusters with crime characteristics and their relationship with socio-economic factors and deem their suitability for the Shiny application.\nDevelop a storyboard for the Shiny application incoperating effective and interative visualizations to communicate the findings to a diverse audience."
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#packages-required",
    "href": "take-home_ex/ex03/th_ex03.html#packages-required",
    "title": "Take-home Exercise 3",
    "section": "2.1 Packages Required",
    "text": "2.1 Packages Required\nThe following will be the packages used for this study and the Shiny Application:\n\npacman::p_load(sf, st, tidyverse, raster, tmap, tmaptools, ggplot2, gridExtra, spatstat, sfdep, spdep, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, GGally)\n\n\nsf: For working with simple features, a standard for spatial data in R.\ntidyverse: A collection of packages for data manipulation and visualization, including dplyr, tidyr, ggplot2, etc.\ntmap: For creating static and interactive maps.\nggplot2: A powerful visualization package for creating static plots.\ngridExtra: For arranging multiple plots on a single page.\nsfdep: For spatial dependency analysis.\nClustGeo: For spatial clustering analysis.\ncluster: For various clustering algorithms, including K-means and hierarchical clustering.\nfactoextra: For visualizing and evaluating clustering results.\nNbClust: For determining the optimal number of clusters.\nheatmaply: For creating interactive heatmaps.\ncorrplot: For visualizing correlation matrices.\nGGally: For advanced data visualization, including pair plots and correlation plots."
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#data-required",
    "href": "take-home_ex/ex03/th_ex03.html#data-required",
    "title": "Take-home Exercise 3",
    "section": "2.2 Data Required",
    "text": "2.2 Data Required\nThere are a total of 5 aspatial datasets used in this project.\n\nMalaysia – Crime by District and Crime Type from data.gov.my in csv format.\nMalaysia - Subnational Administrative Boundaries with included administrative regions in shapefile format.\nMalaysia – Annual Principal Labour Force Statistics by District from data.gov.my in csv format.\nMalaysia – Poverty by Administrative District from data.gov.my in csv format.\nMalaysia – Income Inequality by District from data.gov.my in csv format.\nMalaysia – Population by District from data.gov.my in csv format.\n\n\n2.2.1 Aspatial Data\nWe start by importing the crime rate and population csv file into R.\n\ncrime_df &lt;- read_csv(\"data/aspatial/crime_district.csv\")\npopulation_df &lt;- read_csv(\"data/aspatial/population_district.csv\")\n\n\n\n2.2.2 Geospatial Data\nNext, we import the administrative (Level 2, District) regions of Malaysia.\n\nmys_sf &lt;- read_sf(dsn = \"data/geospatial/mys_adm_unhcr_20210211_shp\", \n                 layer = \"mys_admbnda_adm2_unhcr_20210211\") %&gt;%\n          st_transform(crs = 3168)\n\n\n\n2.2.3 Enrichment Data\nWe will also be importing and working we several other potentially related data to crime rates in Malaysia and uncover if there is any further insights which could be extracted from their usage. The following teh details of the fields:\n\nPoverty by District: Poverty rates by administrative district from 2019 to 2022\n\n\npoverty_absolute: Proportion of households with monthly income below the Poverty Line Income (PLI)\npoverty_relative: Proportion of households with monthly income below half the district median income\n\n\nInequality by District: Gini coefficient by administrative district from 2019 to 2022.\n\n\ngini: The Gini coefficient based on the distribution of households’ gross monthly income\n\n\nLabour Force Statistics by District: Annual principal labour force statistics at district level, including unemployment and participation rates.\n\n\nlf: The number (in thousands) of employed and unemployed individuals. This figure also represents the number of people participating in the labour force.\nlf_employed: The number (in thousands) of people who worked at least one hour for pay, profit or family gain, in thousands of people\nlf_unemployed: The number (in thousands) of people who did not work but were looking for work or available to work\nlf_outside: The number (in thousands) of people not classified as employed or unemployed, including housewives, students, early retired, disabled persons and those not interested in looking for a job\nu_rate: Ratio of unemployed to labour force size\np_rate: Ratio of the labour force size to the working-age (15-64) population\nep_ratio: Ratio of the number of employed people to the working-age (15-64) population\n\n\npoverty_df &lt;- read_csv(\"data/aspatial/poverty_district.csv\")\ninequality_df &lt;- read_csv(\"data/aspatial/inequality_district.csv\")\nlabour_df &lt;- read_csv(\"data/aspatial/labour_district.csv\")"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#wrangling",
    "href": "take-home_ex/ex03/th_ex03.html#wrangling",
    "title": "Take-home Exercise 3",
    "section": "2.3 Wrangling",
    "text": "2.3 Wrangling\nNext we shall prepare our data for analysis, which includes proper mapping of data and joining for the aspatial datasets with the geospatial dataset.\n\n2.3.1 Data Preparation\nBefore we can check the mappings we convert state and district to upper to ensure a smooth matching and join. We also extracted the year as a column since the aspatial data are all annual.\n\nCrimePopulationMalaysia\n\n\nConvert state and district to upper for matching\n\ncrime_df &lt;- crime_df %&gt;%\n              mutate(year = year(date),\n                     state = toupper(state),\n                     district = toupper(district))\ncrime_df\n\n# A tibble: 19,152 × 7\n   state    district category type           date       crimes  year\n   &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;          &lt;date&gt;      &lt;dbl&gt; &lt;dbl&gt;\n 1 MALAYSIA ALL      assault  all            2016-01-01  22327  2016\n 2 MALAYSIA ALL      assault  all            2017-01-01  21366  2017\n 3 MALAYSIA ALL      assault  all            2018-01-01  16902  2018\n 4 MALAYSIA ALL      assault  all            2019-01-01  16489  2019\n 5 MALAYSIA ALL      assault  all            2020-01-01  13279  2020\n 6 MALAYSIA ALL      assault  all            2021-01-01  11495  2021\n 7 MALAYSIA ALL      assault  all            2022-01-01  10348  2022\n 8 MALAYSIA ALL      assault  all            2023-01-01  10453  2023\n 9 MALAYSIA ALL      assault  causing_injury 2016-01-01   5531  2016\n10 MALAYSIA ALL      assault  causing_injury 2017-01-01   5024  2017\n# ℹ 19,142 more rows\n\n\n\n\n\npopulation_df &lt;- population_df %&gt;%\n              mutate(year = year(date),\n                     state = toupper(state),\n                     district = toupper(district))\npopulation_df\n\n# A tibble: 319,200 × 8\n   state district   date       sex   age     ethnicity        population  year\n   &lt;chr&gt; &lt;chr&gt;      &lt;date&gt;     &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;                 &lt;dbl&gt; &lt;dbl&gt;\n 1 JOHOR BATU PAHAT 2020-01-01 both  overall overall               495.   2020\n 2 JOHOR BATU PAHAT 2020-01-01 both  overall bumi_malay            311.   2020\n 3 JOHOR BATU PAHAT 2020-01-01 both  overall bumi_other              5.1  2020\n 4 JOHOR BATU PAHAT 2020-01-01 both  overall chinese               140.   2020\n 5 JOHOR BATU PAHAT 2020-01-01 both  overall indian                  6.9  2020\n 6 JOHOR BATU PAHAT 2020-01-01 both  overall other_citizen           1.8  2020\n 7 JOHOR BATU PAHAT 2020-01-01 both  overall other_noncitizen       30.2  2020\n 8 JOHOR BATU PAHAT 2020-01-01 both  0-4     overall                30.3  2020\n 9 JOHOR BATU PAHAT 2020-01-01 both  0-4     bumi_malay             21.3  2020\n10 JOHOR BATU PAHAT 2020-01-01 both  0-4     bumi_other              0.5  2020\n# ℹ 319,190 more rows\n\n\n\n\n\nmys_sf &lt;- mys_sf %&gt;%\n          mutate(ADM1_EN = toupper(ADM1_EN),\n                 ADM2_EN = toupper(ADM2_EN))\n\nmys_sf\n\nSimple feature collection with 144 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 94420.8 xmax: 2380932 ymax: 829136\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 144 × 15\n   ADM2_EN  ADM2_PCODE ADM2_REF ADM2ALT1EN ADM2ALT2EN ADM1_EN ADM1_PCODE ADM0_EN\n * &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;  \n 1 BATU PA… MY0101     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 2 JOHOR B… MY0102     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 3 KLUANG   MY0103     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 4 KOTA TI… MY0104     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 5 KULAIJA… MY0105     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 6 LEDANG   MY0106     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 7 MERSING  MY0107     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 8 MUAR     MY0108     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 9 PONTIAN  MY0109     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n10 SEGAMAT  MY0110     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n# ℹ 134 more rows\n# ℹ 7 more variables: ADM0_PCODE &lt;chr&gt;, date &lt;date&gt;, validOn &lt;date&gt;,\n#   validTo &lt;date&gt;, Shape_Leng &lt;dbl&gt;, Shape_Area &lt;dbl&gt;,\n#   geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\n\n\n2.3.2 State Mismatch\nNext we check for any mismatch on ADM1 (State-level)\n\nOverviewDifference\n\n\n\nprint(\"Unique states in crime_df:\")\n\n[1] \"Unique states in crime_df:\"\n\nunique(crime_df$state)\n\n [1] \"MALAYSIA\"          \"JOHOR\"             \"KEDAH\"            \n [4] \"KELANTAN\"          \"MELAKA\"            \"NEGERI SEMBILAN\"  \n [7] \"PAHANG\"            \"PERAK\"             \"PERLIS\"           \n[10] \"PULAU PINANG\"      \"SABAH\"             \"SARAWAK\"          \n[13] \"SELANGOR\"          \"TERENGGANU\"        \"W.P. KUALA LUMPUR\"\n\nprint(\"Unique states in population_df:\")\n\n[1] \"Unique states in population_df:\"\n\nunique(population_df$state)\n\n [1] \"JOHOR\"             \"KEDAH\"             \"KELANTAN\"         \n [4] \"MELAKA\"            \"NEGERI SEMBILAN\"   \"PAHANG\"           \n [7] \"PERAK\"             \"PERLIS\"            \"PULAU PINANG\"     \n[10] \"SABAH\"             \"SARAWAK\"           \"SELANGOR\"         \n[13] \"TERENGGANU\"        \"W.P. KUALA LUMPUR\" \"W.P. LABUAN\"      \n[16] \"W.P. PUTRAJAYA\"   \n\nprint(\"Unique states in mys_sf:\")\n\n[1] \"Unique states in mys_sf:\"\n\nunique(mys_sf$ADM1_EN)\n\n [1] \"JOHOR\"             \"KEDAH\"             \"KELANTAN\"         \n [4] \"W.P. KUALA LUMPUR\" \"W.P. LABUAN\"       \"MELAKA\"           \n [7] \"NEGERI SEMBILAN\"   \"PAHANG\"            \"PERAK\"            \n[10] \"PERLIS\"            \"PULAU PINANG\"      \"SABAH\"            \n[13] \"SARAWAK\"           \"TERENGGANU\"        \"W.P. PUTRAJAYA\"   \n[16] \"SELANGOR\"         \n\n\nAt first glance we can see a mismatch in the length of the states.\n\n\n\nstate_crime &lt;- unique(crime_df$state)\nstate_sf &lt;- unique(mys_sf$ADM1_EN)\n\nmissing_in_sf &lt;- setdiff(state_crime, state_sf)\nmissing_in_crime &lt;- setdiff(state_sf, state_crime)\n\nprint(\"States in crime_df not found in mys_sf:\")\n\n[1] \"States in crime_df not found in mys_sf:\"\n\nprint(missing_in_sf)\n\n[1] \"MALAYSIA\"\n\nprint(\"States in mys_sf not found in crime_df:\")\n\n[1] \"States in mys_sf not found in crime_df:\"\n\nprint(missing_in_crime)\n\n[1] \"W.P. LABUAN\"    \"W.P. PUTRAJAYA\"\n\n\nIt seems like crime_df also have a row for the aggregated crime rates for the whole of Malaysia. Whereas W.P. LABUAN, W.P. PUTRAJAYA are not found in the spatial dataset.\n\n\n\n\n\n2.3.3 State Wrangling\nFor this project we will be focusing on West Malaysia, and thus will be filtering out Sarawak, Sabah and Labuan. To address the issue identified above we will be mapping: ‘W.P. PUTRAJAYA’ -&gt; ‘KUALA LUMPUR’.\n\nCrimePopulationMalaysia\n\n\n\ncrime_df &lt;- crime_df %&gt;%\n              filter(state != 'MALAYSIA' & state != 'SABAH' & state != 'SARAWAK' & \n                     district != 'ALL' & type != 'all') %&gt;%\n              mutate(state = replace(state, state == 'W.P. KUALA LUMPUR', 'KUALA LUMPUR'))\ncrime_df\n\n# A tibble: 10,368 × 7\n   state district   category type           date       crimes  year\n   &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt;          &lt;date&gt;      &lt;dbl&gt; &lt;dbl&gt;\n 1 JOHOR BATU PAHAT assault  causing_injury 2016-01-01     39  2016\n 2 JOHOR BATU PAHAT assault  causing_injury 2017-01-01     41  2017\n 3 JOHOR BATU PAHAT assault  causing_injury 2018-01-01     28  2018\n 4 JOHOR BATU PAHAT assault  causing_injury 2019-01-01     41  2019\n 5 JOHOR BATU PAHAT assault  causing_injury 2020-01-01     43  2020\n 6 JOHOR BATU PAHAT assault  causing_injury 2021-01-01     22  2021\n 7 JOHOR BATU PAHAT assault  causing_injury 2022-01-01     19  2022\n 8 JOHOR BATU PAHAT assault  causing_injury 2023-01-01     22  2023\n 9 JOHOR BATU PAHAT assault  murder         2016-01-01      6  2016\n10 JOHOR BATU PAHAT assault  murder         2017-01-01      0  2017\n# ℹ 10,358 more rows\n\n\n\n\n\npopulation_df &lt;- population_df %&gt;%\n          filter(state != 'SABAH' & state != 'SARAWAK' & state != 'W.P. LABUAN' &\n                 sex == \"both\" & age == \"overall\" & ethnicity == \"overall\" ) %&gt;%\n          mutate(state = replace(state, state == 'W.P. KUALA LUMPUR', 'KUALA LUMPUR'),\n                 state = replace(state, state == 'W.P. PUTRAJAYA', 'KUALA LUMPUR')) %&gt;%\n          dplyr::select(state, district, year, population)\npopulation_df\n\n# A tibble: 276 × 4\n   state district     year population\n   &lt;chr&gt; &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;\n 1 JOHOR BATU PAHAT   2020      495. \n 2 JOHOR JOHOR BAHRU  2020     1711. \n 3 JOHOR KLUANG       2020      324. \n 4 JOHOR KOTA TINGGI  2020      222. \n 5 JOHOR KULAI        2020      330. \n 6 JOHOR MERSING      2020       78.2\n 7 JOHOR MUAR         2020      315. \n 8 JOHOR PONTIAN      2020      173. \n 9 JOHOR SEGAMAT      2020      198. \n10 JOHOR TANGKAK      2020      163. \n# ℹ 266 more rows\n\n\n\n\n\nmys_sf &lt;- mys_sf %&gt;%\n          filter(ADM1_EN != 'W.P. LABUAN' & ADM1_EN != 'SABAH' & ADM1_EN != 'SARAWAK') %&gt;%\n          mutate(ADM1_EN = replace(ADM1_EN, ADM1_EN == 'W.P. KUALA LUMPUR', 'KUALA LUMPUR'),\n                 ADM1_EN = replace(ADM1_EN, ADM1_EN == 'W.P. PUTRAJAYA', 'KUALA LUMPUR'))\n\nmys_sf\n\nSimple feature collection with 87 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 87 × 15\n   ADM2_EN  ADM2_PCODE ADM2_REF ADM2ALT1EN ADM2ALT2EN ADM1_EN ADM1_PCODE ADM0_EN\n * &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;  \n 1 BATU PA… MY0101     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 2 JOHOR B… MY0102     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 3 KLUANG   MY0103     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 4 KOTA TI… MY0104     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 5 KULAIJA… MY0105     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 6 LEDANG   MY0106     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 7 MERSING  MY0107     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 8 MUAR     MY0108     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n 9 PONTIAN  MY0109     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n10 SEGAMAT  MY0110     &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt;       JOHOR   MY01       Malays…\n# ℹ 77 more rows\n# ℹ 7 more variables: ADM0_PCODE &lt;chr&gt;, date &lt;date&gt;, validOn &lt;date&gt;,\n#   validTo &lt;date&gt;, Shape_Leng &lt;dbl&gt;, Shape_Area &lt;dbl&gt;,\n#   geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\n\n\n\n\n\n\nW.P. PUTRAJAYA -&gt; KUALA LUMPUR ??\n\n\n\nIt is noted that W.P. PUTRAJAYA is within SELANGOR but for the ease of joining with subsequent data it will mapped under KUALA LUMPUR state\n\n\n\n\n2.3.4 State-District Wrangling (Crime)\nNext we will be wrangling the data on the district level, the methodology is similar as above: 1. Check difference of unique state_district 2. Address difference by mapping district not found within mys_sf into available districts 3. Aggregate the newly mapped variables under a similar district\n\n2.3.4.1 State-District Mismatch\n\ncrime_df &lt;- crime_df %&gt;% mutate(state_district = paste(state, district, sep = \"-\"))\nmys_sf &lt;- mys_sf %&gt;% mutate(state_district = paste(ADM1_EN, ADM2_EN, sep = \"-\"))\n\n\nstate_district_crime &lt;- unique(crime_df$state_district)\nstate_district_sf &lt;- unique(mys_sf$state_district)\n\nmissing_in_sf &lt;- setdiff(state_district_crime, state_district_sf)\nmissing_in_crime &lt;- setdiff(state_district_sf, state_district_crime)\n\nprint(\"State-District combinations in crime_df not found in mys_sf:\")\n\n[1] \"State-District combinations in crime_df not found in mys_sf:\"\n\nprint(missing_in_sf)\n\n [1] \"JOHOR-ISKANDAR PUTERI\"               \"JOHOR-JOHOR BAHRU SELATAN\"          \n [3] \"JOHOR-JOHOR BAHRU UTARA\"             \"JOHOR-NUSAJAYA\"                     \n [5] \"JOHOR-SERI ALAM\"                     \"KEDAH-BANDAR BHARU\"                 \n [7] \"NEGERI SEMBILAN-NILAI\"               \"PAHANG-CAMERON HIGHLAND\"            \n [9] \"PAHANG-KUALA LIPIS\"                  \"PERAK-BATU GAJAH\"                   \n[11] \"PERAK-GERIK\"                         \"PERAK-IPOH\"                         \n[13] \"PERAK-MANJUNG\"                       \"PERAK-PENGKALAN HULU\"               \n[15] \"PERAK-SELAMA\"                        \"PERAK-SUNGAI SIPUT\"                 \n[17] \"PERAK-TAIPING\"                       \"PERAK-TANJONG MALIM\"                \n[19] \"PERAK-TAPAH\"                         \"PERLIS-ARAU\"                        \n[21] \"PERLIS-KANGAR\"                       \"PERLIS-PADANG BESAR\"                \n[23] \"PULAU PINANG-SEBERANG PERAI SELATAN\" \"PULAU PINANG-SEBERANG PERAI TENGAH\" \n[25] \"PULAU PINANG-SEBERANG PERAI UTARA\"   \"SELANGOR-AMPANG JAYA\"               \n[27] \"SELANGOR-HULU SELANGOR\"              \"SELANGOR-KAJANG\"                    \n[29] \"SELANGOR-KLANG SELATAN\"              \"SELANGOR-KLANG UTARA\"               \n[31] \"SELANGOR-PETALING JAYA\"              \"SELANGOR-SERDANG\"                   \n[33] \"SELANGOR-SG. BULOH\"                  \"SELANGOR-SHAH ALAM\"                 \n[35] \"SELANGOR-SUBANG JAYA\"                \"SELANGOR-SUNGAI BULOH\"              \n[37] \"KUALA LUMPUR-BRICKFIELDS\"            \"KUALA LUMPUR-CHERAS\"                \n[39] \"KUALA LUMPUR-DANG WANGI\"             \"KUALA LUMPUR-SENTUL\"                \n[41] \"KUALA LUMPUR-WANGSA MAJU\"           \n\nprint(\"State-District combinations in mys_sf not found in crime_df:\")\n\n[1] \"State-District combinations in mys_sf not found in crime_df:\"\n\nprint(missing_in_crime)\n\n [1] \"JOHOR-JOHOR BAHRU\"             \"KEDAH-POKOK SENA\"             \n [3] \"KUALA LUMPUR-WP. KUALA LUMPUR\" \"PAHANG-LIPIS\"                 \n [5] \"PERAK-BATANG PADANG\"           \"PERAK-ULU PERAK\"              \n [7] \"PERAK-KINTA\"                   \"PERAK-LARUT DAN MATANG\"       \n [9] \"PERAK-MANJUNG (DINDING)\"       \"PERLIS-PERLIS\"                \n[11] \"PULAU PINANG-S.P.SELATAN\"      \"PULAU PINANG-S.P. TENGAH\"     \n[13] \"PULAU PINANG-S.P. UTARA\"       \"SELANGOR-ULU LANGAT\"          \n[15] \"SELANGOR-ULU SELANGOR\"         \"SELANGOR-KLANG\"               \n[17] \"SELANGOR-PETALING\"            \n\n\nThat is alot of mismatch! The process involves checking the available districts in mys_sf and assiging the districts.\n\n\n2.3.4.2 Re-Mapping Districts\nAfter the team sat down to sort out the mapping this is the list of mapping to address the above mismatch.\n\ncrime_df &lt;- crime_df %&gt;%\n  mutate(district = case_when(\n    state == \"JOHOR\" & district %in% c(\"ISKANDAR PUTERI\", \"NUSAJAYA\", \"JOHOR BAHRU SELATAN\", \"JOHOR BAHRU UTARA\", \"SERI ALAM\") ~ \"JOHOR BAHRU\",\n    state == \"NEGERI SEMBILAN\" & district == \"NILAI\" ~ \"SEREMBAN\",\n    state == \"KEDAH\" & district == \"BANDAR BHARU\" ~ \"BANDAR BAHARU\",\n    state == \"PAHANG\" & district == \"CAMERON HIGHLAND\" ~ \"CAMERON HIGHLANDS\",\n    state == \"PAHANG\" & district == \"KUALA LIPIS\" ~ \"LIPIS\",\n    state == \"PERAK\" & district  %in% c(\"BATU GAJAH\", \"IPOH\") ~ \"KINTA\",\n    state == \"PERAK\" & district == \"GERIK\" ~ \"ULU PERAK\",\n    state == \"PERAK\" & district == \"MANJUNG\" ~ \"MANJUNG (DINDING)\",\n    state == \"PERAK\" & district == \"PENGKALAN HULU\" ~ \"ULU PERAK\",\n    state == \"PERAK\" & district %in% c(\"SELAMA\", \"TAIPING\") ~ \"LARUT DAN MATANG\",\n    state == \"PERAK\" & district == \"SUNGAI SIPUT\" ~ \"KUALA KANGSAR\",\n    state == \"PERAK\" & district %in% c(\"TANJONG MALIM\", \"TAPAH\") ~ \"BATANG PADANG\",\n    state == \"PERLIS\" & district %in% c(\"ARAU\", \"KANGAR\", \"PADANG BESAR\") ~ \"PERLIS\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI SELATAN\" ~ \"S.P.SELATAN\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI TENGAH\" ~ \"S.P. TENGAH\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI UTARA\" ~ \"S.P. UTARA\",\n    state == \"SELANGOR\" & district == \"AMPANG JAYA\" ~ \"GOMBAK\",\n    state == \"SELANGOR\" & district == \"HULU SELANGOR\" ~ \"ULU SELANGOR\",\n    state == \"SELANGOR\" & district == \"KAJANG\" ~ \"ULU LANGAT\",\n    state == \"SELANGOR\" & district %in% c(\"KLANG SELATAN\", \"KLANG UTARA\") ~ \"KLANG\",\n    state == \"SELANGOR\" & district %in% c(\"PETALING JAYA\", \"SERDANG\", \"SG. BULOH\", \"SHAH ALAM\", \"SUBANG JAYA\", \"SUNGAI BULOH\") ~ \"PETALING\",\n    state == \"KUALA LUMPUR\" & district %in% c(\"BRICKFIELDS\", \"CHERAS\", \"DANG WANGI\", \"SENTUL\", \"WANGSA MAJU\") ~ \"WP. KUALA LUMPUR\",\n    TRUE ~ district\n  )) %&gt;%\n  group_by(state, district, year, category, type) %&gt;%\n  summarise(crimes = sum(crimes))\n\n\n\n\n\n\n\nType of issues\n\n\n\n\nThe common issue are related to translation, or districts with different names e.g. “PENGKALAN HULU” ~ “ULU PERAK”\nSome comes down to preferences e.g. “CAMERON HIGHLAND” ~ “CAMERON HIGHLANDS”, “MANJUNG” ~ “MANJUNG (DINDING)”,\nAnd in some cases a district may be broken down into sub-districts e.g. c(“PETALING JAYA”, “SERDANG”, “SG. BULOH”, “SHAH ALAM”, “SUBANG JAYA”, “SUNGAI BULOH”) ~ “PETALING”,\n\n\n\n\n\n2.3.4.3 Crime Distribution\nIn the following we can see the distribution of crime rates (raw) on the map of West Malaysia. Note that the crime rates happens to be higher where the population is higher such as in Johor Bahru and Kuala Lumpur.\n\nVisualizationTable\n\n\n\nog_crime_df_mys &lt;- crime_df %&gt;%\n  filter(year &gt;= 2019 & year &lt;= 2022) %&gt;%\n  left_join(mys_sf, by = c(\"state\" = \"ADM1_EN\", \"district\" = \"ADM2_EN\")) %&gt;%\n  dplyr::select(state, district, year, category, type, crimes, geometry)\n\nog_crime_df_mys &lt;- st_as_sf(og_crime_df_mys)\n\nog_crime_df_mys_grp &lt;- og_crime_df_mys %&gt;%\n  group_by(state, district) %&gt;%\n  summarize(total_crimes = sum(crimes)/4)\n\nmys_map &lt;- tm_shape(mys_sf) +\n  tm_polygons(col = \"lightgray\", alpha = 0.3) +\n  tm_text(\"ADM2_EN\", size = 0.3) +\n  tm_layout(main.title = \"Districts (West Malaysia)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2)\n\nchoro_map &lt;- tm_shape(og_crime_df_mys_grp) +\n  tm_fill(\"total_crimes\", \n          style = \"pretty\", \n          palette = \"Oranges\",\n          title = \"Crimes\") +\n  tm_layout(main.title = \"Crime Distribution (West Malaysia)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2, position = c(\"right\", \"top\")) +\n  tm_grid(alpha =0.2)\n\ntmap_arrange(choro_map, mys_map, ncol = 2)\n\n\n\n\n\n\n\n\n\n\n\nog_crime_df_mys\n\nSimple feature collection with 4128 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 4,128 × 7\n# Groups:   state, district, year, category [688]\n   state district    year category type         crimes                  geometry\n   &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;         &lt;dbl&gt;        &lt;MULTIPOLYGON [m]&gt;\n 1 JOHOR BATU PAHAT  2019 assault  causing_inj…     41 (((556714.6 192051.6, 55…\n 2 JOHOR BATU PAHAT  2019 assault  murder            3 (((556714.6 192051.6, 55…\n 3 JOHOR BATU PAHAT  2019 assault  rape             29 (((556714.6 192051.6, 55…\n 4 JOHOR BATU PAHAT  2019 assault  robbery_gan…      0 (((556714.6 192051.6, 55…\n 5 JOHOR BATU PAHAT  2019 assault  robbery_gan…     37 (((556714.6 192051.6, 55…\n 6 JOHOR BATU PAHAT  2019 assault  robbery_sol…      0 (((556714.6 192051.6, 55…\n 7 JOHOR BATU PAHAT  2019 assault  robbery_sol…     29 (((556714.6 192051.6, 55…\n 8 JOHOR BATU PAHAT  2019 property break_in        157 (((556714.6 192051.6, 55…\n 9 JOHOR BATU PAHAT  2019 property theft_other     127 (((556714.6 192051.6, 55…\n10 JOHOR BATU PAHAT  2019 property theft_vehic…      4 (((556714.6 192051.6, 55…\n# ℹ 4,118 more rows\n\n\n\n\n\n\n\n\n\n\n\nMissing Data (POKOK SENA)\n\n\n\nNote the missing data in POKOK SENA in crime_df, which we will be rectifying in the subsequent join with the crime aggregated by KEDAH state\n\n\n\n\n\n2.3.5 State-District Wrangling (Population)\nThe crime data provided is not sufficient to paint an accurate picture of the crime patterns in Malaysia as it is heavily skewed towards places with higher population, this will not be ideal for our analysis, hence we will be importing Population by district to adjust the crime accordingly.\n\n2.3.5.1 State-District Mismatch\nThe data for population is only available from 2020 - 2024. Since 2019 is missing from data set, we will do a best effort mapping where year: 2020 -&gt; 2019.\n\npopulation_row &lt;- population_df %&gt;%\n  filter(year == 2020) %&gt;%\n  mutate(year = 2019) \npopulation_df &lt;- bind_rows(population_df, population_row) %&gt;% \n  mutate(state_district = paste(state, district, sep = \"-\"))\nunique(population_df$year)\n\n[1] 2020 2021 2022 2019\n\n\nNext we check mismatch on the state-district.\n\nstate_district_population &lt;- unique(population_df$state_district)\n\nmissing_in_sf &lt;- setdiff(state_district_population, state_district_sf)\nmissing_in_population &lt;- setdiff(state_district_sf, state_district_population)\n\nprint(\"State-District combinations in population_df not found in mys_sf:\")\n\n[1] \"State-District combinations in population_df not found in mys_sf:\"\n\nprint(missing_in_sf)\n\n [1] \"JOHOR-KULAI\"                         \"JOHOR-TANGKAK\"                      \n [3] \"KELANTAN-KECIL LOJING\"               \"PERAK-BAGAN DATUK\"                  \n [5] \"PERAK-HULU PERAK\"                    \"PERAK-MANJUNG\"                      \n [7] \"PERAK-MUALLIM\"                       \"PERAK-SELAMA\"                       \n [9] \"PULAU PINANG-SEBERANG PERAI SELATAN\" \"PULAU PINANG-SEBERANG PERAI TENGAH\" \n[11] \"PULAU PINANG-SEBERANG PERAI UTARA\"   \"TERENGGANU-KUALA NERUS\"             \n[13] \"KUALA LUMPUR-W.P. KUALA LUMPUR\"      \"PAHANG-CAMERON HIGHLAND\"            \n[15] \"PULAU PINANG-SP SELATAN\"             \"PULAU PINANG-SP TENGAH\"             \n[17] \"PULAU PINANG-SP UTARA\"              \n\nprint(\"State-District combinations in mys_sf not found in population_df:\")\n\n[1] \"State-District combinations in mys_sf not found in population_df:\"\n\nprint(missing_in_population)\n\n[1] \"JOHOR-KULAIJAYA\"               \"JOHOR-LEDANG\"                 \n[3] \"KUALA LUMPUR-WP. KUALA LUMPUR\" \"PERAK-ULU PERAK\"              \n[5] \"PERAK-MANJUNG (DINDING)\"       \"PULAU PINANG-S.P.SELATAN\"     \n[7] \"PULAU PINANG-S.P. TENGAH\"      \"PULAU PINANG-S.P. UTARA\"      \n\n\n\n\n2.3.5.2 Re-Mapping Districts\nWe employed the similar methodology to map the Population data.\n\npopulation_df &lt;- population_df %&gt;%\n  mutate(district = case_when(\n    state == \"JOHOR\" & district == \"KULAI\" ~ \"KULAIJAYA\",\n    state == \"JOHOR\" & district == \"TANGKAK\" ~ \"LEDANG\",\n    state == \"KELANTAN\" & district == \"KECIL LOJING\" ~ \"GUA MUSANG\",\n    state == \"PAHANG\" & district == \"CAMERON HIGHLAND\" ~ \"CAMERON HIGHLANDS\",\n    state == \"PERAK\" & district == \"HULU PERAK\" ~ \"ULU PERAK\",\n    state == \"PERAK\" & district == \"BAGAN DATUK\" ~ \"HILIR PERAK\",\n    state == \"PERAK\" & district == \"MANJUNG\" ~ \"MANJUNG (DINDING)\",\n    state == \"PERAK\" & district == \"MUALLIM\" ~ \"BATANG PADANG\",\n    state == \"PERAK\" & district == \"SELAMA\" ~ \"LARUT DAN MATANG\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI SELATAN\" ~ \"S.P.SELATAN\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI TENGAH\" ~ \"S.P. TENGAH\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI UTARA\" ~ \"S.P. UTARA\",\n    state == \"PULAU PINANG\" & district == \"SP SELATAN\" ~ \"S.P.SELATAN\",\n    state == \"PULAU PINANG\" & district == \"SP TENGAH\" ~ \"S.P. TENGAH\",\n    state == \"PULAU PINANG\" & district == \"SP UTARA\" ~ \"S.P. UTARA\",\n    state == \"TERENGGANU\" & district == \"KUALA NERUS\" ~ \"KUALA TERENGGANU\",\n    state == \"KUALA LUMPUR\" & district == \"W.P. KUALA LUMPUR\" ~ \"WP. KUALA LUMPUR\",\n    TRUE ~ district\n  )) %&gt;%\n  group_by(state, district, year) %&gt;%\n  summarise(population = sum(population))\n\npopulation_df\n\n# A tibble: 348 × 4\n# Groups:   state, district [87]\n   state district     year population\n   &lt;chr&gt; &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;\n 1 JOHOR BATU PAHAT   2019       495.\n 2 JOHOR BATU PAHAT   2020       495.\n 3 JOHOR BATU PAHAT   2021       497.\n 4 JOHOR BATU PAHAT   2022       498.\n 5 JOHOR JOHOR BAHRU  2019      1711.\n 6 JOHOR JOHOR BAHRU  2020      1711.\n 7 JOHOR JOHOR BAHRU  2021      1715.\n 8 JOHOR JOHOR BAHRU  2022      1724.\n 9 JOHOR KLUANG       2019       324.\n10 JOHOR KLUANG       2020       324.\n# ℹ 338 more rows\n\n\n\n\n2.3.5.3 Population Distribution\nThe following is a quick visualization of the population data in West Malaysia.\n\nVisualizationOverview\n\n\n\npopulation_df_mys &lt;- population_df %&gt;%\n  left_join(mys_sf, by = c(\"state\" = \"ADM1_EN\", \"district\" = \"ADM2_EN\")) %&gt;%\n  dplyr::select(state, district, year, population, geometry)\n\npopulation_df_mys &lt;- st_as_sf(population_df_mys)\n\npopulation_df_mys_grp &lt;- population_df_mys %&gt;%\n  group_by(state, district) %&gt;%\n  summarize(total_crimes = sum(population)/4)\n\nmys_map &lt;- tm_shape(mys_sf) +\n  tm_polygons() +\n  tm_text(\"ADM2_EN\", size = 0.3) +\n  tm_layout(main.title = \"Districts (West Malaysia)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2)\n\nchoro_map &lt;- tm_shape(population_df_mys_grp) +\n  tm_fill(\"total_crimes\", \n          style = \"pretty\", \n          palette = \"Blues\",\n          title = \"Crimes\") +\n  tm_layout(main.title = \"Population Distribution (West Malaysia)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2, position = c(\"right\", \"top\")) +\n  tm_grid(alpha =0.2)\n\ntmap_arrange(choro_map, mys_map, ncol = 2)\n\n\n\n\n\n\n\n\n\n\n\npopulation_df_mys\n\nSimple feature collection with 348 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 348 × 5\n# Groups:   state, district [87]\n   state district     year population                                   geometry\n   &lt;chr&gt; &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;                         &lt;MULTIPOLYGON [m]&gt;\n 1 JOHOR BATU PAHAT   2019       495. (((556714.6 192051.6, 556664.6 192111.5, …\n 2 JOHOR BATU PAHAT   2020       495. (((556714.6 192051.6, 556664.6 192111.5, …\n 3 JOHOR BATU PAHAT   2021       497. (((556714.6 192051.6, 556664.6 192111.5, …\n 4 JOHOR BATU PAHAT   2022       498. (((556714.6 192051.6, 556664.6 192111.5, …\n 5 JOHOR JOHOR BAHRU  2019      1711. (((664760.7 157664.3, 664668.2 157664.3, …\n 6 JOHOR JOHOR BAHRU  2020      1711. (((664760.7 157664.3, 664668.2 157664.3, …\n 7 JOHOR JOHOR BAHRU  2021      1715. (((664760.7 157664.3, 664668.2 157664.3, …\n 8 JOHOR JOHOR BAHRU  2022      1724. (((664760.7 157664.3, 664668.2 157664.3, …\n 9 JOHOR KLUANG       2019       324. (((583499.3 195230.8, 581600.3 195991.2, …\n10 JOHOR KLUANG       2020       324. (((583499.3 195230.8, 581600.3 195991.2, …\n# ℹ 338 more rows\n\n\n\n\n\n\n\n\n\n\n\nSimilarity in Observation\n\n\n\nWe can note that the districts with more crime tend to have a higher population we suggest it is positively correlated. Hence for a more accurate representation of crime rate we need to adjust the crimes to per captia (1000) for the districts.\n\n\n\n\n\n2.3.6 Joining\nWe will next perform join of the data on crime_df with population_df to normalize our crime data\n\n2.3.6.1 Join with Population Data\nHere we compute the crimes per 1000 capita to ensure the data is normalized\n\ncrime_df_mys &lt;- crime_df %&gt;% \n  filter(year &gt;= 2019 & year &lt;= 2022) %&gt;%\n  left_join(population_df, by = c(\"state\", \"district\", \"year\")) %&gt;%\n  mutate(crimes_pc = crimes/population) %&gt;%\n  dplyr::select(state, district, year, category, type, crimes, crimes_pc, population)\n\n\n\n2.3.6.2 Filling for POKOK SENA District\nGiven the missing data for POKOK SENA, we will be getting the state average for the district in this case the state of KEDAH\n\npokok_sena_rows &lt;- crime_df_mys %&gt;%\n  filter(state == \"KEDAH\") %&gt;%\n  group_by(state, year, category, type) %&gt;%\n  summarise(crimes = mean(crimes),\n            crimes_pc = mean(crimes_pc),\n            population = mean(population)) %&gt;% \n  mutate(district = \"POKOK SENA\")\n\npokok_sena_rows\n\n# A tibble: 48 × 8\n# Groups:   state, year, category [8]\n   state  year category type                crimes crimes_pc population district\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;                &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;   \n 1 KEDAH  2019 assault  causing_injury      29.8    0.140          189. POKOK S…\n 2 KEDAH  2019 assault  murder               1.82   0.0129         189. POKOK S…\n 3 KEDAH  2019 assault  rape                13.2    0.0752         189. POKOK S…\n 4 KEDAH  2019 assault  robbery_gang_armed   0.182  0.00155        189. POKOK S…\n 5 KEDAH  2019 assault  robbery_gang_unar…  25.3    0.0992         189. POKOK S…\n 6 KEDAH  2019 assault  robbery_solo_armed   0.182  0.000410       189. POKOK S…\n 7 KEDAH  2019 assault  robbery_solo_unar…  14.7    0.0590         189. POKOK S…\n 8 KEDAH  2019 property break_in           103.     0.440          189. POKOK S…\n 9 KEDAH  2019 property theft_other         86.9    0.479          189. POKOK S…\n10 KEDAH  2019 property theft_vehicle_lor…   7.09   0.0202         189. POKOK S…\n# ℹ 38 more rows\n\ncrime_df_mys &lt;- bind_rows(crime_df_mys, pokok_sena_rows)\n\n\n\n2.3.6.3 Join with District Boundary\nWe finish off the join with a join with our spatial dataset mys_sf.\n\ncrime_df_mys &lt;- crime_df_mys %&gt;%\n  left_join(mys_sf, by = c(\"state\" = \"ADM1_EN\", \"district\" = \"ADM2_EN\")) %&gt;%\n  dplyr::select(state, district, year, category, type, crimes, crimes_pc, population, geometry)\n\ncrime_df_mys &lt;- st_as_sf(crime_df_mys)\ncrime_df_mys\n\nSimple feature collection with 4176 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 4,176 × 9\n# Groups:   state, district, year, category [696]\n   state district    year category type              crimes crimes_pc population\n   &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n 1 JOHOR BATU PAHAT  2019 assault  causing_injury        41   0.0828        495.\n 2 JOHOR BATU PAHAT  2019 assault  murder                 3   0.00606       495.\n 3 JOHOR BATU PAHAT  2019 assault  rape                  29   0.0586        495.\n 4 JOHOR BATU PAHAT  2019 assault  robbery_gang_arm…      0   0             495.\n 5 JOHOR BATU PAHAT  2019 assault  robbery_gang_una…     37   0.0747        495.\n 6 JOHOR BATU PAHAT  2019 assault  robbery_solo_arm…      0   0             495.\n 7 JOHOR BATU PAHAT  2019 assault  robbery_solo_una…     29   0.0586        495.\n 8 JOHOR BATU PAHAT  2019 property break_in             157   0.317         495.\n 9 JOHOR BATU PAHAT  2019 property theft_other          127   0.256         495.\n10 JOHOR BATU PAHAT  2019 property theft_vehicle_lo…      4   0.00808       495.\n# ℹ 4,166 more rows\n# ℹ 1 more variable: geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\n2.3.7 Crime per Capita Distribution\n\ncrime_df_mys_grp &lt;- crime_df_mys %&gt;%\n  group_by(state, district) %&gt;%\n  summarize(total_crimes_pc = sum(crimes_pc)/4)\n\nog_choro_map &lt;- tm_shape(og_crime_df_mys_grp) +\n  tm_fill(\"total_crimes\", \n          n = 5,\n          style = \"equal\", \n          palette = \"Oranges\",\n          title = \"Crimes\") +\n  tm_layout(main.title = \"Crime Distribution (West Malaysia)\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2, position = c(\"right\", \"top\")) +\n  tm_grid(alpha =0.2)\n\nchoro_map &lt;- tm_shape(crime_df_mys_grp) +\n  tm_fill(\"total_crimes_pc\", \n          n = 5,\n          style = \"equal\", \n          palette = \"Oranges\",\n          title = \"Crimes\") +\n  tm_layout(main.title = \"Crime per Capita Distribution\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2, position = c(\"right\", \"top\")) +\n  tm_grid(alpha =0.2)\n\ntmap_arrange(og_choro_map, choro_map, ncol = 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMuch better!\n\n\n\nNote how much more insights we can extract from our adjusted crime choro plot. The district with population still seem to be higher in crime however we can also identify other clusters i.e. several cold spots in Kelantan etc.\n\n\n\n\n2.3.8 Correlation Plot\nNext we take a quick look at how correlated the data are with across the various types of crimes\n\npiv_crime_df_mys &lt;- crime_df_mys %&gt;%\n  mutate(cat_type = paste(category, type, sep = \"-\")) %&gt;%\n  select(-category, -type, -crimes, -population) %&gt;%\n  pivot_wider(\n    names_from = cat_type,\n    values_from = crimes_pc,\n    values_fill = 0\n  ) \n\ncorrplot.mixed(cor(st_drop_geometry(piv_crime_df_mys)[, 4:15]),\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\",\n               tl.srt = 45, \n               tl.cex = 0.5)\n\n\n\n\n\n\n\n\nDuring the EDA we have noted that some crimes such as robbery_gang_armed tend are typically really low in record. Hence to further narrow our subsequent analysis we will group robbery as one category and vehicle theft as the other since they are highly correlated.\n\npiv_crime_df_mys &lt;- piv_crime_df_mys %&gt;%\n  mutate(\n    robbery = `assault-robbery_gang_armed` + `assault-robbery_gang_unarmed` + \n              `assault-robbery_solo_armed` + `assault-robbery_solo_unarmed`,\n    vehicle_theft = `property-theft_vehicle_lorry` + `property-theft_vehicle_motorcar` + \n                    `property-theft_vehicle_motorcycle`\n  ) %&gt;%\n  select(-`assault-robbery_gang_armed`, -`assault-robbery_gang_unarmed`, \n         -`assault-robbery_solo_armed`, -`assault-robbery_solo_unarmed`,\n         -`property-theft_vehicle_lorry`, -`property-theft_vehicle_motorcar`, \n         -`property-theft_vehicle_motorcycle`) %&gt;%\n  rename_with(~str_remove(., \"^assault-|^property-\"))\n\npiv_crime_df_mys\n\nSimple feature collection with 348 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 348 × 11\n   state district   year                  geometry causing_injury  murder   rape\n   &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt;        &lt;MULTIPOLYGON [m]&gt;          &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n 1 JOHOR BATU PAH…  2019 (((556714.6 192051.6, 55…         0.0828 0.00606 0.0586\n 2 JOHOR BATU PAH…  2020 (((556714.6 192051.6, 55…         0.0868 0.00606 0.0323\n 3 JOHOR BATU PAH…  2021 (((556714.6 192051.6, 55…         0.0442 0       0.0362\n 4 JOHOR BATU PAH…  2022 (((556714.6 192051.6, 55…         0.0382 0.00603 0.0261\n 5 JOHOR JOHOR BA…  2019 (((664760.7 157664.3, 66…         0.212  0.0117  0.0590\n 6 JOHOR JOHOR BA…  2020 (((664760.7 157664.3, 66…         0.140  0.00993 0.0392\n 7 JOHOR JOHOR BA…  2021 (((664760.7 157664.3, 66…         0.113  0.00466 0.0402\n 8 JOHOR JOHOR BA…  2022 (((664760.7 157664.3, 66…         0.101  0.00986 0.0365\n 9 JOHOR KLUANG     2019 (((583499.3 195230.8, 58…         0.185  0.0124  0.0525\n10 JOHOR KLUANG     2020 (((583499.3 195230.8, 58…         0.133  0.00618 0.0494\n# ℹ 338 more rows\n# ℹ 4 more variables: break_in &lt;dbl&gt;, theft_other &lt;dbl&gt;, robbery &lt;dbl&gt;,\n#   vehicle_theft &lt;dbl&gt;\n\n\nThe final crime type correlation matrix should look like the following.\n\ncorrplot.mixed(cor(st_drop_geometry(piv_crime_df_mys)[, 4:10]),\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\",\n               tl.srt = 45, \n               tl.cex = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInitial Analysis\n\n\n\nAcross the board it seems like only robbery have high correlation with vehicle_theft. However we will not be dropping either as they are key variables we would like extract insights from."
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#data-enrichment",
    "href": "take-home_ex/ex03/th_ex03.html#data-enrichment",
    "title": "Take-home Exercise 3",
    "section": "2.4 Data Enrichment",
    "text": "2.4 Data Enrichment\nTo further enrich our analysis we will incoporate several socio-economic data which may potentially influence/affect crime rates such labour participation rates, poverty and income inequality by district\n\n2.4.1 State Wrangling\n\nprint(\"Unique states in mys_sf:\")\n\n[1] \"Unique states in mys_sf:\"\n\nunique(mys_sf$ADM1_EN)\n\n [1] \"JOHOR\"           \"KEDAH\"           \"KELANTAN\"        \"KUALA LUMPUR\"   \n [5] \"MELAKA\"          \"NEGERI SEMBILAN\" \"PAHANG\"          \"PERAK\"          \n [9] \"PERLIS\"          \"PULAU PINANG\"    \"TERENGGANU\"      \"SELANGOR\"       \n\nprint(\"Unique states in poverty_df:\")\n\n[1] \"Unique states in poverty_df:\"\n\nunique(poverty_df$state)\n\n [1] \"Johor\"             \"Kedah\"             \"Kelantan\"         \n [4] \"Melaka\"            \"Negeri Sembilan\"   \"Pahang\"           \n [7] \"Perak\"             \"Perlis\"            \"Pulau Pinang\"     \n[10] \"Sabah\"             \"Sarawak\"           \"Selangor\"         \n[13] \"Terengganu\"        \"W.P. Kuala Lumpur\" \"W.P. Labuan\"      \n[16] \"W.P. Putrajaya\"   \n\nprint(\"Unique states in inequality_df:\")\n\n[1] \"Unique states in inequality_df:\"\n\nunique(inequality_df$state)\n\n [1] \"Johor\"             \"Kedah\"             \"Kelantan\"         \n [4] \"Melaka\"            \"Negeri Sembilan\"   \"Pahang\"           \n [7] \"Perak\"             \"Perlis\"            \"Pulau Pinang\"     \n[10] \"Sabah\"             \"Sarawak\"           \"Selangor\"         \n[13] \"Terengganu\"        \"W.P. Kuala Lumpur\" \"W.P. Labuan\"      \n[16] \"W.P. Putrajaya\"   \n\nprint(\"Unique states in labour_df:\")\n\n[1] \"Unique states in labour_df:\"\n\nunique(labour_df$state)\n\n [1] \"Johor\"           \"Kedah\"           \"Kelantan\"        \"Melaka\"         \n [5] \"Negeri Sembilan\" \"Pahang\"          \"Perak\"           \"Pulau Pinang\"   \n [9] \"Sabah\"           \"Sarawak\"         \"Selangor\"        \"Terengganu\"     \n\n\nSimilarly we prep the data by transforming the data and filtering out east Malaysia\n\npoverty_df &lt;- poverty_df %&gt;%\n          mutate(year = year(date),\n                 state = toupper(state),\n                 district = toupper(district)) %&gt;%\n          filter(state != 'SABAH' & state != 'SARAWAK' & state != 'W.P. LABUAN') %&gt;%\n          mutate(state = replace(state, state == 'W.P. KUALA LUMPUR', 'KUALA LUMPUR'),\n                 state = replace(state, state == 'W.P. PUTRAJAYA', 'KUALA LUMPUR'))\n\ninequality_df &lt;- inequality_df %&gt;%\n          mutate(year = year(date),\n                 state = toupper(state),\n                 district = toupper(district)) %&gt;%\n          filter(state != 'SABAH' & state != 'SARAWAK' & state != 'W.P. LABUAN') %&gt;%\n          mutate(state = replace(state, state == 'W.P. KUALA LUMPUR', 'KUALA LUMPUR'),\n                 state = replace(state, state == 'W.P. PUTRAJAYA', 'KUALA LUMPUR'))\n\nlabour_df &lt;- labour_df %&gt;%\n          mutate(year = year(date),\n                 state = toupper(state),\n                 district = toupper(district)) %&gt;%\n          filter(state != 'SABAH' & state != 'SARAWAK')\n\n\nprint(\"Unique states & years in mys_sf:\")\n\n[1] \"Unique states & years in mys_sf:\"\n\nsort(unique(mys_sf$ADM1_EN))\n\n [1] \"JOHOR\"           \"KEDAH\"           \"KELANTAN\"        \"KUALA LUMPUR\"   \n [5] \"MELAKA\"          \"NEGERI SEMBILAN\" \"PAHANG\"          \"PERAK\"          \n [9] \"PERLIS\"          \"PULAU PINANG\"    \"SELANGOR\"        \"TERENGGANU\"     \n\nprint(\"Unique states & years in poverty_df:\")\n\n[1] \"Unique states & years in poverty_df:\"\n\nsort(unique(poverty_df$state))\n\n [1] \"JOHOR\"           \"KEDAH\"           \"KELANTAN\"        \"KUALA LUMPUR\"   \n [5] \"MELAKA\"          \"NEGERI SEMBILAN\" \"PAHANG\"          \"PERAK\"          \n [9] \"PERLIS\"          \"PULAU PINANG\"    \"SELANGOR\"        \"TERENGGANU\"     \n\nsort(unique(poverty_df$year))\n\n[1] 2019 2022\n\nprint(\"Unique states & years in inequality_df:\")\n\n[1] \"Unique states & years in inequality_df:\"\n\nsort(unique(inequality_df$state))\n\n [1] \"JOHOR\"           \"KEDAH\"           \"KELANTAN\"        \"KUALA LUMPUR\"   \n [5] \"MELAKA\"          \"NEGERI SEMBILAN\" \"PAHANG\"          \"PERAK\"          \n [9] \"PERLIS\"          \"PULAU PINANG\"    \"SELANGOR\"        \"TERENGGANU\"     \n\nsort(unique(inequality_df$year))\n\n[1] 2019 2022\n\nprint(\"Unique states & years in labour_df:\")\n\n[1] \"Unique states & years in labour_df:\"\n\nsort(unique(labour_df$state))\n\n [1] \"JOHOR\"           \"KEDAH\"           \"KELANTAN\"        \"MELAKA\"         \n [5] \"NEGERI SEMBILAN\" \"PAHANG\"          \"PERAK\"           \"PULAU PINANG\"   \n [9] \"SELANGOR\"        \"TERENGGANU\"     \n\nsort(unique(labour_df$year))\n\n[1] 2019 2020 2021 2022\n\n\n\n\n\n\n\n\nCritical Data Issues\n\n\n\nFrom the data we identified 2 issues: 1. Poverty and Inequality data is missing years 2020 and 2021 2. Labour data is missing PERLIS, KUALA LUMPUR and PUTRAJAYA\n\n\n\n\n2.4.2 State-District Wrangling (Poverty & Inequaltiy)\n\n2.4.2.1 Filling Year Data\nSince years 2020 and 2021 are missing from data set, we will map to prior or the next year:\n\n2020 -&gt; 2019\n2021 -&gt; 2022\n\n\npoverty_rows &lt;- poverty_df %&gt;%\n  mutate(year = ifelse(year == 2019, 2020, 2021))\npoverty_df &lt;- bind_rows(poverty_df, poverty_rows)\nunique(poverty_df$year)\n\n[1] 2019 2022 2020 2021\n\ninequality_rows &lt;- inequality_df %&gt;%\n  mutate(year = ifelse(year == 2019, 2020, 2021))\ninequality_df &lt;- bind_rows(inequality_df, inequality_rows)\nunique(inequality_df$year)\n\n[1] 2019 2022 2020 2021\n\n\n\n\n2.4.2.2 State-District Mismatch\nSimilarly we will have to wrangle for District level too.\n\npoverty_df &lt;- poverty_df %&gt;% mutate(state_district = paste(state, district, sep = \"-\"))\ninequality_df &lt;- inequality_df %&gt;% mutate(state_district = paste(state, district, sep = \"-\"))\n\nSince the data for inequality comes from the same ministry and the districts are the same we will only be checking for Poverty.\n\nstate_district_poverty &lt;- unique(poverty_df$state_district)\n\nmissing_in_sf &lt;- setdiff(state_district_poverty, state_district_sf)\nmissing_in_poverty &lt;- setdiff(state_district_sf, state_district_poverty)\n\nprint(\"State-District combinations in poverty_df not found in mys_sf:\")\n\n[1] \"State-District combinations in poverty_df not found in mys_sf:\"\n\nprint(missing_in_sf)\n\n [1] \"JOHOR-KULAI\"                         \"JOHOR-TANGKAK\"                      \n [3] \"KELANTAN-KECIL LOJING\"               \"PERAK-BAGAN DATUK\"                  \n [5] \"PERAK-HULU PERAK\"                    \"PERAK-MANJUNG\"                      \n [7] \"PERAK-MUALLIM\"                       \"PERAK-SELAMA\"                       \n [9] \"PULAU PINANG-SEBERANG PERAI SELATAN\" \"PULAU PINANG-SEBERANG PERAI TENGAH\" \n[11] \"PULAU PINANG-SEBERANG PERAI UTARA\"   \"TERENGGANU-KUALA NERUS\"             \n[13] \"KUALA LUMPUR-W.P. KUALA LUMPUR\"     \n\nprint(\"State-District combinations in mys_sf not found in poverty_df:\")\n\n[1] \"State-District combinations in mys_sf not found in poverty_df:\"\n\nprint(missing_in_poverty)\n\n[1] \"JOHOR-KULAIJAYA\"               \"JOHOR-LEDANG\"                 \n[3] \"KUALA LUMPUR-WP. KUALA LUMPUR\" \"PERAK-ULU PERAK\"              \n[5] \"PERAK-MANJUNG (DINDING)\"       \"PULAU PINANG-S.P.SELATAN\"     \n[7] \"PULAU PINANG-S.P. TENGAH\"      \"PULAU PINANG-S.P. UTARA\"      \n\n\n\n\n2.4.2.3 Re-Mapping Districts\nThis step is getting tedious, but still, very crucial.\n\npoverty_df &lt;- poverty_df %&gt;%\n  mutate(district = case_when(\n    state == \"JOHOR\" & district == \"KULAI\" ~ \"KULAIJAYA\",\n    state == \"JOHOR\" & district == \"TANGKAK\" ~ \"LEDANG\",\n    state == \"KELANTAN\" & district == \"KECIL LOJING\" ~ \"GUA MUSANG\",\n    state == \"PERAK\" & district == \"HULU PERAK\" ~ \"ULU PERAK\",\n    state == \"PERAK\" & district == \"BAGAN DATUK\" ~ \"HILIR PERAK\",\n    state == \"PERAK\" & district == \"MANJUNG\" ~ \"MANJUNG (DINDING)\",\n    state == \"PERAK\" & district == \"MUALLIM\" ~ \"BATANG PADANG\",\n    state == \"PERAK\" & district == \"SELAMA\" ~ \"LARUT DAN MATANG\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI SELATAN\" ~ \"S.P.SELATAN\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI TENGAH\" ~ \"S.P. TENGAH\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI UTARA\" ~ \"S.P. UTARA\",\n    state == \"TERENGGANU\" & district == \"KUALA NERUS\" ~ \"KUALA TERENGGANU\",\n    state == \"KUALA LUMPUR\" & district == \"W.P. KUALA LUMPUR\" ~ \"WP. KUALA LUMPUR\",\n    TRUE ~ district\n  )) %&gt;%\n  group_by(state, district, year) %&gt;%\n  summarise(poverty_absolute = mean(poverty_absolute),\n            poverty_relative = mean(poverty_relative))\n\npoverty_df\n\n# A tibble: 348 × 5\n# Groups:   state, district [87]\n   state district     year poverty_absolute poverty_relative\n   &lt;chr&gt; &lt;chr&gt;       &lt;dbl&gt;            &lt;dbl&gt;            &lt;dbl&gt;\n 1 JOHOR BATU PAHAT   2019              2.9              9  \n 2 JOHOR BATU PAHAT   2020              2.9              9  \n 3 JOHOR BATU PAHAT   2021              5.1             19.4\n 4 JOHOR BATU PAHAT   2022              5.1             19.4\n 5 JOHOR JOHOR BAHRU  2019              3.3             12.8\n 6 JOHOR JOHOR BAHRU  2020              3.3             12.8\n 7 JOHOR JOHOR BAHRU  2021              3.7             10.4\n 8 JOHOR JOHOR BAHRU  2022              3.7             10.4\n 9 JOHOR KLUANG       2019              5               24.9\n10 JOHOR KLUANG       2020              5               24.9\n# ℹ 338 more rows\n\n\n\ninequality_df &lt;- inequality_df %&gt;%\n  mutate(district = case_when(\n    state == \"JOHOR\" & district == \"KULAI\" ~ \"KULAIJAYA\",\n    state == \"JOHOR\" & district == \"TANGKAK\" ~ \"LEDANG\",\n    state == \"KELANTAN\" & district == \"KECIL LOJING\" ~ \"GUA MUSANG\",\n    state == \"PERAK\" & district == \"HULU PERAK\" ~ \"ULU PERAK\",\n    state == \"PERAK\" & district == \"BAGAN DATUK\" ~ \"HILIR PERAK\",\n    state == \"PERAK\" & district == \"MANJUNG\" ~ \"MANJUNG (DINDING)\",\n    state == \"PERAK\" & district == \"MUALLIM\" ~ \"BATANG PADANG\",\n    state == \"PERAK\" & district == \"SELAMA\" ~ \"LARUT DAN MATANG\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI SELATAN\" ~ \"S.P.SELATAN\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI TENGAH\" ~ \"S.P. TENGAH\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI UTARA\" ~ \"S.P. UTARA\",\n    state == \"TERENGGANU\" & district == \"KUALA NERUS\" ~ \"KUALA TERENGGANU\",\n    state == \"KUALA LUMPUR\" & district == \"W.P. KUALA LUMPUR\" ~ \"WP. KUALA LUMPUR\",\n    TRUE ~ district\n  )) %&gt;%\n  group_by(state, district, year) %&gt;%\n  summarise(gini = mean(gini))\n\ninequality_df\n\n# A tibble: 348 × 4\n# Groups:   state, district [87]\n   state district     year  gini\n   &lt;chr&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt;\n 1 JOHOR BATU PAHAT   2019 0.295\n 2 JOHOR BATU PAHAT   2020 0.295\n 3 JOHOR BATU PAHAT   2021 0.338\n 4 JOHOR BATU PAHAT   2022 0.338\n 5 JOHOR JOHOR BAHRU  2019 0.388\n 6 JOHOR JOHOR BAHRU  2020 0.388\n 7 JOHOR JOHOR BAHRU  2021 0.359\n 8 JOHOR JOHOR BAHRU  2022 0.359\n 9 JOHOR KLUANG       2019 0.333\n10 JOHOR KLUANG       2020 0.333\n# ℹ 338 more rows\n\n\n\n\n\n2.4.3 State-Distrcit Wrangling (Labour)\n\n2.4.3.1 State-District Mismatch\nNo change as with above.\n\nlabour_df &lt;- labour_df %&gt;% mutate(state_district = paste(state, district, sep = \"-\"))\n\n\nstate_district_labour &lt;- unique(labour_df$state_district)\n\nmissing_in_sf &lt;- setdiff(state_district_labour, state_district_sf)\nmissing_in_labour &lt;- setdiff(state_district_sf, state_district_labour)\n\nprint(\"State-District combinations in labour_df not found in mys_sf:\")\n\n[1] \"State-District combinations in labour_df not found in mys_sf:\"\n\nprint(missing_in_sf)\n\n[1] \"JOHOR-KULAI\"                         \"JOHOR-TANGKAK\"                      \n[3] \"PERAK-HULU PERAK\"                    \"PERAK-MANJUNG\"                      \n[5] \"PULAU PINANG-SEBERANG PERAI SELATAN\" \"PULAU PINANG-SEBERANG PERAI TENGAH\" \n[7] \"PULAU PINANG-SEBERANG PERAI UTARA\"  \n\nprint(\"State-District combinations in mys_sf not found in labour_df:\")\n\n[1] \"State-District combinations in mys_sf not found in labour_df:\"\n\nprint(missing_in_labour)\n\n [1] \"JOHOR-KULAIJAYA\"               \"JOHOR-LEDANG\"                 \n [3] \"KUALA LUMPUR-WP. KUALA LUMPUR\" \"PERAK-ULU PERAK\"              \n [5] \"PERAK-MANJUNG (DINDING)\"       \"PERLIS-PERLIS\"                \n [7] \"PULAU PINANG-S.P.SELATAN\"      \"PULAU PINANG-S.P. TENGAH\"     \n [9] \"PULAU PINANG-S.P. UTARA\"       \"KUALA LUMPUR-W.P. PUTRAJAYA\"  \n\n\n\n\n2.4.3.2 Re-Mapping Districts\n\nlabour_df &lt;- labour_df %&gt;%\n  mutate(district = case_when(\n    state == \"JOHOR\" & district == \"KULAI\" ~ \"KULAIJAYA\",\n    state == \"JOHOR\" & district == \"TANGKAK\" ~ \"LEDANG\",\n    state == \"PERAK\" & district == \"HULU PERAK\" ~ \"ULU PERAK\",\n    state == \"PERAK\" & district == \"MANJUNG\" ~ \"MANJUNG (DINDING)\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI SELATAN\" ~ \"S.P.SELATAN\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI TENGAH\" ~ \"S.P. TENGAH\",\n    state == \"PULAU PINANG\" & district == \"SEBERANG PERAI UTARA\" ~ \"S.P. UTARA\",\n    TRUE ~ district\n  )) %&gt;%\n  group_by(state, district, year) %&gt;%\n  summarise(lf = mean(lf),\n            lf_employed = mean(lf_employed),\n            lf_unemployed = mean(lf_unemployed),\n            lf_outside = mean(lf_outside),\n            p_rate = mean(p_rate),\n            u_rate = mean(u_rate),\n            ep_ratio = mean(ep_ratio))\n\nlabour_df\n\n# A tibble: 336 × 10\n# Groups:   state, district [84]\n   state district  year    lf lf_employed lf_unemployed lf_outside p_rate u_rate\n   &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 JOHOR BATU PA…  2019  214.        210.           3.7       90.4   70.3    1.7\n 2 JOHOR BATU PA…  2020  219.        214.           4.7       92.2   70.4    2.1\n 3 JOHOR BATU PA…  2021  216         211            5         97.1   69      2.3\n 4 JOHOR BATU PA…  2022  221.        217.           4         94.6   70      1.8\n 5 JOHOR JOHOR B…  2019  792.        768.          24.6      294.    73      3.1\n 6 JOHOR JOHOR B…  2020  804.        771.          32.5      297.    73      4  \n 7 JOHOR JOHOR B…  2021  806.        772.          34.1      298.    73      4.2\n 8 JOHOR JOHOR B…  2022  830.        799           30.5      293.    73.9    3.7\n 9 JOHOR KLUANG    2019  166.        160.           5.6       66.9   71.3    3.4\n10 JOHOR KLUANG    2020  168.        161.           7.1       67.4   71.4    4.2\n# ℹ 326 more rows\n# ℹ 1 more variable: ep_ratio &lt;dbl&gt;\n\n\n\n\n\n\n\n\nMissing labour data\n\n\n\nHowever we do not have labour data for the following state-districts, hence we will be using the national average for:\n\n“PERLIS-PERLIS”\n“KUALA LUMPUR-WP. KUALA LUMPUR”\n“KUALA LUMPUR-W.P. PUTRAJAYA”\n\n\n\n\n\n\n2.4.4 Joining\n\n2.4.4.1 Join with Poverty, Inequality and Labour\nWe join the other aspatial data with our spatial crime dataframe.\n\npiv_full_df_mys &lt;- piv_crime_df_mys %&gt;%\n  left_join(poverty_df, by = c(\"state\", \"district\", \"year\")) %&gt;%\n  left_join(inequality_df, by = c(\"state\", \"district\", \"year\")) %&gt;%\n  left_join(labour_df, by = c(\"state\", \"district\", \"year\")) %&gt;%\n  left_join(population_df, by = c(\"state\", \"district\", \"year\"))\n\npiv_full_df_mys\n\nSimple feature collection with 348 features and 21 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 184853.1 ymin: 139843.3 xmax: 728635.8 ymax: 744607.2\nProjected CRS: Kertau (RSO) / RSO Malaya (m)\n# A tibble: 348 × 22\n   state district   year                  geometry causing_injury  murder   rape\n   &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt;        &lt;MULTIPOLYGON [m]&gt;          &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n 1 JOHOR BATU PAH…  2019 (((556714.6 192051.6, 55…         0.0828 0.00606 0.0586\n 2 JOHOR BATU PAH…  2020 (((556714.6 192051.6, 55…         0.0868 0.00606 0.0323\n 3 JOHOR BATU PAH…  2021 (((556714.6 192051.6, 55…         0.0442 0       0.0362\n 4 JOHOR BATU PAH…  2022 (((556714.6 192051.6, 55…         0.0382 0.00603 0.0261\n 5 JOHOR JOHOR BA…  2019 (((664760.7 157664.3, 66…         0.212  0.0117  0.0590\n 6 JOHOR JOHOR BA…  2020 (((664760.7 157664.3, 66…         0.140  0.00993 0.0392\n 7 JOHOR JOHOR BA…  2021 (((664760.7 157664.3, 66…         0.113  0.00466 0.0402\n 8 JOHOR JOHOR BA…  2022 (((664760.7 157664.3, 66…         0.101  0.00986 0.0365\n 9 JOHOR KLUANG     2019 (((583499.3 195230.8, 58…         0.185  0.0124  0.0525\n10 JOHOR KLUANG     2020 (((583499.3 195230.8, 58…         0.133  0.00618 0.0494\n# ℹ 338 more rows\n# ℹ 15 more variables: break_in &lt;dbl&gt;, theft_other &lt;dbl&gt;, robbery &lt;dbl&gt;,\n#   vehicle_theft &lt;dbl&gt;, poverty_absolute &lt;dbl&gt;, poverty_relative &lt;dbl&gt;,\n#   gini &lt;dbl&gt;, lf &lt;dbl&gt;, lf_employed &lt;dbl&gt;, lf_unemployed &lt;dbl&gt;,\n#   lf_outside &lt;dbl&gt;, p_rate &lt;dbl&gt;, u_rate &lt;dbl&gt;, ep_ratio &lt;dbl&gt;,\n#   population &lt;dbl&gt;\n\n\n\n\n2.4.4.2 Data Subsitution (Labour)\nSimilar to crime, labour force will also need to be adjusted to the districts population for a more accurate representation.\n\npiv_full_df_mys &lt;- piv_full_df_mys %&gt;% \n  mutate(lf = lf/population,\n         lf_employed = lf_employed/population,\n         lf_unemployed = lf_unemployed/population,\n         lf_outside = lf_outside/population) %&gt;%\n  select(-population)\n\nHere we will be substituting the national average for the previously highlighted missing data from the labour dataset\n\ntarget_states &lt;- c(\"PERLIS\", \"KUALA LUMPUR\")\ntarget_districts &lt;- c(\"PERLIS\", \"WP. KUALA LUMPUR\", \"W.P. PUTRAJAYA\")\n\navg_values &lt;- piv_full_df_mys %&gt;%\n  filter(!(state %in% target_states & district %in% target_districts)) %&gt;%\n  summarize(\n    avg_lf = mean(lf, na.rm = TRUE),\n    avg_lf_employed = mean(lf_employed, na.rm = TRUE),\n    avg_lf_unemployed = mean(lf_unemployed, na.rm = TRUE),\n    avg_lf_outside = mean(lf_outside, na.rm = TRUE),\n    avg_p_rate = mean(p_rate, na.rm = TRUE),\n    avg_u_rate = mean(u_rate, na.rm = TRUE),\n    avg_ep_ratio = mean(ep_ratio, na.rm = TRUE)\n  )\n\npiv_full_df_mys &lt;- piv_full_df_mys %&gt;%\n  mutate(\n    lf = ifelse(state %in% target_states & district %in% target_districts & is.na(lf), avg_values$avg_lf, lf),\n    lf_employed = ifelse(state %in% target_states & district %in% target_districts & is.na(lf_employed), avg_values$avg_lf_employed, lf_employed),\n    lf_unemployed = ifelse(state %in% target_states & district %in% target_districts & is.na(lf_unemployed), avg_values$avg_lf_unemployed, lf_unemployed),\n    lf_outside = ifelse(state %in% target_states & district %in% target_districts & is.na(lf_outside), avg_values$avg_lf_outside, lf_outside),\n    p_rate = ifelse(state %in% target_states & district %in% target_districts & is.na(p_rate), avg_values$avg_p_rate, p_rate),\n    u_rate = ifelse(state %in% target_states & district %in% target_districts & is.na(u_rate), avg_values$avg_u_rate, u_rate),\n    ep_ratio = ifelse(state %in% target_states & district %in% target_districts & is.na(ep_ratio), avg_values$avg_ep_ratio, ep_ratio)\n  )\n\n\n\n2.4.4.3 Aggregate all Years\nWe will keep the year for filtering our application, hence we will also create an aggregate the data across the 4 years (2019 - 2022)\n\npiv_full_df_mys_agg &lt;- piv_full_df_mys %&gt;%\n  group_by(state, district) %&gt;%\n  summarise(year = 0,\n            causing_injury = mean(causing_injury),\n            murder = mean(murder),\n            rape = mean(rape),\n            robbery = mean(robbery),\n            break_in = mean(break_in),\n            theft_other = mean(theft_other),\n            vehicle_theft = mean(vehicle_theft),\n            poverty_absolute = mean(poverty_absolute),\n            poverty_relative = mean(poverty_relative),\n            gini = mean(gini),\n            lf = mean(lf),\n            lf_employed = mean(lf_employed),\n            lf_unemployed = mean(lf_unemployed),\n            lf_outside = mean(lf_outside),\n            p_rate = mean(p_rate),\n            u_rate = mean(u_rate),\n            ep_ratio = mean(ep_ratio))\n\n\npiv_full_df_mys &lt;- bind_rows(piv_full_df_mys, piv_full_df_mys_agg)\nunique(piv_full_df_mys$year)\n\n[1] 2019 2020 2021 2022    0"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#data-selection",
    "href": "take-home_ex/ex03/th_ex03.html#data-selection",
    "title": "Take-home Exercise 3",
    "section": "2.5 Data Selection",
    "text": "2.5 Data Selection\nTo simplify our subsequent analysis and fine tune our clustering we will be checking for any highly correlated non-crime data and remove them for clustering.\n\n2.5.1 Visualizing the Correlation of Data\n\ncorrplot.mixed(cor(st_drop_geometry(piv_full_df_mys %&gt;% filter(year == 0))[, 4:20]),\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\",\n               tl.srt = 45,  # Slant the labels by 45 degrees\n               tl.cex = 0.5)\n\n\n\n\n\n\n\n\n\n\n2.5.2 Final Selection\nSince the variable\n\nep_ratio is highly correlated (&gt;0.8) with lf, lf_employed, lf_outside and p_rate we can drop them from the dataframe. (Employment ratio is much more intutive too)\nu_rate is highly correlated (&gt;0.8) with lf_unemployed we can drop it too.\n\n\npiv_df_mys &lt;- piv_full_df_mys %&gt;%\n  mutate(state_district = str_to_title(paste(state, district, sep = \"-\"))) %&gt;%\n  select(-lf, -lf_employed, -lf_unemployed, -lf_outside, -p_rate) %&gt;%\n  rename_with(~str_replace_all(., c(\"ep_ratio\" = \"employment_ratio\", \"u_rate\" = \"unemployment_rate\"))) %&gt;%\n  select(state_district, everything())\n  \ncolnames(piv_df_mys)\n\n [1] \"state_district\"    \"state\"             \"district\"         \n [4] \"year\"              \"geometry\"          \"causing_injury\"   \n [7] \"murder\"            \"rape\"              \"break_in\"         \n[10] \"theft_other\"       \"robbery\"           \"vehicle_theft\"    \n[13] \"poverty_absolute\"  \"poverty_relative\"  \"gini\"             \n[16] \"unemployment_rate\" \"employment_ratio\" \n\n\n\ncorrplot.mixed(cor(st_drop_geometry(piv_df_mys %&gt;% filter(year == 0))[, 5:16]),\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\",\n               tl.srt = 45,\n               tl.cex = 0.5)\n\n\n\n\n\n\n\n\nLooks much better, now lets save it as rds.\n\nwrite_rds(piv_df_mys, \"./data/rds/pivot_df.rds\")\n\n\npiv_df_mys &lt;- read_rds(\"./data/rds/pivot_df.rds\")"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#variable-exploration",
    "href": "take-home_ex/ex03/th_ex03.html#variable-exploration",
    "title": "Take-home Exercise 3",
    "section": "3.1 Variable Exploration",
    "text": "3.1 Variable Exploration\n\n3.1.1 Data Standardisation\nWe create a standardised version of the data with min-max scaling to ensure all the data are normalized between 0.0 - 1.0.\n\npiv_df_mys.all &lt;- piv_df_mys %&gt;% filter(year == 0)\nclust_rownames &lt;- piv_df_mys.all$state_district\nog_clust_vars &lt;- piv_df_mys.all %&gt;% \n  select(-state_district, -state, -district, -year) %&gt;% \n  st_drop_geometry()\n  \nclust_vars &lt;- og_clust_vars %&gt;% normalize()\n\nrownames(og_clust_vars) &lt;- clust_rownames\nrownames(clust_vars) &lt;- clust_rownames\nhead(clust_vars, 10)\n\n# A tibble: 10 × 12\n   causing_injury murder   rape break_in theft_other robbery vehicle_theft\n            &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;\n 1          0.165 0.142  0.0852    0.198      0.0453  0.107         0.123 \n 2          0.508 0.282  0.112     0.404      0.242   0.366         0.721 \n 3          0.468 0.241  0.102     0.150      0.108   0.155         0.308 \n 4          0.316 0.385  0.127     0.287      0.145   0.113         0.408 \n 5          0.198 0.332  0.0431    0.182      0.127   0.231         0.253 \n 6          0.102 0.0476 0.0178    0.203      0.0541  0.0782        0.142 \n 7          0.504 0.296  0.239     0.267      0.129   0.152         0.254 \n 8          0.233 0.0993 0.0612    0.170      0.0289  0.0727        0.0900\n 9          0.147 0      0.151     0.127      0.0204  0.103         0.267 \n10          0.354 0.316  0.108     0.270      0.173   0.141         0.198 \n# ℹ 5 more variables: poverty_absolute &lt;dbl&gt;, poverty_relative &lt;dbl&gt;,\n#   gini &lt;dbl&gt;, unemployment_rate &lt;dbl&gt;, employment_ratio &lt;dbl&gt;\n\n\n\n\n3.1.2 Histograms\nIn the following we will take a look at each of the variables distribution as Histogram, Density and Boxplot.\n\nOriginalMin-Max Standardisation\n\n\n\nhist_list &lt;- list()\n\nfor (col in colnames(og_clust_vars)) {\n  hist_list[[col]] &lt;- ggplot(data = og_clust_vars, aes(x = .data[[col]])) +\n    geom_histogram(bins = 20, color = \"black\", fill = \"lightblue\") +\n    ggtitle(str_to_title(str_replace_all(col, \"_\", \" \")))\n}\n\ngrid.arrange(grobs = hist_list, ncol = 4, nrow = 3)\n\n\n\n\n\n\n\n\n\n\n\nhist_list &lt;- list()\n\nfor (col in colnames(clust_vars)) {\n  hist_list[[col]] &lt;- ggplot(data = clust_vars, aes(x = .data[[col]])) +\n    geom_histogram(bins = 20, color = \"black\", fill = \"lightblue\") +\n    ggtitle(str_to_title(str_replace_all(col, \"_\", \" \")))\n}\n\ngrid.arrange(grobs = hist_list, ncol = 4, nrow = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.1.3 Density Plot\n\nOriginalMin-Max Standardisation\n\n\n\nhist_list &lt;- list()\n\nfor (col in colnames(og_clust_vars)) {\n  hist_list[[col]] &lt;- ggplot(data = og_clust_vars, aes(x = .data[[col]])) +\n    geom_density(color = \"black\", fill = \"lightblue\") +\n    ggtitle(str_to_title(str_replace_all(col, \"_\", \" \")))\n}\n\ngrid.arrange(grobs = hist_list, ncol = 4, nrow = 3)\n\n\n\n\n\n\n\n\n\n\n\nhist_list &lt;- list()\n\nfor (col in colnames(clust_vars)) {\n  hist_list[[col]] &lt;- ggplot(data = clust_vars, aes(x = .data[[col]])) +\n    geom_density(color = \"black\", fill = \"lightblue\") +\n    ggtitle(str_to_title(str_replace_all(col, \"_\", \" \")))\n}\n\ngrid.arrange(grobs = hist_list, ncol = 4, nrow = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.1.4 Boxplots\n\nOriginalMin-Max Standardisation\n\n\n\nhist_list &lt;- list()\n\nfor (col in colnames(og_clust_vars)) {\n  hist_list[[col]] &lt;- ggplot(data = og_clust_vars, aes(x = .data[[col]])) +\n    geom_boxplot(color = \"black\", fill = \"lightblue\") +\n    ggtitle(str_to_title(str_replace_all(col, \"_\", \" \")))\n}\n\ngrid.arrange(grobs = hist_list, ncol = 4, nrow = 3)\n\n\n\n\n\n\n\n\n\n\n\nhist_list &lt;- list()\n\nfor (col in colnames(clust_vars)) {\n  hist_list[[col]] &lt;- ggplot(data = clust_vars, aes(x = .data[[col]])) +\n    geom_boxplot(color = \"black\", fill = \"lightblue\") +\n    ggtitle(str_to_title(str_replace_all(col, \"_\", \" \")))\n}\n\ngrid.arrange(grobs = hist_list, ncol = 4, nrow = 3)"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#selecting-no.-of-clusters",
    "href": "take-home_ex/ex03/th_ex03.html#selecting-no.-of-clusters",
    "title": "Take-home Exercise 3",
    "section": "3.2 Selecting No. of Clusters",
    "text": "3.2 Selecting No. of Clusters\nNext we will be using the NbClust package to help us determine the number of clusters with the best clustering scheme from the different results obtained by varying all combinations of number of clusters, distance measures, and clustering methods (Including gap stat).\n\n3.2.1 Compute NbClust\n\nset.seed(12345)\nnbc &lt;- NbClust(clust_vars, distance = \"euclidean\", min.nc = 5, max.nc = 10, method = \"ward.D\")\n\n\n\n\n\n\n\n\n*** : The Hubert index is a graphical method of determining the number of clusters.\n                In the plot of Hubert index, we seek a significant knee that corresponds to a \n                significant increase of the value of the measure i.e the significant peak in Hubert\n                index second differences plot. \n \n\n\n\n\n\n\n\n\n\n*** : The D index is a graphical method of determining the number of clusters. \n                In the plot of D index, we seek a significant knee (the significant peak in Dindex\n                second differences plot) that corresponds to a significant increase of the value of\n                the measure. \n \n******************************************************************* \n* Among all indices:                                                \n* 4 proposed 5 as the best number of clusters \n* 2 proposed 6 as the best number of clusters \n* 9 proposed 7 as the best number of clusters \n* 2 proposed 9 as the best number of clusters \n* 6 proposed 10 as the best number of clusters \n\n                   ***** Conclusion *****                            \n \n* According to the majority rule, the best number of clusters is  7 \n \n \n******************************************************************* \n\n\n\n\n3.2.2 Visualizing NB Clust\n\nAvg Silhouette WidthWithin Sum of SquareGap Statistics\n\n\n\nfviz_nbclust(clust_vars, FUNcluster = hcut, method = \"silhouette\", k.max = 10)\n\n\n\n\n\n\n\n\n\n\n\nfviz_nbclust(clust_vars, FUNcluster = hcut, method = \"wss\", k.max = 10)\n\n\n\n\n\n\n\n\n\n\n\nfviz_nbclust(clust_vars, FUNcluster = hcut, method = \"gap_stat\", k.max = 10)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo. 7 seems best\n\n\n\nFrom NbClust results it seem like 7 clustered is favored by 9 methods, however the number of cluster can be adjusted within the actual Shiny Application."
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#hierarchical-clustering",
    "href": "take-home_ex/ex03/th_ex03.html#hierarchical-clustering",
    "title": "Take-home Exercise 3",
    "section": "3.3 Hierarchical Clustering",
    "text": "3.3 Hierarchical Clustering\nWe will set our number of cluster for consistency across the subsequent clustering we will be doing.\n\nn_clust = 7\n\n\n3.3.1 Compute pair-wise distance\nNext we will calculate the pairwise Euclidean distances between rows of the clust_vars data frame .\n\nproxmat &lt;- dist(clust_vars, method = 'euclidean')\n\n\n\n3.3.2 Compute Cluster\n\n3.3.2.1 Selecting Clustering Method\n\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(clust_vars, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.6959711 0.6195356 0.7573835 0.8722831 \n\n\n\n\n\n\n\n\nward.D method\n\n\n\nA higher average silhouette width indicates better-defined clusters. In this case, Ward’s method seems to produce the best clustering solution based on the average silhouette width.\n\n\n\n\n3.3.2.2 Perform Clustering\nWe will perform a standard Hierarchical clustering with the ward.D method.\n\nclust_method &lt;- 'ward.D'\nhclust_ward &lt;- hclust(proxmat, method = clust_method)\n\n\n\n3.3.2.3 Visualizing Cluster\n\nDendogramHeatmapCluster\n\n\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = n_clust, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\n\nheatmaply(normalize(data.matrix(clust_vars)),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = clust_method,\n          seriate = \"OLO\",\n          colors = OrRd,\n          k_row = n_clust,\n          margins = c(NA,50,50,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of West Malaysia by Crime indicators\",\n          xlab = \"Crime and Demographic Indicators\",\n          ylab = \"Districts\"\n          )\n\n\n\n\n\n\n\n\ngroups &lt;- as.factor(cutree(hclust_ward, k=n_clust))\nhclust_ward_cluster &lt;- cbind(piv_df_mys.all, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\nhclust_ward_cluster.norm &lt;- cbind(clust_vars, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix(groups)`)\n\nhclust_ward_plot &lt;- tm_shape(hclust_ward_cluster) +\n  tm_fill(\"CLUSTER\", \n          palette = \"Set3\",\n          title = \"Cluster\") +\n  tm_layout(main.title = paste(\"Hierarchical Clustering - K:\", n_clust),\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 3, position = c(\"right\", \"top\")) +\n  tm_grid(alpha =0.2)\n\nhclust_ward_plot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOut-of-the-Box Spatially Relations\n\n\n\nThe clusters in general seem somewhat related among it’s immediate neighbour which is actually a good sign, it shows there are some form of spatial relation between crime patterns and their geographic localion.\n\n\n\n\n\n3.3.3 Compute Cluster (Geo Constrained)\n\n3.3.3.1 Compute distmat\nWe will need to compute the distance matrix, a specific format required for spatial analysis.\n\ndist &lt;- st_distance(piv_df_mys.all, piv_df_mys.all)\ndistmat &lt;- as.dist(dist)\n\n\n\n3.3.3.2 Compute Choicalpha\nNext we use choicealpha to determine the optimal threshold value (alpha) for defining neighbors based on distance. It considers various alpha values and selects the one that minimizes the number of isolated nodes and maximizes the number of clusters.\n\ncr &lt;- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=n_clust, graph = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.3.3.3 Perform Clustering\nThe threshold seem to be crossed at 0.1, hence we will be using that for our geographically constrained clustering.\n\nhclust_geo &lt;- hclustgeo(proxmat, distmat, alpha = 0.1)\n\n\n\n3.3.3.4 Visualizing Cluster\n\nDendogramCluster\n\n\n\nplot(hclust_geo, cex = 0.6)\nrect.hclust(hclust_geo, \n            k = n_clust, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\n\ngroups &lt;- as.factor(cutree(hclust_geo, k=n_clust))\nhclust_geo_cluster &lt;- cbind(piv_df_mys.all, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\nhclust_geo_cluster.norm &lt;- cbind(clust_vars, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix(groups)`)\n\nhclust_geo_plot &lt;- tm_shape(hclust_geo_cluster) +\n  tm_fill(\"CLUSTER\", \n          palette = \"Set3\",\n          title = \"Cluster\") +\n  tm_layout(main.title = paste(\"Hierarchical Clustering (Geo) - K:\", n_clust),\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 3, position = c(\"right\", \"top\")) +\n  tm_grid(alpha =0.2)\n\nhclust_geo_plot\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.3.3.5 Comparison\nLets put both cluster side-by-side. Both clustering results seems very similar, partly due to the low alpha value. But overall the clustering seems me coherenet as compared to the standard clusterin.\n\ntmap_arrange(hclust_ward_plot, hclust_geo_plot, ncol = 2)"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#skater-clustering",
    "href": "take-home_ex/ex03/th_ex03.html#skater-clustering",
    "title": "Take-home Exercise 3",
    "section": "3.4 Skater Clustering",
    "text": "3.4 Skater Clustering\nWe will also be attempting cluster using the SKATER method with MST and see if we can incoporate it into our Shiny application.\n\n3.4.1 Generating Neighbours\n\nnb &lt;- poly2nb(piv_df_mys.all)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 87 \nNumber of nonzero links: 402 \nPercentage nonzero weights: 5.311138 \nAverage number of links: 4.62069 \n1 region with no links:\n17\n3 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  4  3 13 26 13 15  5  4  3 \n4 least connected regions:\n33 66 67 71 with 1 link\n3 most connected regions:\n10 24 48 with 9 links\n\n\n\ncoords &lt;- st_coordinates(st_centroid(st_geometry(piv_df_mys.all)))\nplot(st_geometry(piv_df_mys.all), \n     border=grey(.5))\nplot(nb,\n     coords, \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote on disjoint\n\n\n\n3 Disjoint Subgraphs\n\nMainLand\nLangkawi (Region with no links)\nPulau Pinang\n\n\n\n\n\n3.4.2 Fixing Neighbours\nIn order to create a complete MST we have to address the issue above.\n\ncomponents &lt;- n.comp.nb(nb)\nwhich(components$comp.id == 2)\n\n[1] 17\n\npiv_df_mys.all$state_district[which(components$comp.id == 2)]\n\n[1] \"Kedah-Langkawi\"\n\nwhich(components$comp.id == 3)\n\n[1] 67 71\n\npiv_df_mys.all$state_district[which(components$comp.id == 3)]\n\n[1] \"Pulau Pinang-Barat Daya\" \"Pulau Pinang-Timur Laut\"\n\n\n\n3.4.2.1 Langkawi\nGiven that there are water routes to Langkawi from Kuala Perlis, Kuala Kedah and Penang we will add them into Langkawi neighbours\n\n\nindices_langkawi_boat &lt;- which(piv_df_mys.all$state_district %in% c(\"Perlis-Perlis\", \"Kedah-Kota Setar\", \"Pulau Pinang-Timur Laut\"))\n\nindices_langkawi_boat\n\n[1] 13 66 71\n\npiv_df_mys.all$state_district[indices_langkawi_boat]\n\n[1] \"Kedah-Kota Setar\"        \"Perlis-Perlis\"          \n[3] \"Pulau Pinang-Timur Laut\"\n\n\n\nnb[[17]] &lt;- as.integer(c(13, 66, 71))\nnb[[13]] &lt;- c(nb[[13]], as.integer(17))\nnb[[66]] &lt;- c(nb[[66]], as.integer(17))\nnb[[71]] &lt;- c(nb[[71]], as.integer(17))\n\n\n\n3.4.2.2 Pulau Pinang\nFor Penang island we will be mapping by the 2 land links available\n\nTimur Laut -&gt; S.P. Tengah\nBarat Daya -&gt; S.P. Selatan\n\n\n\ntm_shape(mys_sf %&gt;% filter(ADM1_EN==\"PULAU PINANG\")) +\n  tm_polygons() +\n  tm_text(\"ADM2_EN\", size = 0.3)\n\n\n\n\n\n\n\n\n\nindices_pulau_pinang &lt;- which(startsWith(piv_df_mys.all$state_district, \"Pulau Pinang\"))\n\nindices_pulau_pinang\n\n[1] 67 68 69 70 71\n\npiv_df_mys.all$state_district[indices_pulau_pinang]\n\n[1] \"Pulau Pinang-Barat Daya\"  \"Pulau Pinang-S.p. Tengah\"\n[3] \"Pulau Pinang-S.p. Utara\"  \"Pulau Pinang-S.p.selatan\"\n[5] \"Pulau Pinang-Timur Laut\" \n\n\n\n# BARAT DAYA\nnb[[67]] &lt;- c(nb[[67]], as.integer(68))\nnb[[68]] &lt;- c(nb[[68]], as.integer(67))\n\n# TIMUR LAUT\nnb[[71]] &lt;- c(nb[[71]], as.integer(70))\nnb[[70]] &lt;- c(nb[[70]], as.integer(71))\n\n\n\n3.4.2.3 Visualizing Fix\n\ncoords &lt;- st_coordinates(st_centroid(st_geometry(piv_df_mys.all)))\nplot(st_geometry(piv_df_mys.all), \n     border=grey(.5))\nplot(nb,\n     coords, \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\n\n\n\n\nThe graph is now no longer disjoint and we can proceed with computing our MST.\n\n\n\n3.4.3 Compute MST\n\n3.4.3.1 Compute nb Weights\nNext we create spatial weights matrix using the neighbor list nb and the edge costs lcosts.\n\nlcosts &lt;- nbcosts(nb, clust_vars)\nclust_vars.w &lt;- nb2listw(nb, \n                   lcosts, \n                   style=\"B\")\nsummary(clust_vars.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 87 \nNumber of nonzero links: 412 \nPercentage nonzero weights: 5.443255 \nAverage number of links: 4.735632 \n3 disjoint connected subgraphs\nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 \n 1  5 14 25 15 15  5  4  3 \n1 least connected region:\n33 with 1 link\n3 most connected regions:\n10 24 48 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1       S2\nB 87 7569 303.4572 503.8611 5265.124\n\n\n\n\n3.4.3.2 Generate MST\nConstructs a minimum spanning tree (MST) using the spatial weights matrix clust_vars.w with the minimum edge weight\n\nclust_vars.mst &lt;- mstree(clust_vars.w)\nhead(clust_vars.mst)\n\n     [,1] [,2]      [,3]\n[1,]   32   29 0.5014292\n[2,]   29   28 0.4930300\n[3,]   28   26 0.4246803\n[4,]   29   31 0.5418653\n[5,]   31   25 0.3540978\n[6,]   31   27 0.5235293\n\n\n\nplot(st_geometry(piv_df_mys.all), \n                 border=gray(.5))\nplot.mst(clust_vars.mst, \n         coords, \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n3.4.4 Compute Cluster\nNext we perform spatial clustering on the data using the computed mst. The skater function divides the MST into clusters based on edge cuts.\n\nclust &lt;- spdep::skater(edges = clust_vars.mst[,1:2], \n                 data = clust_vars, \n                 method = \"euclidean\", \n                 ncuts = (n_clust - 1))\n\nstr(clust)\n\nList of 8\n $ groups      : num [1:87] 2 2 2 2 2 2 2 2 2 2 ...\n $ edges.groups:List of 7\n  ..$ :List of 3\n  .. ..$ node: num [1:22] 56 25 65 31 29 30 61 63 26 28 ...\n  .. ..$ edge: num [1:21, 1:3] 25 65 31 61 29 25 63 63 30 26 ...\n  .. ..$ ssw : num 11.4\n  ..$ :List of 3\n  .. ..$ node: num [1:26] 73 74 78 35 42 6 36 43 8 1 ...\n  .. ..$ edge: num [1:25, 1:3] 35 6 42 75 36 78 74 8 42 43 ...\n  .. ..$ ssw : num 14.1\n  ..$ :List of 3\n  .. ..$ node: num [1:3] 76 72 34\n  .. ..$ edge: num [1:2, 1:3] 76 72 72 34 0.661 ...\n  .. ..$ ssw : num 1.36\n  ..$ :List of 3\n  .. ..$ node: num [1:18] 83 84 49 86 82 55 52 51 54 46 ...\n  .. ..$ edge: num [1:17, 1:3] 55 52 84 54 82 49 51 46 39 83 ...\n  .. ..$ ssw : num 8.41\n  ..$ :List of 3\n  .. ..$ node: num [1:16] 13 69 19 14 16 20 70 71 15 68 ...\n  .. ..$ edge: num [1:15, 1:3] 69 14 19 69 19 19 16 20 70 71 ...\n  .. ..$ ssw : num 8.52\n  ..$ :List of 3\n  .. ..$ node: num 17\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 47\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:7] 1 2 3 4 5 6 7\n $ ssto        : num 55.2\n $ ssw         : num [1:7] 55.2 52.6 50.4 48.6 46.6 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:87] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\n\n\n3.4.5 Visualizing Clusters\n\nMSTClusters\n\n\n\nplot(st_geometry(piv_df_mys.all), \n     border=gray(.5))\nplot(clust, \n     coords, \n     cex.lab=.5,\n     add=TRUE)\n\n\n\n\n\n\n\n\n\n\n\ngroups_mat &lt;- as.matrix(clust$groups)\nskater_cluster &lt;- cbind(piv_df_mys.all, as.factor(groups_mat)) %&gt;%\n  rename(`CLUSTER`=`as.factor.groups_mat.`)\nskater_cluster.norm &lt;- cbind(clust_vars, as.factor(groups_mat)) %&gt;%\n  rename(`CLUSTER`=`as.factor(groups_mat)`)\n\nskater_plot &lt;- tm_shape(skater_cluster) +\n  tm_fill(\"CLUSTER\", \n          palette = \"Set3\",\n          title = \"Cluster\") +\n  tm_layout(main.title = paste(\"Skater Clustering - K:\", n_clust),\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 3, position = c(\"right\", \"top\")) +\n  tm_grid(alpha =0.2)\n\nskater_plot"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#intepreting-results",
    "href": "take-home_ex/ex03/th_ex03.html#intepreting-results",
    "title": "Take-home Exercise 3",
    "section": "3.5 Intepreting Results",
    "text": "3.5 Intepreting Results\nTo better understand the crime patterns across West Malaysia, we will utilize a range of visualizations such as parallel coordinates, cluster profiling with barcharts and heatmaps\n\n3.5.1 Comparing Clusters\n\ntmap_arrange(hclust_ward_plot, hclust_geo_plot, skater_plot, ncol = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSkater is a No-go\n\n\n\nThe skater clustering technique, appears to be overly reliant on spatial proximity in this case. While it successfully groups geographically contiguous regions, it may not capture the crime patterns. This limitation could result in less insightful clusters that do not adequately differentiate between areas with similar crime characteristics but different spatial locations. Hence we will be ommitting the use of the skater technique for our R application.\n\n\n\n\n3.5.2 Parallel Coordinates (Crime)\nWe will be using parallel coordinates to help intepret and highlight the characteristics of the cluster within the application.\n\nH-Cluster (Ward)H-Cluster (Geo)Skater-Cluster\n\n\n\nggparcoord(data = hclust_ward_cluster.norm, \n           columns = c(1:7), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of Crime type by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 90))\n\n\n\n\n\n\n\n\n\n\n\nggparcoord(data = hclust_geo_cluster.norm, \n           columns = c(1:7), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of Crime type by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 90))\n\n\n\n\n\n\n\n\n\n\n\nggparcoord(data = skater_cluster.norm, \n           columns = c(1:7), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of Crime type by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 90))\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.5.3 Parral Coordinates (Demographics)\n\nH-Cluster (Ward)H-Cluster (Geo)Skater Cluster\n\n\n\nggparcoord(data = hclust_ward_cluster.norm, \n           columns = c(8:12), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of Demographic by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 90))\n\n\n\n\n\n\n\n\n\n\n\nggparcoord(data = hclust_geo_cluster.norm,  \n           columns = c(8:12), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of Demographic by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 90))\n\n\n\n\n\n\n\n\n\n\n\nggparcoord(data = skater_cluster.norm,  \n           columns = c(8:12), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of Demographic by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 90))\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.5.4 Cluster Profiling\nWe will also be profiling the different cluster with a comparison with barcharts of the different crime types (per 1000 capita) as well as interactive heatmap to see the bigger picture.\n\nH-Cluster (Ward)H-Cluster (Geo)Skater Cluster\n\n\n\nhclust_ward_prof &lt;- hclust_ward_cluster %&gt;% \n  st_drop_geometry() %&gt;%\n  group_by(CLUSTER) %&gt;%\n  summarise(mean_causing_injury = mean(causing_injury),\n            mean_murder = mean(murder),\n            mean_rape = mean(rape),\n            mean_robbery = mean(robbery),\n            mean_break_in = mean(break_in),\n            mean_theft_other = mean(theft_other),\n            mean_vehicle_theft = mean(vehicle_theft))\n\n\nggplot(hclust_ward_prof %&gt;% pivot_longer(-CLUSTER, names_to = \"metric\", values_to = \"value\"), \n       aes(x = CLUSTER, y = value, fill = CLUSTER)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~ metric, scales = \"free_y\", ncol = 4) +  \n  scale_fill_brewer(palette = \"Set3\") +\n  ggtitle(\"Cluster Profile (Ward)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nheatmaply(as.matrix(hclust_ward_prof[, 2:ncol(hclust_ward_prof)]), \n          dendrogram = 'none',\n          Colv = FALSE, \n          colors = OrRd,\n          labRow = hclust_ward_prof$CLUSTER,\n          margins = c(NA,100,50,NA),\n          fontsize_row = 10,\n          fontsize_col = 8,\n          main=\"Cluster Heatmap (H-Clust)\",\n          xlab = \"Crime Indicators\",\n          ylab = \"Clusters\")\n\n\n\n\n\n\n\n\nhclust_geo_prof &lt;- hclust_geo_cluster %&gt;% \n  st_drop_geometry() %&gt;%\n  group_by(CLUSTER) %&gt;%\n  summarise(mean_causing_injury = mean(causing_injury),\n            mean_murder = mean(murder),\n            mean_rape = mean(rape),\n            mean_robbery = mean(robbery),\n            mean_break_in = mean(break_in),\n            mean_theft_other = mean(theft_other),\n            mean_vehicle_theft = mean(vehicle_theft))\n\n\nggplot(hclust_geo_prof %&gt;% pivot_longer(-CLUSTER, names_to = \"metric\", values_to = \"value\"), \n       aes(x = CLUSTER, y = value, fill = CLUSTER)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~ metric, scales = \"free_y\", ncol = 4) +  \n  scale_fill_brewer(palette = \"Set3\") +\n  ggtitle(\"Cluster Profile (Geo)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nheatmaply(as.matrix(hclust_geo_prof[, 2:ncol(hclust_geo_prof)]), \n          dendrogram = 'none',\n          Colv = FALSE, \n          colors = OrRd,\n          labRow = hclust_geo_prof$CLUSTER,\n          margins = c(NA,100,50,NA),\n          fontsize_row = 10,\n          fontsize_col = 8,\n          main=\"Cluster Heatmap (H-Clust Geo)\",\n          xlab = \"Crime Indicators\",\n          ylab = \"Clusters\")\n\n\n\n\n\n\n\n\nskater_prof &lt;- skater_cluster %&gt;% \n  st_drop_geometry() %&gt;%\n  group_by(CLUSTER) %&gt;%\n  summarise(mean_causing_injury = mean(causing_injury),\n            mean_murder = mean(murder),\n            mean_rape = mean(rape),\n            mean_robbery = mean(robbery),\n            mean_break_in = mean(break_in),\n            mean_theft_other = mean(theft_other),\n            mean_vehicle_theft = mean(vehicle_theft))\n\n\nggplot(skater_prof %&gt;% pivot_longer(-CLUSTER, names_to = \"metric\", values_to = \"value\"), \n       aes(x = CLUSTER, y = value, fill = CLUSTER)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~ metric, scales = \"free_y\", ncol = 4) +  \n  scale_fill_brewer(palette = \"Set3\") +\n  ggtitle(\"Cluster Profile (Skater)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nheatmaply(as.matrix(skater_prof[, 2:ncol(skater_prof)]), \n          dendrogram = 'none',\n          Colv = FALSE, \n          colors = OrRd,\n          labRow = skater_prof$CLUSTER,\n          margins = c(NA,100,50,NA),\n          fontsize_row = 10,\n          fontsize_col = 8,\n          main=\"Cluster Heatmap (Skater)\",\n          xlab = \"Crime Indicators\",\n          ylab = \"Clusters\")"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#flow",
    "href": "take-home_ex/ex03/th_ex03.html#flow",
    "title": "Take-home Exercise 3",
    "section": "4.1 Flow",
    "text": "4.1 Flow\nFor the presentation flow of my application it is structured it as such:\n\nVariable Exploration: For this section the user can explore the distribution of the variables in different type of plots\nCluster Configuration: Next the user can use the NbClust tool provided to make informed decision on the no. of clusters to use\nCluster Results: Where the actual clustering happens, the cluster will be displayed for the user for their configuration with other chart aids\nFurther Analysis: Finally the user will be able to analyse and further extract insights from the clustering with parallel coords and cluster profiles"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#variable-exploration-1",
    "href": "take-home_ex/ex03/th_ex03.html#variable-exploration-1",
    "title": "Take-home Exercise 3",
    "section": "4.2 Variable Exploration",
    "text": "4.2 Variable Exploration\nIn this section user can explore the different variables used for clustering and various plot types such Histogram, Density and Boxplot\nInput Parameters:\n\nYear: Year filter on the data\nState: State filter on the data\nDistrict: District filter on the data\nPlot type: Type of plot to use\nData Standardisation: Toggle data standardisation\n\nOutput:\n\nA facet plot of variables distribution\n\n\n4.2.1 Histogram\n\n\n\n4.2.2 Density\n\n\n\n4.2.3 Boxplot w/ Standardisation"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#cluster-configuration",
    "href": "take-home_ex/ex03/th_ex03.html#cluster-configuration",
    "title": "Take-home Exercise 3",
    "section": "4.3 Cluster Configuration",
    "text": "4.3 Cluster Configuration\nIn this section user can experiment and decide how they would like to configure their cluster subsequently.\nInput Parameters:\n\nYear: Year filter on the data\nStyle: NbClust or Fviz chart to plot\nMethod: Method used for specifc style\nMin Cluster (Only NbClust): Minimum no. of cluster\n\nOutput:\n\nCharts/Results from the cluster analysis methods\n\n\n4.3.1 NbClust\n\n\n\n4.3.2 Fiviz (Gap Stats)"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#cluster-results",
    "href": "take-home_ex/ex03/th_ex03.html#cluster-results",
    "title": "Take-home Exercise 3",
    "section": "4.4 Cluster Results",
    "text": "4.4 Cluster Results\nIn this section user can compute the cluster base on the configuration they have entered.\nInput Parameters:\n\nYear: Year filter on the data\nNo. of Cluster: Indicate the no. of cluster to compute\nClustering Method: Hierarchical and Geographically-Constrained Hierarchical (GeoClust) clustering available as well as comparison\nMethod (Only Hierarchical): Clustering method\nStyle (Only Hierarchical): Clustering on Map or Heatmap option\nChoice Alpha: Configure alpha threshold for Geographically-Constrained clustering\n\nOutput:\n\nClusters plotted on the map of West Malaysia\nDendogram/Choicealpha Chart\n\n\n4.4.1 Hierarchical Clustering\n\n\n\n4.4.2 Geographically Constrained Clustering\n\n\n\n4.4.3 Hierarchical Clustering (Heatmaply)\n\n\n\n4.4.4 Cluster Comparison"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#further-analysis",
    "href": "take-home_ex/ex03/th_ex03.html#further-analysis",
    "title": "Take-home Exercise 3",
    "section": "4.5 Further Analysis",
    "text": "4.5 Further Analysis\nIn this section user will be able to further intepret the results of the clustering with the aid of individual cluster profiles and the parallel coordinates.\nInput Parameters:\n\nCluster Result: Clustering result to analyse\nStyle: Indicate style of main plot; Cluster profile (Barcharts) or Heatmap\nParallel Coordinates: Crime or Demographic option\nBoxplot (For Par Coords): Include or omit boxplot\nStandardised (For Par Coords): Indicate if plotted data should be standardised (min-max)\n\nOutput:\n\nCluster profile in either Barchart or Heatmap\nParallel Coordinates of Crime/Demographic by Cluster\n\n\n4.5.1 Cluster Profile & Para Coord\n\n\n\n4.5.2 Heatmap & Para Coord"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#data-wrangling",
    "href": "take-home_ex/ex03/th_ex03.html#data-wrangling",
    "title": "Take-home Exercise 3",
    "section": "5.1 Data Wrangling",
    "text": "5.1 Data Wrangling\nEyeing the data from the site, we presume wrangling would be straightforward however, data cleaning and preparation process proved to be more tedious than anticipated due to inconsistencies in district names and the raw nature of the crime data. Normalizing the crime data by incorporating population data was essential to obtain meaningful insights."
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#skater-clustering-1",
    "href": "take-home_ex/ex03/th_ex03.html#skater-clustering-1",
    "title": "Take-home Exercise 3",
    "section": "5.2 Skater Clustering",
    "text": "5.2 Skater Clustering\nWhile spatial clustering techniques like Skater can be effective in certain cases, it can vary depending on the specific data. In our case, the Skater clustering results were somewhat limited, primarily identifying geographically contiguous clusters. This highlights the importance of exploring multiple clustering techniques and evaluating their outputs to determine the best technique for our usecase.\nSkater (Left) vs H-Clust, K:13"
  },
  {
    "objectID": "take-home_ex/ex03/th_ex03.html#storyboarding",
    "href": "take-home_ex/ex03/th_ex03.html#storyboarding",
    "title": "Take-home Exercise 3",
    "section": "5.3 Storyboarding",
    "text": "5.3 Storyboarding\nThe process of developing a compelling story board took up quite a bit of time, as there was quite fair bit that could be done with clustering. However the scope and flow is arguably more important, coming up with a flow that delivers impactful findings and value to user is more crucial than the amount of charts visualized."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Geospatial Analytics and Applications - IS415",
    "section": "",
    "text": "The following documents my GIS explorations:\n\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 8\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver geopgraphical segmentation with spatially constrainted clustering techniques\n\n\n\nJeffery Lau\n\n\nOct 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 3\n\n\n\nTake-home\n\n\n\nIn this exercise, we will develop an interactive Geospatial Analytics Shiny App to enable users to explore crime patterns in West Malaysia. By leveraging spatial clustering…\n\n\n\nJeffery Lau\n\n\nOct 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 7\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver geopgraphical segmentation with spatially constrainted clustering techniques\n\n\n\nJeffery Lau\n\n\nOct 11, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 6\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with Spatial Autocorrelation\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 9\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to perform spatially constraint clustering\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 10\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 2\n\n\n\nTake-home\n\n\n\nIn this exercise, we will be analyzing drug use offence in Thailand from 2017 - 2022, using spatial autocorrelation techniques to identify clusters, outliers and hotspots of…\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 6\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver the Global and Local Spatial Autocorrelation Analysis Methods\n\n\n\nJeffery Lau\n\n\nSep 21, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 5\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with GWmodel\n\n\n\nJeffery Lau\n\n\nSep 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 5\n\n\n\nHands-on\n\n\n\nIn this exercise we learn about spatial weights and applications\n\n\n\nJeffery Lau\n\n\nSep 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 11\n\n\n\nHands-on\n\n\n\nIn this exercise we will learn how to build predictive model by using geographical random forest method.\n\n\n\nJeffery Lau\n\n\nSep 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 4\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with sparr to perform spatial temporal analysis on our data\n\n\n\nJeffery Lau\n\n\nSep 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 4\n\n\n\nHands-on\n\n\n\nHands-on on Spatial-Temporal Analysis covered in In-class exercise 4\n\n\n\nJeffery Lau\n\n\nSep 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 1\n\n\n\nTake-home\n\n\n\nIn this exercise, We will be analyzing armed conflict data in Myanmar, using spatial point pattern analysis to understand the distribution and relationships between conflict…\n\n\n\nJeffery Lau\n\n\nSep 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 3\n\n\n\nIn-class\n\n\n\nIn this exercise we revisted on how to do proper CRS projection and transformations. Note: Last modified to update title only.\n\n\n\nJeffery Lau\n\n\nSep 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 3\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver the 1st and 2nd Order Spatial Point Patterns Analysis Methods\n\n\n\nJeffery Lau\n\n\nAug 30, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 2\n\n\n\nIn-class\n\n\n\nIn this exercise we learn to handle corrupted data, transforming CRS as well as some geoprocessing and joining of geospatial and aspatial data. Note: Last modified to update…\n\n\n\nJeffery Lau\n\n\nAug 26, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 2\n\n\n\nHands-on\n\n\n\nIn this exercise we work with themeatic mapping using tmap package to visualize our data\n\n\n\nJeffery Lau\n\n\nAug 19, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 1\n\n\n\nIn-class\n\n\n\nFirst lesson, learnt how to setup quatro doc. Note: Last modified to update title only.\n\n\n\nJeffery Lau\n\n\nAug 19, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 1\n\n\n\nHands-on\n\n\n\nIn this exercise we get our first hands-on with geoprocessing and basic plotting with R\n\n\n\nJeffery Lau\n\n\nAug 17, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html",
    "href": "hands-on_ex/ex02/ho_ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "The following code chunk uses p_load() to install and load the sf, tidyverse and tmap packages.\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#data-wrangling",
    "href": "hands-on_ex/ex02/ho_ex02.html#data-wrangling",
    "title": "Hands-on Exercise 2",
    "section": "3.1 Data Wrangling",
    "text": "3.1 Data Wrangling\n\n# Filter data to 2020, groupby and sum the population\npopdata2020grouped &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`))\n\n# Pivot wider by age \npopdata2020pivot &lt;- popdata2020grouped %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, values_from=POP)\n\n# Sum into age groups\npopdata2020 &lt;- popdata2020pivot %&gt;%\n  mutate(`YOUNG` = rowSums(.[3:6]) + rowSums(.[14])) %&gt;%\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+rowSums(.[15])) %&gt;%\n  mutate(`AGED` = rowSums(.[16:21])) %&gt;%\n  mutate(`TOTAL` = rowSums(.[3:21])) %&gt;%\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\n# View popdata\nhead(popdata2020, n=5)\n\n# A tibble: 5 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  &lt;chr&gt;      &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 Ang Mo Kio Ang Mo Kio Town Cent…  1290             2760   760  4810      0.743\n2 Ang Mo Kio Cheng San              5640            16460  6050 28150      0.710\n3 Ang Mo Kio Chong Boon             5100            15000  6470 26570      0.771\n4 Ang Mo Kio Kebun Bahru            4620            13010  5120 22750      0.749\n5 Ang Mo Kio Sembawang Hills        1880             3630  1310  6820      0.879\n\n\nConvert PA and SZ fields to uppercase\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nhead(popdata2020)\n\n# A tibble: 6 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  &lt;chr&gt;      &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 ANG MO KIO ANG MO KIO TOWN CENT…  1290             2760   760  4810      0.743\n2 ANG MO KIO CHENG SAN              5640            16460  6050 28150      0.710\n3 ANG MO KIO CHONG BOON             5100            15000  6470 26570      0.771\n4 ANG MO KIO KEBUN BAHRU            4620            13010  5120 22750      0.749\n5 ANG MO KIO SEMBAWANG HILLS        1880             3630  1310  6820      0.879\n6 ANG MO KIO SHANGRI-LA             3330             9050  3610 15990      0.767"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#joining-the-attribute-data",
    "href": "hands-on_ex/ex02/ho_ex02.html#joining-the-attribute-data",
    "title": "Hands-on Exercise 2",
    "section": "3.2 Joining the attribute data",
    "text": "3.2 Joining the attribute data\nNext we will join the geographical data with the attribute table using the SZ as common identifier using the dplyr package.\n\nmpsz_popdata2020 &lt;- left_join(mpsz, popdata2020, by = c(\"SUBZONE_N\" = \"SZ\"))\n\nhead(mpsz_popdata2020)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area              PA YOUNG ECONOMY ACTIVE AGED\n1 29220.19   5267.381  1630379.3            &lt;NA&gt;    NA             NA   NA\n2 29782.05   3506.107   559816.2          OUTRAM   930           3130 2120\n3 29974.66   1740.926   160807.5 SINGAPORE RIVER     0             40   10\n4 29933.77   3313.625   595428.9     BUKIT MERAH  2600           7450 3320\n5 30005.70   2825.594   387429.4     BUKIT MERAH  2760           6160 1740\n6 29991.38   4428.913  1030378.8     BUKIT MERAH  2800           7340 3420\n  TOTAL DEPENDENCY                       geometry\n1    NA         NA MULTIPOLYGON (((31495.56 30...\n2  6180  0.9744409 MULTIPOLYGON (((29092.28 30...\n3    50  0.2500000 MULTIPOLYGON (((29932.33 29...\n4 13370  0.7946309 MULTIPOLYGON (((27131.28 30...\n5 10660  0.7305195 MULTIPOLYGON (((26451.03 30...\n6 13560  0.8474114 MULTIPOLYGON (((25899.7 297...\n\n\nIn order to store the current state of the data frame we can export as an rds file to be reused later\n\nwrite_rds(mpsz_popdata2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#plotting-using-tmaps-element",
    "href": "hands-on_ex/ex02/ho_ex02.html#plotting-using-tmaps-element",
    "title": "Hands-on Exercise 2",
    "section": "4.2 Plotting using tmap’s element",
    "text": "4.2 Plotting using tmap’s element\nFor a more customized plot use tmap elements instead\n\ntm_shape(mpsz_popdata2020) + \n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Blues\", title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\", \n            main.title.position = \"center\",main.title.size = 1.2, legend.height = 0.45, legend.width = 0.35, frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n4.2.1 Drawing a basemap\nThe basic building of tmap is tm_shape() followed by one or more layer of elements such as tm_fill() or tm_polygons(). In the following the tm_shape() is used with tm_polygons() to draw the subzones.\n\ntm_shape(mpsz_popdata2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\n4.2.1 Using tm_fill and tm_border\nNext the DEPENDENCY attribute is included into the fill and polygon plot. Note that tm_polygons() is a wrapper for the tm_fill() which shades the polygons using the default color scheme and uses tm_borders() to add the borders of the shapefile\n\nfill_map &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", title = \"Fill\")\n\n# Note that the borders are plotted\npolygon_map &lt;- tm_shape(mpsz_popdata2020) + tm_polygons(\"DEPENDENCY\", title = \"Polygon\")\n\n# tm_fill with tm_borders added\nfill_border_map &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", title = \"Fill + Border\") + tm_borders(lwd = 0.5, lty = \"solid\", alpha = 1, col = \"Black\" )\n\ntmap_arrange(fill_map, polygon_map, fill_border_map, asp=0, ncol=3)\n\n\n\n\n\n\n\n\n\nThe default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by tmap\nThe default color scheme used is YlOrRd of ColorBrewer. By default, Missing value will be shaded in grey."
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#plotting-with-classification-methods",
    "href": "hands-on_ex/ex02/ho_ex02.html#plotting-with-classification-methods",
    "title": "Hands-on Exercise 2",
    "section": "4.3 Plotting with Classification methods",
    "text": "4.3 Plotting with Classification methods\nMost plots requires some form of data classification to group a large number of observation into meaninful ranges or classes. tmap provides a total of ten classification methods; fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks. All of which can be defined with the style argument of tm_fill() or tm_polygons()\n\n4.3.1 Comparing Classification Styles\n\n# Comparing the different classification styles\nsd_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"sd\", title = \"sd\") + tm_borders(alpha = 0.5)\nkmeans_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"kmeans\", title = \"kmeans\") + tm_borders(alpha = 0.5)\nquantile_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"quantile\", title = \"quantile\") + tm_borders(alpha = 0.5)\njenks_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"jenks\", title = \"jenks\") + tm_borders(alpha = 0.5)\n\ntmap_arrange(sd_plot, kmeans_plot, quantile_plot, jenks_plot, asp=0, ncol=4)\n\n\n\n\n\n\n\n\nWith the side by side comparison of the different styles, we could observe: - Quantile seems to have an even spread of colors BUT not in values, hence may not necessary be a good representation - sd is the least illustrative of the 4 BUT also the most equal in terms of value distribution\n\n\n4.3.2 Plotting with Custom break\nIn order to override the default breaks computed internally we can set it explicitly with the break argument in tm_fill()\nStart by taking a look at the summary to get some descriptive statistics of the data we are working with.\n\nsummary(mpsz_popdata2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\n\nWith the above reference we can set our breaks in the following\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) + \n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#color-scheme",
    "href": "hands-on_ex/ex02/ho_ex02.html#color-scheme",
    "title": "Hands-on Exercise 2",
    "section": "4.4 Color Scheme",
    "text": "4.4 Color Scheme\nThe color ramp can also be change based on RColorBrewer package.\n\n\n4.4.1 Changing color ramp\nTo change the color ramp simply assign the palette argument in tm_fill()\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", n = 6, style = \"quantile\", palette = \"BuPu\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.4.2 Reverse color ramp\nTo reverse the color ramp add a - to the palette\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", n = 6, style = \"quantile\", palette = \"-BuPu\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#map-layouts",
    "href": "hands-on_ex/ex02/ho_ex02.html#map-layouts",
    "title": "Hands-on Exercise 2",
    "section": "4.5 Map Layouts",
    "text": "4.5 Map Layouts\nFor a comprehensive plot several map elements are required, such as the scale bar, compass, title etc.\n\n4.5.1 Map Legend\nIn the following we made out legend a histogram among other customization to it.\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", style = \"fisher\", palette = \"BuGn\", legend.hist = TRUE, legend.is.portrait = FALSE, legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Fisher classification)\",\n            main.title.position = \"center\", main.title.size = 1, legend.height = 0.45, legend.width = 0.35, legend.outside = FALSE, legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.5.2 Map Style\nTo simplify styling we can also use existing tmap styles\n\ntm_shape(mpsz_popdata2020)+\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"cobalt\")\n\n\n\n\n\n\n\n\n\n\n4.5.2 Cartographic Elements\nCartographic furnitures can also be added such compass, scale bar and grid lines using the tm_compass(), tm_scale_bar() and tm_grid() respectively\n\ntm_shape(mpsz_popdata2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"4star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\")) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\nTo reset tmap style to default simply run tmap_style(\"white\")"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#portraying-multiple-maps",
    "href": "hands-on_ex/ex02/ho_ex02.html#portraying-multiple-maps",
    "title": "Hands-on Exercise 2",
    "section": "4.6 Portraying Multiple Maps",
    "text": "4.6 Portraying Multiple Maps\nSmall maps aka facet maps can be arrange vertically or horizontally to help visualise relations between changes in variables. Such maps can be plotted in 3 ways: 1. By assigning multiple values to at least one of the aesthetic arguments, 2. by defining a group-by variable in tm_facets(), and 3. By creating multiple stand-alone maps with tmap_arrange().\n\n4.6.1 Defining with Aesthetic Arguments\nIn the following the values are assigned to ncols\n\ntm_shape(mpsz_popdata2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"), style = \"quantile\", palette = list(\"Blues\", \"Reds\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\n\n\n4.6.2 Defining with tm_facets()\nChoropleth created using tm_facets() based on the REGION_N\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Blues\", thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", free.coords=TRUE, drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE, title.position = c(\"center\", \"center\"),title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.6.3 Defining with tmap_arrange()\nAs seen previously tmap_arrange() can be used to render individual maps\n\nyoungmap &lt;- tm_shape(mpsz_popdata2020) + \n  tm_polygons(\"YOUNG\", style = \"quantile\", palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_popdata2020) + \n  tm_polygons(\"AGED\", style = \"quantile\", palette = \"Reds\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#mapping-with-selection-criterion",
    "href": "hands-on_ex/ex02/ho_ex02.html#mapping-with-selection-criterion",
    "title": "Hands-on Exercise 2",
    "section": "4.7 Mapping with Selection Criterion",
    "text": "4.7 Mapping with Selection Criterion\nInstead of mapping the entire data frame we can also map just parts of it by filtering the data frame\n\ntm_shape(mpsz_popdata2020[mpsz_popdata2020$REGION_N==\"NORTH-EAST REGION\", ]) +\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"YlGnBu\", legend.hist = TRUE, legend.is.portrait = TRUE,legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE, legend.outside.size = 0.2, legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html",
    "href": "hands-on_ex/ex08/ho_ex08.html",
    "title": "Hands-on Exercise 8",
    "section": "",
    "text": "This hands-on exercise we are aiming to develop hedonic pricing models for condominium resale prices in 2015 using a geographically weighted regression (GWR) approach. GWR is a spatial statistical technique that allows for varying relationships between independent variables (such as structural and locational factors) and the dependent variable (resale prices) across different geographical locations. By considering the local context, GWR can capture spatial variations in the influence of these factors on condominium prices, providing a more accurate and nuanced understanding of the housing market."
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html#loading-packages",
    "href": "hands-on_ex/ex08/ho_ex08.html#loading-packages",
    "title": "Hands-on Exercise 8",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\n\nBuilding OLS and performing diagnostic tests: olsrr\nCalibrate Geopgrahical weighted models: GWmodel\nMultivariate Data Visualization: corrplot\n\n\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)"
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html#importing-data",
    "href": "hands-on_ex/ex08/ho_ex08.html#importing-data",
    "title": "Hands-on Exercise 8",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/IS415-GAA/hands-on_ex/ex08/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz_svy21 &lt;- st_transform(mpsz, 3414)\n\nUsing st_bbox to see the extent of mpsz_svy21\n\nst_bbox(mpsz_svy21) \n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334 \n\n\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             &lt;dbl&gt; 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            &lt;dbl&gt; 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\nCovnert condo_resale from Aspatial to sf\n\ncondo_resale.sf &lt;- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %&gt;%\n                    st_transform(crs=3414)\n\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLING_PRICE AREA_SQM   AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n     &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;\n1   118635       3000000      309    30     7.94          0.166            2.52 \n2   288420       3880000      290    32     6.61          0.280            1.93 \n3   267833       3325000      248    33     6.90          0.429            0.502\n4   258380       4250000      127     7     4.04          0.395            1.99 \n5   467169       1400000      145    28    11.8           0.119            1.12 \n6   466472       1320000      139    22    10.3           0.125            0.789\n# ℹ 15 more variables: PROX_URA_GROWTH_AREA &lt;dbl&gt;, PROX_HAWKER_MARKET &lt;dbl&gt;,\n#   PROX_KINDERGARTEN &lt;dbl&gt;, PROX_MRT &lt;dbl&gt;, PROX_PARK &lt;dbl&gt;,\n#   PROX_PRIMARY_SCH &lt;dbl&gt;, PROX_TOP_PRIMARY_SCH &lt;dbl&gt;,\n#   PROX_SHOPPING_MALL &lt;dbl&gt;, PROX_SUPERMARKET &lt;dbl&gt;, PROX_BUS_STOP &lt;dbl&gt;,\n#   NO_Of_UNITS &lt;dbl&gt;, FAMILY_FRIENDLY &lt;dbl&gt;, FREEHOLD &lt;dbl&gt;,\n#   LEASEHOLD_99YR &lt;dbl&gt;, geometry &lt;POINT [m]&gt;"
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html#selling-price-distribution",
    "href": "hands-on_ex/ex08/ho_ex08.html#selling-price-distribution",
    "title": "Hands-on Exercise 8",
    "section": "3.1 Selling Price Distribution",
    "text": "3.1 Selling Price Distribution\nWe can view the SELLING price. It is a right skewed ditrbution.\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")"
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html#selling-price-distribution-normalised",
    "href": "hands-on_ex/ex08/ho_ex08.html#selling-price-distribution-normalised",
    "title": "Hands-on Exercise 8",
    "section": "3.2 Selling Price Distribution (Normalised)",
    "text": "3.2 Selling Price Distribution (Normalised)\nWe can fix skewness by normalising using log transformation.\n\ncondo_resale.sf &lt;- condo_resale.sf %&gt;%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")"
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html#condo-variables-distribution",
    "href": "hands-on_ex/ex08/ho_ex08.html#condo-variables-distribution",
    "title": "Hands-on Exercise 8",
    "section": "3.3 Condo Variables Distribution",
    "text": "3.3 Condo Variables Distribution\n\nAREA_SQM &lt;- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE &lt;- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)\n\n\n\n\n\n\n\n\n##3.4 Distribution of Condo Resale Prices\n\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))"
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html#simple-linear-regression-method",
    "href": "hands-on_ex/ex08/ho_ex08.html#simple-linear-regression-method",
    "title": "Hands-on Exercise 8",
    "section": "4.1 Simple Linear Regression Method",
    "text": "4.1 Simple Linear Regression Method\nIndependent (x) -&gt; AREA_SQM and Dependent (y) -&gt; SELLING_PRICE\n\ncondo.slr &lt;- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: &lt; 2.2e-16\n\n\nWe derive the formula to be y = -258121.1 + 14719x1. Since p-value is small we can reject H0 and know area square is a good estimator. We can also visualize the regression line on a scatter plot.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html#multiple-linear-regression-method",
    "href": "hands-on_ex/ex08/ho_ex08.html#multiple-linear-regression-method",
    "title": "Hands-on Exercise 8",
    "section": "4.2 Multiple Linear Regression Method",
    "text": "4.2 Multiple Linear Regression Method\n\n4.2.1 Plot Corrplot\nUsing corrplot we can see if there is any collinearity in our data. This is to ensure our independent variables are not highly correlated to each other. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”.\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\n\n\n\n\n\n4.2.2 Calibrating Regression Model\nUsing lm we can also calibrate multiple linear regression model\n\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16\n\n\nNext we filter out variables that are not statitically significant\n\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.592 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.592                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\nUsing the tbl_regression we can create a formatted regression report. We can also add source notes.\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = &lt;0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\n\n4.2.3 Test for Multicollinearity\nWe will be using olsrr to build better multiple regression models, we start by using ols_vif_tol to test for Multicollinearity\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\nSince VIF are all lesser than 10 we can assume there is no sign of multicollinearity.\n\n\n4.2.4 Test for Non-linearity\nNext we can test non-linearity test using ols_plot_resid_fit to perform linearity assumption test.\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\n\n\n\n\n\n\n4.2.4 Test for Normality Assumption\nThe figure reveals that the residual of the multiple linear regression model resemble normal distribution.\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\n\n\n\n\nCan also be tested statistically\n\nols_test_normality(condo.mlr1)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\n\n\n4.2.5 Test for Spatial Autocrrelation\nWe need to first conver sf df to SpatialPointsDataFrame\n\nmlr.output &lt;- as.data.frame(condo.mlr1$residuals)\n\nJoin with the sf object\n\ncondo_resale.res.sf &lt;- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %&gt;%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\nConvert it to spatial object\n\ncondo_resale.sp &lt;- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nViewing it on a map we can signs of spatial autocorrelation\n\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\ntmap_mode(\"plot\")\n\nTo prove spatial autocorrelation we will run the Moran’s I test but first we need to compute our neighbor and weight\n\nnb &lt;- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test revealed significant residual spatial autocorrelation in the data. With a p-value of less than 0.00000000000000022, we rejected the null hypothesis of random residual distribution. The observed Global Moran’s I value of 0.1424418, being positive, indicates a clustering pattern in the residuals. This suggests that the errors are not randomly distributed but rather exhibit spatial dependencies."
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html#building-fixed-bandwidth-gwr-model",
    "href": "hands-on_ex/ex08/ho_ex08.html#building-fixed-bandwidth-gwr-model",
    "title": "Hands-on Exercise 8",
    "section": "5.1 Building Fixed Bandwidth GWR Model",
    "text": "5.1 Building Fixed Bandwidth GWR Model\nComputing fixed bandwidth for the model\n\nbw.fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.379526e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3396 CV score: 4.721292e+14 \nFixed bandwidth: 971.3402 CV score: 4.721292e+14 \nFixed bandwidth: 971.3398 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3399 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \n\n\n\n\n\n\n\n\nNote\n\n\n\nThe result shows that the recommended bandwidth is 971.3405 meters because it seen in +units=m\n\n\nNext we can use the calibrate the model using our fixed bandwidth\n\ngwr.fixed &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-13 17:05:53.296393 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.34 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3599e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7426e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5001e+06 -1.5970e+05  3.1970e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8074e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112794435\n   AREA_SQM                 21575\n   AGE                     434203\n   PROX_CBD               2704604\n   PROX_CHILDCARE         1654086\n   PROX_ELDERLYCARE      38867861\n   PROX_URA_GROWTH_AREA  78515805\n   PROX_MRT               3124325\n   PROX_PARK             18122439\n   PROX_PRIMARY_SCH       4637517\n   PROX_SHOPPING_MALL     1529953\n   PROX_BUS_STOP         11342209\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720745\n   FREEHOLD               6073642\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3807 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6193 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.534069e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430418 \n\n   ***********************************************************************\n   Program stops at: 2024-10-13 17:05:54.204911"
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html#building-adaptive-bandwidth-gwr-model",
    "href": "hands-on_ex/ex08/ho_ex08.html#building-adaptive-bandwidth-gwr-model",
    "title": "Hands-on Exercise 8",
    "section": "5.2 Building Adaptive Bandwidth GWR Model",
    "text": "5.2 Building Adaptive Bandwidth GWR Model\nThis time we will be computing adaptive bandwidth for our GW model\n\nbw.adaptive &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nResults from above shows 30 is the recommended data points to use, using the adaptive bandwidth we constructing GWR model\n\ngwr.adaptive &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, \n                          bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-13 17:06:01.19488 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2024-10-13 17:06:02.218267 \n\n\nThe report shows that the AICc the adaptive distance gwr is 41982.22 which is even smaller than the AICc of the fixed distance gwr of 42263.61."
  },
  {
    "objectID": "hands-on_ex/ex08/ho_ex08.html#visualising-the-gwr-output",
    "href": "hands-on_ex/ex08/ho_ex08.html#visualising-the-gwr-output",
    "title": "Hands-on Exercise 8",
    "section": "5.3 Visualising the GWR Output",
    "text": "5.3 Visualising the GWR Output\nTerminology of output features: - Condition Number: Evaluates local collinearity; high values (over 30) indicate unreliable results. - Local R2: Measures local model fit; low values suggest poor performance. - Predicted: Estimated y values computed by GWR. - Residuals: Differences between observed and fitted y values; standardized residuals have mean 0 and standard deviation 1. - Coefficient Standard Error: Measures reliability of coefficient estimates; small values indicate high confidence, large values may indicate local collinearity issues.\n\n5.3.1 Convert into sf dataframe\n\ncondo_resale.sf.adaptive &lt;- st_as_sf(gwr.adaptive$SDF) %&gt;%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 &lt;- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.95        0   -0.72065801   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output &lt;- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive &lt;- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       &lt;dbl&gt; 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 &lt;dbl&gt; -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               &lt;dbl&gt; 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              &lt;dbl&gt; 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   &lt;dbl&gt; -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              &lt;dbl&gt; -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        &lt;dbl&gt; 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      &lt;dbl&gt; -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  &lt;dbl&gt; -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              &lt;dbl&gt; -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             &lt;dbl&gt; -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      &lt;dbl&gt; 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    &lt;dbl&gt; 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         &lt;dbl&gt; 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           &lt;dbl&gt; 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       &lt;dbl&gt; -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              &lt;dbl&gt; 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    &lt;dbl&gt; 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                &lt;dbl&gt; 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           &lt;dbl&gt; 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            &lt;dbl&gt; 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             &lt;dbl&gt; 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  &lt;dbl&gt; 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             &lt;dbl&gt; 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       &lt;dbl&gt; 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     &lt;dbl&gt; 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE &lt;dbl&gt; 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             &lt;dbl&gt; 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            &lt;dbl&gt; 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     &lt;dbl&gt; 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   &lt;dbl&gt; 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        &lt;dbl&gt; 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          &lt;dbl&gt; 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      &lt;dbl&gt; 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             &lt;dbl&gt; 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            &lt;dbl&gt; 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             &lt;dbl&gt; 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  &lt;dbl&gt; -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             &lt;dbl&gt; -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       &lt;dbl&gt; 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     &lt;dbl&gt; -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV &lt;dbl&gt; -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             &lt;dbl&gt; -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            &lt;dbl&gt; -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     &lt;dbl&gt; 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   &lt;dbl&gt; 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        &lt;dbl&gt; 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          &lt;dbl&gt; 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      &lt;dbl&gt; -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             &lt;dbl&gt; 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                &lt;dbl&gt; 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               &lt;dbl&gt; 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               &lt;dbl&gt; 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nsummary(gwr.adaptive$SDF$yhat)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901 \n\n\n\n\n5.3.2 Visualising local R2\nWe can create an interactive point symbol map for local R2\n\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\ntmap_mode(\"plot\")\n\nVisualize by the coefficient estimates\n\ntmap_mode(\"view\")\nAREA_SQM_SE &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\ntmap_mode(\"plot\")\n\nFiltering it to just the North Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"NORTH REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html",
    "href": "hands-on_ex/ex06/ho_ex06.html",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "This hands-on exercise introduces you to the spdep package for spatial autocorrelation analysis. You’ll learn how to import geospatial data using sf, CSV data using readr, and perform relational joins using dplyr. You’ll then explore the computation of Global Spatial Autocorrelation (GSA) statistics, including Moran’s I, using spdep. The exercise concludes with plotting Moran scatterplots and correlograms to visualize spatial autocorrelation patterns and interpret the statistical results."
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#loading-packages",
    "href": "hands-on_ex/ex06/ho_ex06.html#loading-packages",
    "title": "Hands-on Exercise 6",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nThis week we will be using the spdep package to compute spatial weights, global and local spatial autocorrelation statistic.\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#importing-data",
    "href": "hands-on_ex/ex06/ho_ex06.html#importing-data",
    "title": "Hands-on Exercise 6",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/hands-on_ex/ex06/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#data-wrangling",
    "href": "hands-on_ex/ex06/ho_ex06.html#data-wrangling",
    "title": "Hands-on Exercise 6",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\n\nhunan_join &lt;- left_join(hunan, hunan2012) %&gt;%\n  dplyr::select(1:4, 7, 15)"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#visualize",
    "href": "hands-on_ex/ex06/ho_ex06.html#visualize",
    "title": "Hands-on Exercise 6",
    "section": "2.4 Visualize",
    "text": "2.4 Visualize\nHere is what a glimpse of the GDPPC 2012 looks like on the Cholorpeth\n\nequal &lt;- tm_shape(hunan_join) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan_join) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#computing-contiguity-spatial-weights",
    "href": "hands-on_ex/ex06/ho_ex06.html#computing-contiguity-spatial-weights",
    "title": "Hands-on Exercise 6",
    "section": "3.1 Computing Contiguity Spatial Weights",
    "text": "3.1 Computing Contiguity Spatial Weights\nIn the following code, we utilize the poly2nb()function from the spdep package to create a contiguity weights matrix. This matrix defines neighboring relationships based on regions that share common boundaries. By default, poly2nb() uses the “Queen” criterion, which considers both shared edges and vertices as neighbors. However, you can specify queen = FALSE to use the “Rook” criterion, which only considers shared edges.\n\nwm_q &lt;- poly2nb(hunan_join, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#computing-row-standardised-weights-matrix",
    "href": "hands-on_ex/ex06/ho_ex06.html#computing-row-standardised-weights-matrix",
    "title": "Hands-on Exercise 6",
    "section": "3.2 Computing Row-standardised weights matrix",
    "text": "3.2 Computing Row-standardised weights matrix\nWe will assign equal weights to each neighboring polygon using style = \"W\", meaning each neighbor gets a weight of 1/(# of neighbors), and the weighted income values are summed. This method is straightforward but may skew results for polygons at the edges of the study area, as they have fewer neighbors. For simplicity, we’ll use style = \"W\", though more robust options, like style = \"B\", are available.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\n\n\n\nNote\n\n\n\nTake note\n\nThe style parameter can take the values “W”, “B”, “C”, “U”, “minmax”, and “S”. “B” is basic binary coding, “W” is row-standardized (sums over all links to n), “C” is globally standardized (sums over all links), “U” is equal to “C” divided by the number of neighbors, and “S” is a variance-stabilizing scheme proposed by Tiefelsdorf et al. (1999).\nIf zero policy is TRUE, regions with no neighbors will get a zero-length weights vector, resulting in a lagged value of zero. This may or may not be appropriate depending on the analysis."
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#marons-i-spatial-autocorrelation",
    "href": "hands-on_ex/ex06/ho_ex06.html#marons-i-spatial-autocorrelation",
    "title": "Hands-on Exercise 6",
    "section": "3.3 Maron’s I Spatial Autocorrelation",
    "text": "3.3 Maron’s I Spatial Autocorrelation\nRange: -1 to 1 Interpretation: - Positive values indicate positive spatial autocorrelation (clustering). - Negative values indicate negative spatial autocorrelation (dispersion). - Values close to 0 indicate no spatial autocorrelation. Sensitivity: More sensitive to linear relationships between neighboring values.\n\n3.3.1 Maron’s I Test\n\nmoran.test(hunan_join$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan_join$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nA positive Moran’s I value suggests that areas with similar GDPPC values tend to cluster together. A very small p-value indicates that this clustering is unlikely to be due to chance. Hence int thise case there is positive spatial autocorrelation in GDPPC across the Province.\n\n\n3.3.2 Maron’s I Monte Carlo\nNext we perform permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan_join$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan_join$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nThis result supports our previous observation above.\n\n\n3.3.3 Visualization\nBy plotting the distribution of the statistical values as a histogram we can examine the simulated Moran’s I test statistics in greater detail.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")\n\n\n\n\n\n\n\n\nAlt: ggplot2 to plot our histogram\n\nlibrary(ggplot2)\n\n# Assuming bperm$res contains the simulated Moran's I values\nsimulated_values &lt;- bperm$res\n\n# Create a data frame for ggplot2\ndf &lt;- data.frame(simulated_values)\n\n# Plot the histogram using ggplot2\nggplot(df, aes(x = simulated_values)) +\n  geom_histogram(binwidth = 0.02, fill = \"grey\", color = \"black\", alpha = 0.8) +\n  geom_vline(xintercept = 0, color = \"red\") +\n  labs(title = \"Simulated Moran's I\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nAs the observed Moran’s I value of 0.30075 is higher than the majority of the simulated values it suggests spatial correlation."
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#gearys-c-spatial-autocorrelation",
    "href": "hands-on_ex/ex06/ho_ex06.html#gearys-c-spatial-autocorrelation",
    "title": "Hands-on Exercise 6",
    "section": "3.4 Geary’s C Spatial Autocorrelation",
    "text": "3.4 Geary’s C Spatial Autocorrelation\nRange: 0 to infinity Interpretation: - Values close to 0 indicate positive spatial autocorrelation (clustering). - Values close to 1 indicate no spatial autocorrelation. - Values greater than 1 indicate negative spatial autocorrelation (dispersion). Sensitivity: Less sensitive to linear relationships and can detect more complex spatial patterns.\n\n3.4.1 Geary’s C Test\n\ngeary.test(hunan_join$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan_join$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\nA value of &lt;1 suggests that similar values are clustered together\n\n\n3.4.2 Geary’s C Monte Carlo\nNext we perform permutation test for Geary’s C statistic by using geary.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm=geary.mc(hunan_join$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan_join$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\nThe findings confirm the initial hypothesis, indicating that areas with similar economic development tend to be clustered together geographically.\n\n\n3.4.3 Visualization\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")\n\nabline(v=bperm$statistic, col=\"blue\", lwd=2)\n\n\n\n\n\n\n\n\nFrom the historgram we can assume clustering within our data."
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#spatial-correlogram",
    "href": "hands-on_ex/ex06/ho_ex06.html#spatial-correlogram",
    "title": "Hands-on Exercise 6",
    "section": "3.5 Spatial Correlogram",
    "text": "3.5 Spatial Correlogram\nCorrelograms are useful for visualizing and understanding spatial autocorrelation patterns. They plot the relationship between distance and autocorrelation index. While less foundational than variograms, correlograms offer richer exploratory insights.\n\n3.5.1 Moran’s I correlogram\nUsing sp.correlogram() of spdep to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan_join$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan_join$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThe plot suggests a strong positive spatial correlation between nearby areas, indicating that regions with similar GDP per capita values tend to be clustered. However, at greater distances, a negative correlation emerges, suggesting that areas farther apart are more likely to have differing economic development levels.\n\n\n3.5.2 Geary’s C correlogram\nSimilarly, using sp.correlogram() we compute the 6-lag spatial correlogram of GDPPC, with method C instead.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan_join$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan_join$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#morans-i-spatial-autocorrelation",
    "href": "hands-on_ex/ex06/ho_ex06.html#morans-i-spatial-autocorrelation",
    "title": "Hands-on Exercise 6",
    "section": "4.1 Moran’s I Spatial Autocorrelation",
    "text": "4.1 Moran’s I Spatial Autocorrelation\n\n4.1.1 Moran’s I Test\nUsing localmoran() function of spdep, we computes Ii values, given a set of zi values and a listw object providing neighbour weighting information for the polygon associated with the zi values.\n\nfips &lt;- order(hunan_join$County)\nlocalMI &lt;- localmoran(hunan_join$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n\n4.1.2 Visualization\n\nhunan.localMI &lt;- cbind(hunan_join,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n4.1.2.1 Moran’s I Values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.1.2.2 Moran’s I p-values\nThe choropleth shows there is evidence for both positive and negative Ii values. However, it is useful to consider the p-values for each of these values, as consider above.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.1.2.3 Comparing Both\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#lisa-cluster-map",
    "href": "hands-on_ex/ex06/ho_ex06.html#lisa-cluster-map",
    "title": "Hands-on Exercise 6",
    "section": "4.2 LISA Cluster Map",
    "text": "4.2 LISA Cluster Map\nThe LISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\n\n4.2.1 Moran Scatterplot\nUsing the moran.plot(), the Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\n\nnci &lt;- moran.plot(hunan_join$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n\n\n\n\n\n4.2.2 Moran scatterplot with standardised variable\nUsing the scale() to center and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations. Subsequently using as.vector() added to the end is to make sure that the data type we get out of this is a vector, that map neatly into out dataframe.\n\nhunan$Z.GDPPC &lt;- scale(hunan_join$GDPPC) %&gt;% \n  as.vector \n\n\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n\n\n\n\n4.2.3 Preparing LISA Map Classes\nWe start by deriving the spatially lagged variable of interest (i.e. GDPPC) and centers the spatially lagged variable around its mean.\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan_join$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\nWe get the local Moran’s around the mean\n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\n\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\nWe set the stat significance level to for the local Moran\n\nsignif &lt;- 0.05    \nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n\n4.2.4 Plotting LISA map\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\n\n\nTo better intepret, plot both the local Moran’s I values map and its corresponding p-values map next to each other.\n\ngdppc &lt;- qtm(hunan_join, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\nprint(LISAmap)\n\n\n\n\n\n\n\ntmap_arrange(gdppc, LISAmap, localMI.map, pvalue.map,\n             asp=1, ncol=2, nrow = 2)\n\n\n\n\n\n\n\n\nThe LISA map reveals distinct patterns of economic inequality in Hunan Province. Clusters of high GDP per capita are concentrated in the east, while areas with low GDP per capita tend to cluster in the west. This visualization underscores the uneven distribution of economic development across the province."
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#hot-spot-and-cold-spot-area-analysis",
    "href": "hands-on_ex/ex06/ho_ex06.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-on Exercise 6",
    "section": "4.3 Hot Spot and Cold Spot Area Analysis",
    "text": "4.3 Hot Spot and Cold Spot Area Analysis\nBeside detecting cluster and outliers, localised spatial statistics can be also used to detect hot spot and/or cold spot areas.\n\n4.3.1 Getis and Ord’s G-Statistics\nAn alternative spatial statistics to detect spatial anomalies is the Getis and Ord’s G-statistics (Getis and Ord, 1972; Ord and Getis, 1995). It looks at neighbours within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too. The analysis consists of 3 steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics\n\n\n4.3.1.1 Deriving the centroid\nFirstly we need to define our set of neigbours, for Getis-Ord we are defining neighbours based on distance. To create our connectivity graph, we need to associate points with each polygon. This is more complex than just using st_centroid() on the us.bound sf object. We need to extract the coordinates into a separate data frame. To do this, we’ll use a mapping function that applies st_centroid() to each element in the geometry column of us.bound.\nWe get the long and lat from the geometry column\n\nlongitude &lt;- map_dbl(hunan_join$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan_join$geometry, ~st_centroid(.x)[[2]])\n\nThen we bind them together as coords\n\ncoords &lt;- cbind(longitude, latitude)\n\n\n\n4.3.1.2 Determine the cut-off distance\nNext we determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nWe can tell the largest first nearest neighbour distance is 61.79 km, all units will have at least 1 neighbour.\n\n\n4.3.1.3 Computing fixed distance weight matrix\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nThen using nb2listw() we convert the nb object into spatial weights object.\n\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n4.3.1.4 Computing adaptive distance weight matrix\nFixed distance weight matrices assign weights based on the distance between geographic units. Densely populated areas tend to have more neighbors, while rural areas may have fewer. This can influence the smoothing effect of the spatial weights. You can directly control the number of neighbors using k-nearest neighbors, allowing for asymmetric neighbors or enforcing symmetry.\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#computing-gi-statistics",
    "href": "hands-on_ex/ex06/ho_ex06.html#computing-gi-statistics",
    "title": "Hands-on Exercise 6",
    "section": "4.4 Computing Gi Statistics",
    "text": "4.4 Computing Gi Statistics\n\n4.4.1 Gi statistics using fixed distance\n\nfips &lt;- order(hunan_join$County)\ngi.fixed &lt;- localG(hunan_join$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan_join$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe output of localG() is a vector of G or Gstar values, with attributes “gstari” set to TRUE or FALSE, “call” set to the function call, and class “localG”. The Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNow we will join the Gi values to their corresponding hunan sf data frame, it will perform the followin; First, it convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename().\n\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\n4.4.1.1 Visualization\n\ngdppc &lt;- qtm(hunan_join, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\nThe dark red areas on the map highlight clusters of high GDPPC, while the blue areas indicate clusters of low GDPPC. These findings supports our previous observation of uneven economic development across the Province.\n\n\n\n4.4.2 Adaptive Distance\n\nfips &lt;- order(hunan_join$County)\ngi.adaptive &lt;- localG(hunan_join$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n4.4.2.1 Visualization\n\ngdppc&lt;- qtm(hunan_join, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n\n\nSimilar finding as above with a even darker blue areas which indicates strong negative spatial autocorrelation."
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html",
    "href": "hands-on_ex/ex07/ho_ex07.html",
    "title": "Hands-on Exercise 7",
    "section": "",
    "text": "This hands-on exercise we are aiming to identify distinct areas within Shan State, Myanmar based on their similarities in Information and Communication Technology (ICT) usage. We will utilize data on various ICT measures, including radio, television, landline phones, mobile phones, computers, and home internet, to delineate these homogeneous regions. This analysis will help us understand the spatial distribution of ICT infrastructure and usage patterns across the state."
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#loading-packages",
    "href": "hands-on_ex/ex07/ho_ex07.html#loading-packages",
    "title": "Hands-on Exercise 7",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\n\nSpatial data handling: sf, rgdal and spdep\nMultivariate data analysis: coorplot, ggpubr, and heatmaply\nCluster analysis: cluster, ClustGeo\n\n\npacman::p_load(spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#importing-data",
    "href": "hands-on_ex/ex07/ho_ex07.html#importing-data",
    "title": "Hands-on Exercise 7",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\n\n# Import shan boundary map\nshan_sf &lt;- st_read(dsn = \"data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\nReading layer `myanmar_township_boundaries' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/IS415-GAA/hands-on_ex/ex07/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\nhead(shan_sf)\n\nSimple feature collection with 6 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 96.15107 ymin: 19.74308 xmax: 97.3376 ymax: 24.15907\nGeodetic CRS:  WGS 84\n            ST ST_PCODE       DT   DT_PCODE       TS  TS_PCODE\n1 Shan (North)   MMR015  Mongmit MMR015D008  Mongmit MMR015017\n2 Shan (South)   MMR014 Taunggyi MMR014D001  Pindaya MMR014006\n3 Shan (South)   MMR014 Taunggyi MMR014D001  Ywangan MMR014007\n4 Shan (South)   MMR014 Taunggyi MMR014D001 Pinlaung MMR014009\n5 Shan (North)   MMR015  Mongmit MMR015D008   Mabein MMR015018\n6 Shan (South)   MMR014 Taunggyi MMR014D001    Kalaw MMR014005\n                        geometry\n1 MULTIPOLYGON (((96.96001 23...\n2 MULTIPOLYGON (((96.7731 21....\n3 MULTIPOLYGON (((96.78483 21...\n4 MULTIPOLYGON (((96.49518 20...\n5 MULTIPOLYGON (((96.66306 24...\n6 MULTIPOLYGON (((96.49518 20...\n\n\n\n# Import 2014 Myanmar Population and Housing Census Myanmar.  \nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\nsummary(ict)\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#data-wrangling",
    "href": "hands-on_ex/ex07/ho_ex07.html#data-wrangling",
    "title": "Hands-on Exercise 7",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\nWe will be re-scaling the unit of measurement as they are per household and some townships may have higher total number of household, which may introduces bias.\n\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\n\nsummary(ict_derived)\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#staistical-graphs",
    "href": "hands-on_ex/ex07/ho_ex07.html#staistical-graphs",
    "title": "Hands-on Exercise 7",
    "section": "3.1 Staistical Graphs",
    "text": "3.1 Staistical Graphs\n\n3.1.1 Histogram\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\n\n\n\n\n\n3.1.2 Boxplot\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\n\n\n\n\n3.1.3 Overview of Normalized Data\n\nradio &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet &lt;- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#chloropleth-maps",
    "href": "hands-on_ex/ex07/ho_ex07.html#chloropleth-maps",
    "title": "Hands-on Exercise 7",
    "section": "3.2 Chloropleth Maps",
    "text": "3.2 Chloropleth Maps\nNext we join the shan_sf with the ict data, save in rds\n\nshan_sf &lt;- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n  \nwrite_rds(shan_sf, \"data/rds/shan_sf.rds\")\n\n\nshan_sf &lt;- read_rds(\"data/rds/shan_sf.rds\")\n\nNotice the difference in the normalized (PR) vs original data: It seems more normally distributed with less variance\n\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 3) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#correlation-analysis",
    "href": "hands-on_ex/ex07/ho_ex07.html#correlation-analysis",
    "title": "Hands-on Exercise 7",
    "section": "3.3 Correlation Analysis",
    "text": "3.3 Correlation Analysis\nThe correlation plot shows that COMPUTER_PR and INTERNET_PR are highly correlated. This suggest that only one of them should be used in the cluster analysis instead of both.\n\ncluster_vars.cor = cor(ict_derived[,12:17])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#extracting-clustering-variables",
    "href": "hands-on_ex/ex07/ho_ex07.html#extracting-clustering-variables",
    "title": "Hands-on Exercise 7",
    "section": "4.1 Extracting clustering variables",
    "text": "4.1 Extracting clustering variables\nWe will be filtering for just variables that are not highly correlated\n\ncluster_vars &lt;- shan_sf %&gt;%\n  st_set_geometry(NULL) %&gt;%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\nhead(cluster_vars,10)\n\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\n2    Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\n3    Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\n4   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\n5     Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\n6      Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\n7      Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\n8   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\n9  Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\n10   Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\nUse township name as row index instead of number\n\nrow.names(cluster_vars) &lt;- cluster_vars$\"TS.x\"\nshan_ict &lt;- select(cluster_vars, c(2:6))\nhead(shan_ict,10)\n\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya   417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan   484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung  231.6499 541.7189   28.54454  249.4903    13.76255\nMabein    449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw     280.7624 611.6204   42.06478  408.7951    29.63160\nPekon     318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk  387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme   210.9548 601.1773   39.58267  372.4930    30.94709"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#data-standardisation",
    "href": "hands-on_ex/ex07/ho_ex07.html#data-standardisation",
    "title": "Hands-on Exercise 7",
    "section": "4.2 Data Standardisation",
    "text": "4.2 Data Standardisation\n\n4.2.1 Min Max\nIt is a data standardization technique that rescales features to a specific range, typically between 0 and 1. It involves subtracting the minimum value from each data point and then dividing by the range (maximum minus minimum). This method is useful when preserving the relative relationships between values is important, such as in algorithms that rely on distance calculations. However, it can be sensitive to outliers, as they can significantly impact the range of the data.\n\nshan_ict.std &lt;- normalize(shan_ict)\nsummary(shan_ict.std)\n\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000  \n\n\n\n\n4.2.2 Z-score\nIt is another data standardization technique that transforms features to have a mean of 0 and a standard deviation of 1. It involves subtracting the mean from each data point and then dividing by the standard deviation. This method is useful when dealing with algorithms that assume normally distributed data, as it helps to ensure that the data is centered around 0 and has a consistent scale. Z-score standardization is less sensitive to outliers than min-max scaling, as outliers are scaled based on their distance from the mean.\n\nshan_ict.z &lt;- scale(shan_ict)\ndescribe(shan_ict.z)\n\n            vars  n mean sd median trimmed  mad   min  max range  skew kurtosis\nRADIO_PR       1 55    0  1  -0.04   -0.06 0.94 -1.85 2.55  4.40  0.48    -0.27\nTV_PR          2 55    0  1   0.05    0.04 0.78 -2.47 2.09  4.56 -0.38    -0.23\nLLPHONE_PR     3 55    0  1  -0.33   -0.15 0.68 -1.19 3.20  4.39  1.37     1.49\nMPHONE_PR      4 55    0  1  -0.05   -0.06 1.01 -1.58 2.40  3.98  0.48    -0.34\nCOMPUTER_PR    5 55    0  1  -0.26   -0.18 0.64 -1.03 3.31  4.34  1.80     2.96\n              se\nRADIO_PR    0.13\nTV_PR       0.13\nLLPHONE_PR  0.13\nMPHONE_PR   0.13\nCOMPUTER_PR 0.13"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#visualisaing-standardised-clustering-variables",
    "href": "hands-on_ex/ex07/ho_ex07.html#visualisaing-standardised-clustering-variables",
    "title": "Hands-on Exercise 7",
    "section": "4.3 Visualisaing Standardised Clustering Variables",
    "text": "4.3 Visualisaing Standardised Clustering Variables\nWith standardization the data are confined within a range while preseving the relative relationships between values\n\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\n\n\n\n\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#computing-proximity-matrix",
    "href": "hands-on_ex/ex07/ho_ex07.html#computing-proximity-matrix",
    "title": "Hands-on Exercise 7",
    "section": "4.4 Computing Proximity Matrix",
    "text": "4.4 Computing Proximity Matrix\nusing dist we can plotcompute the distance matrix. 6 calculations are supported: euclidean, maximum, manhattan, canberra, binary and minkowski. The default is euclidean proximity matrix.\n\nproxmat &lt;- dist(shan_ict, method = 'euclidean')\nproxmat\n\n             Mongmit   Pindaya   Ywangan  Pinlaung    Mabein     Kalaw\nPindaya    171.86828                                                  \nYwangan    381.88259 257.31610                                        \nPinlaung    57.46286 208.63519 400.05492                              \nMabein     263.37099 313.45776 529.14689 312.66966                    \nKalaw      160.05997 302.51785 499.53297 181.96406 198.14085          \nPekon       59.61977 117.91580 336.50410  94.61225 282.26877 211.91531\nLawksawk   140.11550 204.32952 432.16535 192.57320 130.36525 140.01101\nNawnghkio   89.07103 180.64047 377.87702 139.27495 204.63154 127.74787\nKyaukme    144.02475 311.01487 505.89191 139.67966 264.88283  79.42225\nMuse       563.01629 704.11252 899.44137 571.58335 453.27410 412.46033\nLaihka     141.87227 298.61288 491.83321 101.10150 345.00222 197.34633\nMongnai    115.86190 258.49346 422.71934  64.52387 358.86053 200.34668\nMawkmai    434.92968 437.99577 397.03752 398.11227 693.24602 562.59200\nKutkai      97.61092 212.81775 360.11861  78.07733 340.55064 204.93018\nMongton    192.67961 283.35574 361.23257 163.42143 425.16902 267.87522\nMongyai    256.72744 287.41816 333.12853 220.56339 516.40426 386.74701\nMongkaing  503.61965 481.71125 364.98429 476.29056 747.17454 625.24500\nLashio     251.29457 398.98167 602.17475 262.51735 231.28227 106.69059\nMongpan    193.32063 335.72896 483.68125 192.78316 301.52942 114.69105\nMatman     401.25041 354.39039 255.22031 382.40610 637.53975 537.63884\nTachileik  529.63213 635.51774 807.44220 555.01039 365.32538 373.64459\nNarphan    406.15714 474.50209 452.95769 371.26895 630.34312 463.53759\nMongkhet   349.45980 391.74783 408.97731 305.86058 610.30557 465.52013\nHsipaw     118.18050 245.98884 388.63147  76.55260 366.42787 212.36711\nMonghsat   214.20854 314.71506 432.98028 160.44703 470.48135 317.96188\nMongmao    242.54541 402.21719 542.85957 217.58854 384.91867 195.18913\nNansang    104.91839 275.44246 472.77637  85.49572 287.92364 124.30500\nLaukkaing  568.27732 726.85355 908.82520 563.81750 520.67373 427.77791\nPangsang   272.67383 428.24958 556.82263 244.47146 418.54016 224.03998\nNamtu      179.62251 225.40822 444.66868 170.04533 366.16094 307.27427\nMonghpyak  177.76325 221.30579 367.44835 222.20020 212.69450 167.08436\nKonkyan    403.39082 500.86933 528.12533 365.44693 613.51206 444.75859\nMongping   265.12574 310.64850 337.94020 229.75261 518.16310 375.64739\nHopong     136.93111 223.06050 352.85844  98.14855 398.00917 264.16294\nNyaungshwe  99.38590 216.52463 407.11649 138.12050 210.21337  95.66782\nHsihseng   131.49728 172.00796 342.91035 111.61846 381.20187 287.11074\nMongla     384.30076 549.42389 728.16301 372.59678 406.09124 260.26411\nHseni      189.37188 337.98982 534.44679 204.47572 213.61240  38.52842\nKunlong    224.12169 355.47066 531.63089 194.76257 396.61508 273.01375\nHopang     281.05362 443.26362 596.19312 265.96924 368.55167 185.14704\nNamhkan    386.02794 543.81859 714.43173 382.78835 379.56035 246.39577\nKengtung   246.45691 385.68322 573.23173 263.48638 219.47071  88.29335\nLangkho    164.26299 323.28133 507.78892 168.44228 253.84371  67.19580\nMonghsu    109.15790 198.35391 340.42789  80.86834 367.19820 237.34578\nTaunggyi   399.84278 503.75471 697.98323 429.54386 226.24011 252.26066\nPangwaun   381.51246 512.13162 580.13146 356.37963 523.44632 338.35194\nKyethi     202.92551 175.54012 287.29358 189.47065 442.07679 360.17247\nLoilen     145.48666 293.61143 469.51621  91.56527 375.06406 217.19877\nManton     430.64070 402.42888 306.16379 405.83081 674.01120 560.16577\nMongyang   309.51302 475.93982 630.71590 286.03834 411.88352 233.56349\nKunhing    173.50424 318.23811 449.67218 141.58836 375.82140 197.63683\nMongyawng  214.21738 332.92193 570.56521 235.55497 193.49994 173.43078\nTangyan    195.92520 208.43740 324.77002 169.50567 448.59948 348.06617\nNamhsan    237.78494 228.41073 286.16305 214.33352 488.33873 385.88676\n               Pekon  Lawksawk Nawnghkio   Kyaukme      Muse    Laihka\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk   157.51129                                                  \nNawnghkio  113.15370  90.82891                                        \nKyaukme    202.12206 186.29066 157.04230                              \nMuse       614.56144 510.13288 533.68806 434.75768                    \nLaihka     182.23667 246.74469 211.88187 128.24979 526.65211          \nMongnai    151.60031 241.71260 182.21245 142.45669 571.97975 100.53457\nMawkmai    416.00669 567.52693 495.15047 512.02846 926.93007 429.96554\nKutkai     114.98048 224.64646 147.44053 170.93318 592.90743 144.67198\nMongton    208.14888 311.07742 225.81118 229.28509 634.71074 212.07320\nMongyai    242.52301 391.26989 319.57938 339.27780 763.91399 264.13364\nMongkaing  480.23965 625.18712 546.69447 586.05094 995.66496 522.96309\nLashio     303.80011 220.75270 230.55346 129.95255 313.15288 238.64533\nMongpan    243.30037 228.54223 172.84425 110.37831 447.49969 210.76951\nMatman     368.25761 515.39711 444.05061 505.52285 929.11283 443.25453\nTachileik  573.39528 441.82621 470.45533 429.15493 221.19950 549.08985\nNarphan    416.84901 523.69580 435.59661 420.30003 770.40234 392.32592\nMongkhet   342.08722 487.41102 414.10280 409.03553 816.44931 324.97428\nHsipaw     145.37542 249.35081 176.09570 163.95741 591.03355 128.42987\nMonghsat   225.64279 352.31496 289.83220 253.25370 663.76026 158.93517\nMongmao    293.70625 314.64777 257.76465 146.09228 451.82530 185.99082\nNansang    160.37607 188.78869 151.13185  60.32773 489.35308  78.78999\nLaukkaing  624.82399 548.83928 552.65554 428.74978 149.26996 507.39700\nPangsang   321.81214 345.91486 287.10769 175.35273 460.24292 214.19291\nNamtu      165.02707 260.95300 257.52713 270.87277 659.16927 185.86794\nMonghpyak  190.93173 142.31691  93.03711 217.64419 539.43485 293.22640\nKonkyan    421.48797 520.31264 439.34272 393.79911 704.86973 351.75354\nMongping   259.68288 396.47081 316.14719 330.28984 744.44948 272.82761\nHopong     138.86577 274.91604 204.88286 218.84211 648.68011 157.48857\nNyaungshwe 139.31874 104.17830  43.26545 126.50414 505.88581 201.71653\nHsihseng   105.30573 257.11202 209.88026 250.27059 677.66886 175.89761\nMongla     441.20998 393.18472 381.40808 241.58966 256.80556 315.93218\nHseni      243.98001 171.50398 164.05304  81.20593 381.30567 204.49010\nKunlong    249.36301 318.30406 285.04608 215.63037 547.24297 122.68682\nHopang     336.38582 321.16462 279.84188 154.91633 377.44407 230.78652\nNamhkan    442.77120 379.41126 367.33575 247.81990 238.67060 342.43665\nKengtung   297.67761 209.38215 208.29647 136.23356 330.08211 258.23950\nLangkho    219.21623 190.30257 156.51662  51.67279 413.64173 160.94435\nMonghsu    113.84636 242.04063 170.09168 200.77712 633.21624 163.28926\nTaunggyi   440.66133 304.96838 344.79200 312.60547 250.81471 425.36916\nPangwaun   423.81347 453.02765 381.67478 308.31407 541.97887 351.78203\nKyethi     162.43575 317.74604 267.21607 328.14177 757.16745 255.83275\nLoilen     181.94596 265.29318 219.26405 146.92675 560.43400  59.69478\nManton     403.82131 551.13000 475.77296 522.86003 941.49778 458.30232\nMongyang   363.58788 363.37684 323.32123 188.59489 389.59919 229.71502\nKunhing    213.46379 278.68953 206.15773 145.00266 533.00162 142.03682\nMongyawng  248.43910 179.07229 220.61209 181.55295 422.37358 211.99976\nTangyan    167.79937 323.14701 269.07880 306.78359 736.93741 224.29176\nNamhsan    207.16559 362.84062 299.74967 347.85944 778.52971 273.79672\n             Mongnai   Mawkmai    Kutkai   Mongton   Mongyai Mongkaing\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai    374.50873                                                  \nKutkai      91.15307 364.95519                                        \nMongton    131.67061 313.35220 107.06341                              \nMongyai    203.23607 178.70499 188.94166 159.79790                    \nMongkaing  456.00842 133.29995 428.96133 365.50032 262.84016          \nLashio     270.86983 638.60773 289.82513 347.11584 466.36472 708.65819\nMongpan    178.09554 509.99632 185.18173 200.31803 346.39710 563.56780\nMatman     376.33870 147.83545 340.86349 303.04574 186.95158 135.51424\nTachileik  563.95232 919.38755 568.99109 608.76740 750.29555 967.14087\nNarphan    329.31700 273.75350 314.27683 215.97925 248.82845 285.65085\nMongkhet   275.76855 115.58388 273.91673 223.22828 104.98924 222.60577\nHsipaw      52.68195 351.34601  51.46282  90.69766 177.33790 423.77868\nMonghsat   125.25968 275.09705 154.32012 150.98053 127.35225 375.60376\nMongmao    188.29603 485.52853 204.69232 206.57001 335.61300 552.31959\nNansang     92.79567 462.41938 130.04549 199.58124 288.55962 542.16609\nLaukkaing  551.56800 882.51110 580.38112 604.66190 732.68347 954.11795\nPangsang   204.25746 484.14757 228.33583 210.77938 343.30638 548.40662\nNamtu      209.35473 427.95451 225.28268 308.71751 278.02761 525.04057\nMonghpyak  253.26470 536.71695 206.61627 258.04282 370.01575 568.21089\nKonkyan    328.82831 339.01411 310.60810 248.25265 287.87384 380.92091\nMongping   202.99615 194.31049 182.75266 119.86993  65.38727 257.18572\nHopong      91.53795 302.84362  73.45899 106.21031 124.62791 379.37916\nNyaungshwe 169.63695 502.99026 152.15482 219.72196 327.13541 557.32112\nHsihseng   142.36728 329.29477 128.21054 194.64317 162.27126 411.59788\nMongla     354.10985 686.88950 388.40984 411.06668 535.28615 761.48327\nHseni      216.81639 582.53670 229.37894 286.75945 408.23212 648.04408\nKunlong    202.92529 446.53763 204.54010 270.02165 299.36066 539.91284\nHopang     243.00945 561.24281 263.31986 273.50305 408.73288 626.17673\nNamhkan    370.05669 706.47792 392.48568 414.53594 550.62819 771.39688\nKengtung   272.28711 632.54638 279.19573 329.38387 460.39706 692.74693\nLangkho    174.67678 531.08019 180.51419 236.70878 358.95672 597.42714\nMonghsu     84.11238 332.07962  62.60859 107.04894 154.86049 400.71816\nTaunggyi   448.55282 810.74692 450.33382 508.40925 635.94105 866.21117\nPangwaun   312.13429 500.68857 321.80465 257.50434 394.07696 536.95736\nKyethi     210.50453 278.85535 184.23422 222.52947 137.79420 352.06533\nLoilen      58.41263 388.73386 131.56529 176.16001 224.79239 482.18190\nManton     391.54062 109.08779 361.82684 310.20581 195.59882  81.75337\nMongyang   260.39387 558.83162 285.33223 295.60023 414.31237 631.91325\nKunhing    110.55197 398.43973 108.84990 114.03609 238.99570 465.03971\nMongyawng  275.77546 620.04321 281.03383 375.22688 445.78964 700.98284\nTangyan    180.37471 262.66006 166.61820 198.88460 109.08506 348.56123\nNamhsan    218.10003 215.19289 191.32762 196.76188  77.35900 288.66231\n              Lashio   Mongpan    Matman Tachileik   Narphan  Mongkhet\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan    172.33279                                                  \nMatman     628.11049 494.81014                                        \nTachileik  311.95286 411.03849 890.12935                              \nNarphan    525.63854 371.13393 312.05193 760.29566                    \nMongkhet   534.44463 412.17123 203.02855 820.50164 217.28718          \nHsipaw     290.86435 179.52054 344.45451 576.18780 295.40170 253.80950\nMonghsat   377.86793 283.30992 313.59911 677.09508 278.21548 167.98445\nMongmao    214.23677 131.59966 501.59903 472.95568 331.42618 375.35820\nNansang    184.47950 144.77393 458.06573 486.77266 398.13308 360.99219\nLaukkaing  334.65738 435.58047 903.72094 325.06329 708.82887 769.06406\nPangsang   236.72516 140.23910 506.29940 481.31907 316.30314 375.58139\nNamtu      365.88437 352.91394 416.65397 659.56458 494.36143 355.99713\nMonghpyak  262.09281 187.85699 470.46845 444.04411 448.40651 462.63265\nKonkyan    485.51312 365.87588 392.40306 730.92980 158.82353 254.24424\nMongping   454.52548 318.47482 201.65224 727.08969 188.64567 113.80917\nHopong     345.31042 239.43845 291.84351 632.45718 294.40441 212.99485\nNyaungshwe 201.58191 137.29734 460.91883 445.81335 427.94086 417.08639\nHsihseng   369.00833 295.87811 304.02806 658.87060 377.52977 256.70338\nMongla     179.95877 253.20001 708.17595 347.33155 531.46949 574.40292\nHseni       79.41836 120.66550 564.64051 354.90063 474.12297 481.88406\nKunlong    295.23103 288.03320 468.27436 595.70536 413.07823 341.68641\nHopang     170.63913 135.62913 573.55355 403.82035 397.85908 451.51070\nNamhkan    173.27153 240.34131 715.42102 295.91660 536.85519 596.19944\nKengtung    59.85893 142.21554 613.01033 295.90429 505.40025 531.35998\nLangkho    115.18145  94.98486 518.86151 402.33622 420.65204 428.08061\nMonghsu    325.71557 216.25326 308.13805 605.02113 311.92379 247.73318\nTaunggyi   195.14541 319.81385 778.45810 150.84117 684.20905 712.80752\nPangwaun   362.45608 232.52209 523.43600 540.60474 264.64997 407.02947\nKyethi     447.10266 358.89620 233.83079 728.87329 374.90376 233.25039\nLoilen     268.92310 207.25000 406.56282 573.75476 354.79137 284.76895\nManton     646.66493 507.96808  59.52318 910.23039 280.26395 181.33894\nMongyang   209.33700 194.93467 585.61776 448.79027 401.39475 445.40621\nKunhing    255.10832 137.85278 403.66587 532.26397 281.62645 292.49814\nMongyawng  172.70139 275.15989 601.80824 432.10118 572.76394 522.91815\nTangyan    429.84475 340.39128 242.78233 719.84066 348.84991 201.49393\nNamhsan    472.04024 364.77086 180.09747 754.03913 316.54695 170.90848\n              Hsipaw  Monghsat   Mongmao   Nansang Laukkaing  Pangsang\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat   121.78922                                                  \nMongmao    185.99483 247.17708                                        \nNansang    120.24428 201.92690 164.99494                              \nLaukkaing  569.06099 626.44910 404.00848 480.60074                    \nPangsang   205.04337 256.37933  57.60801 193.36162 408.04016          \nNamtu      229.44658 231.78673 365.03882 217.61884 664.06286 392.97391\nMonghpyak  237.67919 356.84917 291.88846 227.52638 565.84279 315.11651\nKonkyan    296.74316 268.25060 281.87425 374.70456 635.92043 274.81900\nMongping   168.92101 140.95392 305.57166 287.36626 708.13447 308.33123\nHopong      62.86179 100.45714 244.16253 167.66291 628.48557 261.51075\nNyaungshwe 169.92664 286.37238 230.45003 131.18943 520.24345 257.77823\nHsihseng   136.54610 153.49551 311.98001 193.53779 670.74564 335.52974\nMongla     373.47509 429.00536 216.24705 289.45119 202.55831 217.88123\nHseni      231.48538 331.22632 184.67099 136.45492 391.74585 214.66375\nKunlong    205.10051 202.31862 224.43391 183.01388 521.88657 258.49342\nHopang     248.72536 317.64824  78.29342 196.47091 331.67199  92.57672\nNamhkan    382.79302 455.10875 223.32205 302.89487 196.46063 231.38484\nKengtung   284.08582 383.72138 207.58055 193.67980 351.48520 229.85484\nLangkho    183.05109 279.52329 134.50170  99.39859 410.41270 167.65920\nMonghsu     58.55724 137.24737 242.43599 153.59962 619.01766 260.52971\nTaunggyi   462.31183 562.88102 387.33906 365.04897 345.98041 405.59730\nPangwaun   298.12447 343.53898 187.40057 326.12960 470.63605 157.48757\nKyethi     195.17677 190.50609 377.89657 273.02385 749.99415 396.89963\nLoilen      98.04789 118.65144 190.26490  94.23028 535.57527 207.94433\nManton     359.60008 317.15603 503.79786 476.55544 907.38406 504.75214\nMongyang   267.10497 312.64797  91.06281 218.49285 326.19219 108.37735\nKunhing     90.77517 165.38834 103.91040 128.20940 500.41640 123.18870\nMongyawng  294.70967 364.40429 296.40789 191.11990 454.80044 336.16703\nTangyan    167.69794 144.59626 347.14183 249.70235 722.40954 364.76893\nNamhsan    194.47928 169.56962 371.71448 294.16284 760.45960 385.65526\n               Namtu Monghpyak   Konkyan  Mongping    Hopong Nyaungshwe\nPindaya                                                                \nYwangan                                                                \nPinlaung                                                               \nMabein                                                                 \nKalaw                                                                  \nPekon                                                                  \nLawksawk                                                               \nNawnghkio                                                              \nKyaukme                                                                \nMuse                                                                   \nLaihka                                                                 \nMongnai                                                                \nMawkmai                                                                \nKutkai                                                                 \nMongton                                                                \nMongyai                                                                \nMongkaing                                                              \nLashio                                                                 \nMongpan                                                                \nMatman                                                                 \nTachileik                                                              \nNarphan                                                                \nMongkhet                                                               \nHsipaw                                                                 \nMonghsat                                                               \nMongmao                                                                \nNansang                                                                \nLaukkaing                                                              \nPangsang                                                               \nNamtu                                                                  \nMonghpyak  346.57799                                                   \nKonkyan    478.37690 463.39594                                         \nMongping   321.66441 354.76537 242.02901                               \nHopong     206.82668 267.95563 304.49287 134.00139                     \nNyaungshwe 271.41464 103.97300 432.35040 319.32583 209.32532           \nHsihseng   131.89940 285.37627 383.49700 199.64389  91.65458  225.80242\nMongla     483.49434 408.03397 468.09747 512.61580 432.31105  347.60273\nHseni      327.41448 200.26876 448.84563 395.58453 286.41193  130.86310\nKunlong    233.60474 357.44661 329.11433 309.05385 219.06817  285.13095\nHopang     408.24516 304.26577 348.18522 379.27212 309.77356  247.19891\nNamhkan    506.32466 379.50202 481.59596 523.74815 444.13246  333.32428\nKengtung   385.33554 221.47613 474.82621 442.80821 340.47382  177.75714\nLangkho    305.03473 200.27496 386.95022 343.96455 239.63685  128.26577\nMonghsu    209.64684 232.17823 331.72187 158.90478  43.40665  173.82799\nTaunggyi   518.72748 334.17439 650.56905 621.53039 513.76415  325.09619\nPangwaun   517.03554 381.95144 263.97576 340.37881 346.00673  352.92324\nKyethi     186.90932 328.16234 400.10989 187.43974 136.49038  288.06872\nLoilen     194.24075 296.99681 334.19820 231.99959 124.74445  206.40432\nManton     448.58230 502.20840 366.66876 200.48082 310.58885  488.79874\nMongyang   413.26052 358.17599 329.39338 387.80686 323.35704  294.29500\nKunhing    296.43996 250.74435 253.74202 212.59619 145.15617  189.97131\nMongyawng  262.24331 285.56475 522.38580 455.59190 326.59925  218.12104\nTangyan    178.69483 335.26416 367.46064 161.67411 106.82328  284.14692\nNamhsan    240.95555 352.70492 352.20115 130.23777 132.70541  315.91750\n            Hsihseng    Mongla     Hseni   Kunlong    Hopang   Namhkan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla     478.66210                                                  \nHseni      312.74375 226.82048                                        \nKunlong    231.85967 346.46200 276.19175                              \nHopang     370.01334 147.02444 162.80878 271.34451                    \nNamhkan    492.09476  77.21355 212.11323 375.73885 146.18632          \nKengtung   370.72441 202.45004  66.12817 317.14187 164.29921 175.63015\nLangkho    276.27441 229.01675  66.66133 224.52741 134.24847 224.40029\nMonghsu     97.82470 424.51868 262.28462 239.89665 301.84458 431.32637\nTaunggyi   528.14240 297.09863 238.19389 471.29032 329.95252 257.29147\nPangwaun   433.06326 319.18643 330.70182 392.45403 206.98364 310.44067\nKyethi      84.04049 556.02500 388.33498 298.55859 440.48114 567.86202\nLoilen     158.84853 338.67408 227.10984 166.53599 242.89326 364.90647\nManton     334.87758 712.51416 584.63341 479.76855 577.52046 721.86149\nMongyang   382.59743 146.66661 210.19929 247.22785  69.25859 167.72448\nKunhing    220.15490 306.47566 206.47448 193.77551 172.96164 314.92119\nMongyawng  309.51462 315.57550 173.86004 240.39800 290.51360 321.21112\nTangyan     70.27241 526.80849 373.07575 268.07983 412.22167 542.64078\nNamhsan    125.74240 564.02740 411.96125 310.40560 440.51555 576.42717\n            Kengtung   Langkho   Monghsu  Taunggyi  Pangwaun    Kyethi\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho    107.16213                                                  \nMonghsu    316.91914 221.84918                                        \nTaunggyi   186.28225 288.27478 486.91951                              \nPangwaun   337.48335 295.38434 343.38498 497.61245                    \nKyethi     444.26274 350.91512 146.61572 599.57407 476.62610          \nLoilen     282.22935 184.10672 131.55208 455.91617 331.69981 232.32965\nManton     631.99123 535.95620 330.76503 803.08034 510.79265 272.03299\nMongyang   217.08047 175.35413 323.95988 374.58247 225.25026 453.86726\nKunhing    245.95083 146.38284 146.78891 429.98509 229.09986 278.95182\nMongyawng  203.87199 186.11584 312.85089 287.73864 475.33116 387.71518\nTangyan    429.95076 332.02048 127.42203 592.65262 447.05580  47.79331\nNamhsan    466.20497 368.20978 153.22576 631.49232 448.58030  68.67929\n              Loilen    Manton  Mongyang   Kunhing Mongyawng   Tangyan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho                                                               \nMonghsu                                                               \nTaunggyi                                                              \nPangwaun                                                              \nKyethi                                                                \nLoilen                                                                \nManton     419.06087                                                  \nMongyang   246.76592 585.70558                                        \nKunhing    130.39336 410.49230 188.89405                              \nMongyawng  261.75211 629.43339 304.21734 295.35984                    \nTangyan    196.60826 271.82672 421.06366 249.74161 377.52279          \nNamhsan    242.15271 210.48485 450.97869 270.79121 430.02019  63.67613"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#computing-hierarchical-clustering",
    "href": "hands-on_ex/ex07/ho_ex07.html#computing-hierarchical-clustering",
    "title": "Hands-on Exercise 7",
    "section": "4.5 Computing Hierarchical Clustering",
    "text": "4.5 Computing Hierarchical Clustering\nUsing hclust which employs agglomeration method to compute the cluster. Supports: ward.D, ward.D2, single, complete, average (UPGMA), mcquitty (WPGMA), median (WPGMC) and centroid (UPGMC)\n\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\nWe can view the cluster in a tree format\n\nplot(hclust_ward, cex = 0.6)"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#selecting-optimal-clustering-algorithm",
    "href": "hands-on_ex/ex07/ho_ex07.html#selecting-optimal-clustering-algorithm",
    "title": "Hands-on Exercise 7",
    "section": "4.6 Selecting Optimal Clustering Algorithm",
    "text": "4.6 Selecting Optimal Clustering Algorithm\nUsing agnes we can find the optimal clustering structure\n\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n\n\nFrom the above we can see that Ward’s method provides the strongest clustering structure. Hence, in the subsequent analysis, only Ward’s method will be used."
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#determining-optimal-clusters",
    "href": "hands-on_ex/ex07/ho_ex07.html#determining-optimal-clusters",
    "title": "Hands-on Exercise 7",
    "section": "4.7 Determining Optimal Clusters",
    "text": "4.7 Determining Optimal Clusters\nThere are three commonly used methods: Elbow, Average Silhouette and Gap Statistic\n\n4.7.1 Gap statistic method\nThis method compares the total within intra-cluster variation for different values of k with their expected values under null reference distribution of the data. The clustering structure is far from the random uniform distribution of points.\n\nset.seed(12345)\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\nThis can be visualized with fviz_gap_stat. According to graph the number of cluster to retain is 1.\n\nfviz_gap_stat(gap_stat)\n\n\n\n\n\n\n\n\n\n\n4.7.2 Interpreting the dendrograms\nIn Dendogram we can see each observation are combined into branches which are grouped by borders with hclust.\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#visually-driven-hierarchical-clustering-analysis",
    "href": "hands-on_ex/ex07/ho_ex07.html#visually-driven-hierarchical-clustering-analysis",
    "title": "Hands-on Exercise 7",
    "section": "4.8 Visually-Driven Hierarchical Clustering Analysis",
    "text": "4.8 Visually-Driven Hierarchical Clustering Analysis\nUsing heatmaply we are able to build interactive cluster heatmap\n\nshan_ict_mat &lt;- data.matrix(shan_ict)\n\nPlot an interactive cluster heatmap\n\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#mapping-the-formed-clusters",
    "href": "hands-on_ex/ex07/ho_ex07.html#mapping-the-formed-clusters",
    "title": "Hands-on Exercise 7",
    "section": "4.9 Mapping the formed clusters",
    "text": "4.9 Mapping the formed clusters\nUsing cutree to derive of 6-cluster\n\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))\n\nAppend shan_sf spatial features with the groups\n\nshan_sf_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\nWe can use qtm to view the clusters. The clusters are very fragmented, which is a result of using non-spatial clustering algorithm\n\nqtm(shan_sf_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#convert-and-compute-neighbors",
    "href": "hands-on_ex/ex07/ho_ex07.html#convert-and-compute-neighbors",
    "title": "Hands-on Exercise 7",
    "section": "5.1 Convert and Compute Neighbors",
    "text": "5.1 Convert and Compute Neighbors\nHere we convert the shan_sf to SpatialPolygonsDataFrame and compute the neighbor.\n\nshan_sp &lt;- as_Spatial(shan_sf)\nshan.nb &lt;- poly2nb(shan_sp)\nsummary(shan.nb)\n\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\n\nVisualize the neighbours\n\nsp::plot(shan_sp, \n     border=grey(.5))\nplot(shan.nb, \n     sp::coordinates(shan_sp), \n     col=\"blue\", \n     add=TRUE)"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#computing-minimum-spanning-tree",
    "href": "hands-on_ex/ex07/ho_ex07.html#computing-minimum-spanning-tree",
    "title": "Hands-on Exercise 7",
    "section": "5.2 Computing Minimum Spanning Tree",
    "text": "5.2 Computing Minimum Spanning Tree\nUsing nbcosts we can compute the cost of each edge\n\nlcosts &lt;- nbcosts(shan.nb, shan_ict)\n\nUsing the the B style we ensure the cost values are not row-standardised\n\nshan.w &lt;- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n\n\nUsing the mstree we can compute the MST using the mean\n\nshan.mst &lt;- mstree(shan.w)\nclass(shan.mst)\n\n[1] \"mst\"    \"matrix\"\n\nhead(shan.mst)\n\n     [,1] [,2]      [,3]\n[1,]   54   48  47.79331\n[2,]   54   17 109.08506\n[3,]   54   45 127.42203\n[4,]   45   52 146.78891\n[5,]   52   13 110.55197\n[6,]   13   28  92.79567\n\n\nMST dimension is n-1 edges, hence 54 instead of 55\n\ndim(shan.mst)\n\n[1] 54  3\n\n\nPlot the MST\n\nsp::plot(shan_sp, border=gray(.5))\nplot.mst(shan.mst, \n         sp::coordinates(shan_sp), \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#computing-spatially-constrained-clusters-using-skater-method",
    "href": "hands-on_ex/ex07/ho_ex07.html#computing-spatially-constrained-clusters-using-skater-method",
    "title": "Hands-on Exercise 7",
    "section": "5.4 Computing spatially constrained clusters using SKATER method",
    "text": "5.4 Computing spatially constrained clusters using SKATER method\nUsing skater we can compute the spatially constrained cluster\n\nclust6 &lt;- spdep::skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\nstr(clust6)\n\nList of 8\n $ groups      : num [1:55] 3 3 6 3 3 3 3 3 3 3 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:22] 13 48 54 55 45 37 34 16 25 52 ...\n  .. ..$ edge: num [1:21, 1:3] 48 55 54 37 34 16 45 25 13 13 ...\n  .. ..$ ssw : num 3423\n  ..$ :List of 3\n  .. ..$ node: num [1:18] 47 27 53 38 42 15 41 51 43 32 ...\n  .. ..$ edge: num [1:17, 1:3] 53 15 42 38 41 51 15 27 15 43 ...\n  .. ..$ ssw : num 3759\n  ..$ :List of 3\n  .. ..$ node: num [1:11] 2 6 8 1 36 4 10 9 46 5 ...\n  .. ..$ edge: num [1:10, 1:3] 6 1 8 36 4 6 8 10 10 9 ...\n  .. ..$ ssw : num 1458\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 44 20\n  .. ..$ edge: num [1, 1:3] 44 20 95\n  .. ..$ ssw : num 95\n  ..$ :List of 3\n  .. ..$ node: num 23\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 3\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 12613\n $ ssw         : num [1:6] 12613 10977 9962 9540 9123 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\nBecause the labels of the cluster to which each observation belongs is computed we can check cluster assignment\n\nccs6 &lt;- clust6$groups\nccs6\n\n [1] 3 3 6 3 3 3 3 3 3 3 2 1 1 1 2 1 1 1 2 4 1 2 5 1 1 1 2 1 2 2 1 2 2 1 1 3 1 2\n[39] 2 2 2 2 2 4 1 3 2 1 1 1 2 1 2 1 1\n\n\nWe can see how many observations in each cluster\n\ntable(ccs6)\n\nccs6\n 1  2  3  4  5  6 \n22 18 11  2  1  1 \n\n\nPlot the pruned tree that shows the five clusters on top of the township area\n\nsp::plot(shan_sp, border=gray(.5))\nplot(clust6, \n     sp::coordinates(shan_sp), \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#visualising-the-new-clusters",
    "href": "hands-on_ex/ex07/ho_ex07.html#visualising-the-new-clusters",
    "title": "Hands-on Exercise 7",
    "section": "5.5 Visualising the New Clusters",
    "text": "5.5 Visualising the New Clusters\nThe skater derived new cluster, seems much more spatially coherent\n\ngroups_mat &lt;- as.matrix(clust6$groups)\nshan_sf_spatialcluster &lt;- cbind(shan_sf_cluster, as.factor(groups_mat)) %&gt;%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\n\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#spatially-constrained-clustering-clustgeo-method",
    "href": "hands-on_ex/ex07/ho_ex07.html#spatially-constrained-clustering-clustgeo-method",
    "title": "Hands-on Exercise 7",
    "section": "5.6 Spatially Constrained Clustering: ClustGeo Method",
    "text": "5.6 Spatially Constrained Clustering: ClustGeo Method\nNext we will be using the ClustGeo package to perform non-spatially constrained hierarchical cluster analysis and spatially constrained cluster analysis\n\n5.6.1 Non-geographically constrained clusters\nWe can use the hclustgeo to perform a typical Ward-like hierarchical clustering just like hclust\n\nnongeo_cluster &lt;- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\n5.6.2 Mapping the cluster\n\ngroups &lt;- as.factor(cutree(nongeo_cluster, k=6))\n\nshan_sf_ngeo_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\nqtm(shan_sf_ngeo_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "hands-on_ex/ex07/ho_ex07.html#spatially-constrainted-hierarchical-clustering",
    "href": "hands-on_ex/ex07/ho_ex07.html#spatially-constrainted-hierarchical-clustering",
    "title": "Hands-on Exercise 7",
    "section": "5.7 Spatially Constrainted Hierarchical Clustering",
    "text": "5.7 Spatially Constrainted Hierarchical Clustering\nWe need the spatial distance matrix we can perform spatially constrained hierarchical clustering\n\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)\n\nUsing choicealpha will be used to determine a suitable value for the mixing parameter alpha as shown in the code chunk below.\n\ncr &lt;- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext we perform the clustering and we will be using 0.2 for alpha with the above graph\n\nclustG &lt;- hclustgeo(proxmat, distmat, alpha = 0.2)\n\nUsing cutree we derive our cluster object\n\ngroups &lt;- as.factor(cutree(clustG, k=6))\n\nJoin with shan_sf for spatial attibute.\n\nshan_sf_Gcluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\nWe can now view the plot\n\nqtm(shan_sf_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html",
    "href": "hands-on_ex/ex01/ho_ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The following code chunk uses p_load() to install and load the sf and tidyverse packages.\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#assign-epsg-code",
    "href": "hands-on_ex/ex01/ho_ex01.html#assign-epsg-code",
    "title": "Hands-on Exercise 1",
    "section": "5.1 Assign EPSG Code",
    "text": "5.1 Assign EPSG Code\nIn the case of mpsz it is projected in SVY 21 with EPSG code 3414, using st_crs() we can see that the data is projected with EPSG code 9001 instead.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nIn order to update EPSG code to 3414 we can set the crs using the st_set_crs()\n\n mpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nThe crs for the mpsz data should now be assigned appropriately\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#re-project-crs",
    "href": "hands-on_ex/ex01/ho_ex01.html#re-project-crs",
    "title": "Hands-on Exercise 1",
    "section": "5.2 Re-Project CRS",
    "text": "5.2 Re-Project CRS\nIn the case of the Preschool data, it is initially projected in WGS 84\n\nst_geometry(preschool)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nIn order to reproject the CRS from WGS 84 to SVY 21 we have to use st_transform() function instead\n\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)\n\nThe crs for the preschool data should now be assigned appropriately as well\n\nst_geometry(preschool3414)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#importing-data-1",
    "href": "hands-on_ex/ex01/ho_ex01.html#importing-data-1",
    "title": "Hands-on Exercise 1",
    "section": "6.1 Importing data",
    "text": "6.1 Importing data\nAirBnb data is a listing and should be loaded with read_csv()\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nUsing list() we can view the listings\n\nlist(listings)\n\n[[1]]\n# A tibble: 3,540 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Ensuite …  367042 Belinda   East Region         Tampines          1.35\n 2  71896 B&B  Roo…  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Room 2-n…  367042 Belinda   East Region         Tampines          1.35\n 4 275343 10min wa… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 15 mins … 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Booking …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 5 mins w… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Comforta… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Relaxing… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 344803 Budget s…  367042 Belinda   East Region         Tampines          1.35\n# ℹ 3,530 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\nWe assume the data uses the wgs84 Geographic Coordinate System"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#aspatial-data-to-sf-data-frame",
    "href": "hands-on_ex/ex01/ho_ex01.html#aspatial-data-to-sf-data-frame",
    "title": "Hands-on Exercise 1",
    "section": "6.2 Aspatial data to sf Data Frame",
    "text": "6.2 Aspatial data to sf Data Frame\nThe aspatial data will first be converted into an sf data frame and re-projected into the SVY 21 crs.\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nThe created data frame shows that geometry has been added while longitude and latitude have been dropped\n\nglimpse(listings_sf)\n\nRows: 3,540\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           &lt;chr&gt; \"Ensuite Room (Room 1 & 2) near EXPO\", …\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; NA, 80, 80, 50, 50, NA, 85, 65, 45, 54,…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 180, 180, 92, 92, 180, 180,…\n$ number_of_reviews              &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 131, 17, 5, 60,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.12, 0.15, 0.29, 0.15, 0.11, 0.08, 0.8…\n$ calculated_host_listings_count &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49, 49, 6, 7, 7,…\n$ availability_365               &lt;dbl&gt; 89, 148, 90, 62, 0, 88, 365, 0, 0, 365,…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 2, 0, 0, 1, 1, 1, 0, 0, 0, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#buffering",
    "href": "hands-on_ex/ex01/ho_ex01.html#buffering",
    "title": "Hands-on Exercise 1",
    "section": "7.1 Buffering",
    "text": "7.1 Buffering\nScenario: The authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the current cycling path. You are tasked to determine the extend of the land need to be acquired and their total area.\nUsing the st_buffer() we can first compute the 5-meter buffer around paths of the cycling data\n\nbuffer_cycling &lt;- st_buffer(cyclingpath,\n                              dist=5, nQuadSegs = 30)\n\nThen the area is calculated\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\n\nFinally the sum() is used to derive the total land involved\n\nsum(buffer_cycling$AREA)\n\n2218855 [m^2]"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#point-in-polygon-count",
    "href": "hands-on_ex/ex01/ho_ex01.html#point-in-polygon-count",
    "title": "Hands-on Exercise 1",
    "section": "7.2 Point-in-polygon count",
    "text": "7.2 Point-in-polygon count\nScenario: A pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.\nUsing st_intersects() we could locate the preschool in each planning subzone from the master plan, and using the length() we can calculate the number of school in their respective subzone.\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n\nUse summary() to get the summarised statistics of the PreSch Count field\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nThen, to list the planning subzone with the most number of pre-schools we could use top_n()\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\nNext, using the st_aera() we can calculate the area of preschool by subzone\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\n\nNext, using mutate() to compute the density by dividing the PreSch Count over the calculated Area field\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html",
    "href": "hands-on_ex/ex11/ho_ex11.html",
    "title": "Hands-on Exercise 11",
    "section": "",
    "text": "This hands-on exercise, we will learn how to build predictive model by using geographical random forest method."
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#loading-packages",
    "href": "hands-on_ex/ex11/ho_ex11.html#loading-packages",
    "title": "Hands-on Exercise 11",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\n\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#importing-data",
    "href": "hands-on_ex/ex11/ho_ex11.html#importing-data",
    "title": "Hands-on Exercise 11",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\nWe will read and split the train/test data\n\nmdata &lt;- read_rds(\"data/model/mdata.rds\")\n\nset.seed(1234)\nresale_split &lt;- initial_split(mdata, \n                              prop = 6.5/10,)\ntrain_data &lt;- training(resale_split)\ntest_data &lt;- testing(resale_split)\n\nwrite_rds(train_data, \"data/model/train_data.rds\")\nwrite_rds(test_data, \"data/model/test_data.rds\")\n\ntrain_data &lt;- read_rds(\"data/model/train_data.rds\")\ntest_data &lt;- read_rds(\"data/model/test_data.rds\")"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#sf-to-spatialpointdataframe",
    "href": "hands-on_ex/ex11/ho_ex11.html#sf-to-spatialpointdataframe",
    "title": "Hands-on Exercise 11",
    "section": "5.1 SF to SpatialPointDataFrame",
    "text": "5.1 SF to SpatialPointDataFrame\n\ntrain_data_sp &lt;- train_data %&gt;% as_Spatial()\ntest_data_sp &lt;- test_data %&gt;% as_Spatial()"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#computing-adaptive-bandwidth",
    "href": "hands-on_ex/ex11/ho_ex11.html#computing-adaptive-bandwidth",
    "title": "Hands-on Exercise 11",
    "section": "5.2 Computing Adaptive Bandwidth",
    "text": "5.2 Computing Adaptive Bandwidth\nThen we will determine adaptive bandwidth and CV method is used to determine the optimal bandwidth.\n\nbw_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 6395 CV score: 3.60536e+13 \nAdaptive bandwidth: 3960 CV score: 3.320316e+13 \nAdaptive bandwidth: 2455 CV score: 2.928339e+13 \nAdaptive bandwidth: 1524 CV score: 2.550957e+13 \nAdaptive bandwidth: 950 CV score: 1.95632e+13 \nAdaptive bandwidth: 593 CV score: 1.58347e+13 \nAdaptive bandwidth: 375 CV score: 1.310042e+13 \nAdaptive bandwidth: 237 CV score: 1.113152e+13 \nAdaptive bandwidth: 155 CV score: 9.572037e+12 \nAdaptive bandwidth: 101 CV score: 8.457003e+12 \nAdaptive bandwidth: 71 CV score: 7.605058e+12 \nAdaptive bandwidth: 49 CV score: 6.966278e+12 \nAdaptive bandwidth: 38 CV score: 8.841916e+12 \nAdaptive bandwidth: 58 CV score: 7.275234e+12 \nAdaptive bandwidth: 45 CV score: 6.871966e+12 \nAdaptive bandwidth: 41 CV score: 6.793327e+12 \nAdaptive bandwidth: 40 CV score: 6.780974e+12 \nAdaptive bandwidth: 38 CV score: 8.841916e+12 \nAdaptive bandwidth: 40 CV score: 6.780974e+12 \n\nwrite_rds(bw_adaptive, \"data/model/bw_adaptive.rds\")\n\nThe result shows that 40 neighbour points will be the optimal bandwidth to be used if adaptive bandwidth is used for this data set."
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#construct-adaptive-bandwidth-gwr-model",
    "href": "hands-on_ex/ex11/ho_ex11.html#construct-adaptive-bandwidth-gwr-model",
    "title": "Hands-on Exercise 11",
    "section": "5.3 Construct Adaptive Bandwidth GWR Model",
    "text": "5.3 Construct Adaptive Bandwidth GWR Model\nNext we will calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and Gaussian kernel as shown in the code chunk below.\n\nbw_adaptive &lt;- read_rds(\"data/model/bw_adaptive.rds\")\ngwr_adaptive &lt;- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n\nwrite_rds(gwr_adaptive, \"data/model/gwr_adaptive.rds\")\n\nTake a look at the model output\n\ngwr_adaptive &lt;- read_rds(\"data/model/gwr_adaptive.rds\")\ngwr_adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-27 12:59:42.020473 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data_sp, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 10335\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\n   Coefficients:\n                              Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)              107601.073  10601.261  10.150  &lt; 2e-16 ***\n   floor_area_sqm             2780.698     90.579  30.699  &lt; 2e-16 ***\n   storey_order              14299.298    339.115  42.167  &lt; 2e-16 ***\n   remaining_lease_mths        344.490      4.592  75.027  &lt; 2e-16 ***\n   PROX_CBD                 -16930.196    201.254 -84.124  &lt; 2e-16 ***\n   PROX_ELDERLYCARE         -14441.025    994.867 -14.516  &lt; 2e-16 ***\n   PROX_HAWKER              -19265.648   1273.597 -15.127  &lt; 2e-16 ***\n   PROX_MRT                 -32564.272   1744.232 -18.670  &lt; 2e-16 ***\n   PROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\n   PROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\n   PROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\n   WITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  &lt; 2e-16 ***\n   WITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  &lt; 2e-16 ***\n   WITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\n   WITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  &lt; 2e-16 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 61650 on 10320 degrees of freedom\n   Multiple R-squared: 0.7373\n   Adjusted R-squared: 0.737 \n   F-statistic:  2069 on 14 and 10320 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 3.922202e+13\n   Sigma(hat): 61610.08\n   AIC:  257320.2\n   AICc:  257320.3\n   BIC:  247249\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 40 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -3.2594e+08 -4.7727e+05 -8.3004e+03  5.5025e+05\n   floor_area_sqm           -2.8714e+04  1.4475e+03  2.3011e+03  3.3900e+03\n   storey_order              3.3186e+03  8.5899e+03  1.0826e+04  1.3397e+04\n   remaining_lease_mths     -1.4431e+03  2.6063e+02  3.9048e+02  5.2865e+02\n   PROX_CBD                 -1.0837e+07 -5.7697e+04 -1.3787e+04  2.6552e+04\n   PROX_ELDERLYCARE         -3.2291e+07 -4.0643e+04  1.0562e+04  6.1054e+04\n   PROX_HAWKER              -2.3985e+08 -5.1365e+04  3.0026e+03  6.4287e+04\n   PROX_MRT                 -1.1660e+07 -1.0488e+05 -4.9373e+04  5.1037e+03\n   PROX_PARK                -6.5961e+06 -4.8671e+04 -8.8128e+02  5.3498e+04\n   PROX_MALL                -1.8112e+07 -7.4238e+04 -1.3982e+04  4.9779e+04\n   PROX_SUPERMARKET         -4.5761e+06 -6.3461e+04 -1.7429e+04  3.5616e+04\n   WITHIN_350M_KINDERGARTEN -4.1881e+05 -6.0040e+03  9.0209e+01  4.7127e+03\n   WITHIN_350M_CHILDCARE    -1.0273e+05 -2.2375e+03  2.6668e+02  2.6388e+03\n   WITHIN_350M_BUS          -1.1757e+05 -1.4719e+03  1.1626e+02  1.7584e+03\n   WITHIN_1KM_PRISCH        -6.6465e+05 -5.5959e+03  2.6916e+02  5.7500e+03\n                                  Max.\n   Intercept                1.6493e+08\n   floor_area_sqm           5.0907e+04\n   storey_order             2.9537e+04\n   remaining_lease_mths     1.8119e+03\n   PROX_CBD                 2.2489e+07\n   PROX_ELDERLYCARE         8.2444e+07\n   PROX_HAWKER              5.9654e+06\n   PROX_MRT                 2.0189e+08\n   PROX_PARK                1.5224e+07\n   PROX_MALL                1.0443e+07\n   PROX_SUPERMARKET         3.8330e+06\n   WITHIN_350M_KINDERGARTEN 6.6799e+05\n   WITHIN_350M_CHILDCARE    1.0802e+05\n   WITHIN_350M_BUS          3.7313e+04\n   WITHIN_1KM_PRISCH        5.0262e+05\n   ************************Diagnostic information*************************\n   Number of data points: 10335 \n   Effective number of parameters (2trace(S) - trace(S'S)): 1730.101 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 8604.899 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 238871.8 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 237036.9 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 238209 \n   Residual sum of squares: 4.829177e+12 \n   R-square value:  0.9676571 \n   Adjusted R-square value:  0.9611535 \n\n   ***********************************************************************\n   Program stops at: 2024-10-27 13:00:38.665229"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#compute-adaptive-bandwidth-for-test-data",
    "href": "hands-on_ex/ex11/ho_ex11.html#compute-adaptive-bandwidth-for-test-data",
    "title": "Hands-on Exercise 11",
    "section": "5.4 Compute Adaptive Bandwidth for Test Data",
    "text": "5.4 Compute Adaptive Bandwidth for Test Data\nSimilarly we will compute the bandwidth for the test Data\n\ngwr_bw_test_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 3447 CV score: 1.902155e+13 \nAdaptive bandwidth: 2138 CV score: 1.752645e+13 \nAdaptive bandwidth: 1328 CV score: 1.556299e+13 \nAdaptive bandwidth: 828 CV score: 1.357498e+13 \nAdaptive bandwidth: 518 CV score: 1.030751e+13 \nAdaptive bandwidth: 327 CV score: 8.348364e+12 \nAdaptive bandwidth: 208 CV score: 6.860544e+12 \nAdaptive bandwidth: 135 CV score: 5.969504e+12 \nAdaptive bandwidth: 89 CV score: 5.242221e+12 \nAdaptive bandwidth: 62 CV score: 4.742767e+12 \nAdaptive bandwidth: 43 CV score: 4.357839e+12 \nAdaptive bandwidth: 34 CV score: 4.125848e+12 \nAdaptive bandwidth: 25 CV score: 4.056699e+12 \nAdaptive bandwidth: 23 CV score: 4.236349e+13 \nAdaptive bandwidth: 30 CV score: 4.074906e+12 \nAdaptive bandwidth: 25 CV score: 4.056699e+12"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#compute-predicted-values-for-test-data",
    "href": "hands-on_ex/ex11/ho_ex11.html#compute-predicted-values-for-test-data",
    "title": "Hands-on Exercise 11",
    "section": "5.5 Compute Predicted Values for Test Data",
    "text": "5.5 Compute Predicted Values for Test Data\n\ngwr_pred &lt;- gwr.predict(formula = resale_price ~\n                          floor_area_sqm + storey_order +\n                          remaining_lease_mths + PROX_CBD + \n                          PROX_ELDERLYCARE + PROX_HAWKER + \n                          PROX_MRT + PROX_PARK + PROX_MALL + \n                          PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                          WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n                          WITHIN_1KM_PRISCH, \n                        data=train_data_sp, \n                        predictdata = test_data_sp, \n                        bw=40, \n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)\n\ngwr_pred"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#preparing-coordinates",
    "href": "hands-on_ex/ex11/ho_ex11.html#preparing-coordinates",
    "title": "Hands-on Exercise 11",
    "section": "6.1 Preparing Coordinates",
    "text": "6.1 Preparing Coordinates\n\ncoords &lt;- st_coordinates(mdata)\ncoords_train &lt;- st_coordinates(train_data)\ncoords_test &lt;- st_coordinates(test_data)\n\ncoords_train &lt;- write_rds(coords_train, \"data/model/coords_train.rds\" )\ncoords_test &lt;- write_rds(coords_test, \"data/model/coords_test.rds\" )\n\nWe will also drop the geometry here\n\ntrain_data &lt;- train_data %&gt;% \n  st_drop_geometry()"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#calibrating-random-forest-model",
    "href": "hands-on_ex/ex11/ho_ex11.html#calibrating-random-forest-model",
    "title": "Hands-on Exercise 11",
    "section": "6.2 Calibrating Random Forest Model",
    "text": "6.2 Calibrating Random Forest Model\nWe will calibrate a model to predict HDB resale price by using random forest function of ranger package.\n\nset.seed(1234)\nrf &lt;- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data)\nrf\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       731404460 \nR squared (OOB):                  0.9493789 \n\n\n\nwrite_rds(rf, \"data/model/rf.rds\")\nrf &lt;- read_rds(\"data/model/rf.rds\")\nrf\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       731404460 \nR squared (OOB):                  0.9493789"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#calibrating-geographical-random-forest-model",
    "href": "hands-on_ex/ex11/ho_ex11.html#calibrating-geographical-random-forest-model",
    "title": "Hands-on Exercise 11",
    "section": "6.3 Calibrating Geographical Random Forest Model",
    "text": "6.3 Calibrating Geographical Random Forest Model\nFor geographical random forest we will calibrate a model to predict HDB resale price by using grf() of SpatialML package instead.\n\nset.seed(1234)\ngwRF_adaptive &lt;- grf(formula = resale_price ~ floor_area_sqm + storey_order +\n                       remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +\n                       PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +\n                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                       WITHIN_1KM_PRISCH,\n                     dframe=train_data, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data, num.trees = 500, mtry = 4, importance = \"impurity\",      num.threads = NULL) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       697593819 \nR squared (OOB):                  0.9517189 \n          floor_area_sqm             storey_order     remaining_lease_mths \n            7.413197e+12             1.538950e+13             2.890637e+13 \n                PROX_CBD         PROX_ELDERLYCARE              PROX_HAWKER \n            5.310066e+13             7.285092e+12             5.568548e+12 \n                PROX_MRT                PROX_PARK                PROX_MALL \n            7.369745e+12             4.894344e+12             4.223286e+12 \n        PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN    WITHIN_350M_CHILDCARE \n            2.793853e+12             1.018586e+12             1.710374e+12 \n         WITHIN_350M_BUS        WITHIN_1KM_PRISCH \n            1.589501e+12             6.794634e+12 \n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-236112.0  -13033.7     444.4     593.8   14831.5  358041.7 \n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-79279.83  -3510.70     54.56     50.98   3909.85  83074.08 \n                               Min          Max        Mean         StD\nfloor_area_sqm                   0 401562922035 18210850992 41426270899\nstorey_order             302736445 243728744368 16368419468 23620589843\nremaining_lease_mths     696564138 546463600727 34119912443 70328183398\nPROX_CBD                  55173040 382484896335 12154563393 29293290548\nPROX_ELDERLYCARE          45182031 344081962746 10597657883 24546405941\nPROX_HAWKER               43516026 342597797419 10551807020 23408387903\nPROX_MRT                  54234551 299075025906  9873129985 21055852211\nPROX_PARK                 49919822 322633843469  9353956995 19517077658\nPROX_MALL                 43296133 433263607933 11247374493 27537334970\nPROX_SUPERMARKET          52665827 417310417234 10802122271 26572460731\nWITHIN_350M_KINDERGARTEN         0 186468064682  2848177740 12928886968\nWITHIN_350M_CHILDCARE            0 255236737234  5526292324 18109971102\nWITHIN_350M_BUS                  0 193828795378  4747552546 11886064288\nWITHIN_1KM_PRISCH                0 178360608427  1778262602  7163381668\n\nwrite_rds(gwRF_adaptive, \"data/model/gwRF_adaptive.rds\")\ngwRF_adaptive &lt;- read_rds(\"data/model/gwRF_adaptive.rds\")"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#predicting-with-test",
    "href": "hands-on_ex/ex11/ho_ex11.html#predicting-with-test",
    "title": "Hands-on Exercise 11",
    "section": "6.4 Predicting with test",
    "text": "6.4 Predicting with test\n\n6.4.1 Preparing Test Data\nNext we combine the test data with its corresponding coordinates data.\n\ntest_data &lt;- cbind(test_data, coords_test) %&gt;%\n  st_drop_geometry()\n\n\n\n6.4.2 Predicting with Test Data\nUsing predict.grf() of spatialML package will be used to predict the resale value by using the test data and gwRF_adaptive model calibrated earlier.\n\ngwRF_pred &lt;- predict.grf(gwRF_adaptive, \n                           test_data, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\nGRF_pred &lt;- write_rds(gwRF_pred, \"data/model/GRF_pred.rds\")\n\n\n\n6.4.3 Converting Predicting Output into Dataframe\nWe will convert it into a data frame for further visualisation and analysis.\n\nGRF_pred &lt;- read_rds(\"data/model/GRF_pred.rds\")\nGRF_pred_df &lt;- as.data.frame(GRF_pred)\n\ntest_data_p &lt;- cbind(test_data, GRF_pred_df)\nwrite_rds(test_data_p, \"data/model/test_data_p.rds\")"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#cacluating-root-mean-square-error",
    "href": "hands-on_ex/ex11/ho_ex11.html#cacluating-root-mean-square-error",
    "title": "Hands-on Exercise 11",
    "section": "6.5 Cacluating Root Mean Square Error",
    "text": "6.5 Cacluating Root Mean Square Error\nUsing the root mean square error (RMSE) we can measure how far predicted values are from observed values in a regression analysis.\n\nrmse(test_data_p$resale_price, \n     test_data_p$GRF_pred)\n\n[1] 27302.9"
  },
  {
    "objectID": "hands-on_ex/ex11/ho_ex11.html#visualising-predicted-values",
    "href": "hands-on_ex/ex11/ho_ex11.html#visualising-predicted-values",
    "title": "Hands-on Exercise 11",
    "section": "6.6 Visualising Predicted Values",
    "text": "6.6 Visualising Predicted Values\nWe can also use a scatterplot to visualise the actual resale price and the predicted resale price.\n\nggplot(data = test_data_p,\n       aes(x = GRF_pred,\n           y = resale_price)) +\n  geom_point()\n\n\n\n\n\n\n\n\nNote that a better predictive model should have the scatter point close to the diagonal line. The scatter plot can be also used to detect if any outliers in the model."
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html",
    "href": "hands-on_ex/ex03/ho_ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "1st Order Spatial Point Pattern Analysis focuses on the overall distribution of points in a study area. It examines questions such as:\n\nIs the distribution of points random, clustered, or dispersed?\nWhat is the average intensity of points (density)?\n\n\n\nIn this hands-on we will be working with 3 new packages, spatstat used for point pattern analysis, raster which reads/writes and manipulates gridded spatial data (raster) and maptools which provides a set of tools for manipulating geographic data (used to convert Spatial object to ppp format of spatstat)\n\n# We have to ensure maptools is installed because it is not available in our version of R\n#| eval: false\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\nThe downloaded binary packages are in\n    /var/folders/77/9zlh5tts65gbm3hvrbnyxrzh0000gn/T//RtmpOHjGi8/downloaded_packages\n\npacman::p_load(tmap, sf, raster, spatstat, maptools, sp, tidyverse)\n\n\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz_sf &lt;- st_set_crs(mpsz_sf, 3414)\n\nsg_sf &lt;- st_read(dsn = \"data\", layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\nsg_sf &lt;- st_set_crs(sg_sf, 3414)\n\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform( crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data/child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nchildcare_sf &lt;- st_set_crs(childcare_sf, 3414)\n\n# Plot map \ntm_shape(sg_sf) + tm_fill() + \n  tm_shape(mpsz_sf) + tm_polygons() + \n  tm_shape(childcare_sf) + tm_dots()\n\n\n\n\n\n\n\n\nUse the view mode to get an interactive map\n\n#tmap_mode('view')\n#tm_shape(childcare_sf) + tm_dots()\n# Rem to chagne the mode\ntmap_mode('plot')\n\n\n\n\nWhile Simple Feature Data Frames (SF) are a more modern and efficient way to represent spatial data in R that adheres to modern standards and providing a consistent interface, SP Spatial classes have also been a staple in R’s geospatial ecosystem, we shall next see how to convert the data to sp’s spatial classes\n\n\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Name,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Description \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;08F73931F4A691F4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;RAFFLES KIDZ @ PUNGGOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;379D017BF244B0FA&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\n\n\n\nA generic sp object is a more general term that refers to any object that belongs to the sp package and has spatial attributes. This could be a specific Spatial class or a more complex object that combines multiple spatial components. This step is necessary an as intermediate state before converting into ppp object for spatstat\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\n\nFinally we can convert into a the ppp format (Conversion: sf df -&gt; sp spatial -&gt; sp generic -&gt; ppp). ppp is a specialized format within the spatstat package that is optimized for analyzing spatial point patterns using ppp().\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\nNote the summary of the object indicates there are duplicate points in the data\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n\nWe can run the duplicated() to firstly check for any duplicates\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nNext we can use multiplicity() to view the co-incidence poitns\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\nNext we calculate which how many points in our data have &gt;1 co-incidence points. In this case 128 duplicate points\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 128\n\n\nLets use the interactive map to view the location of these duplicated points, by giving the points some transparency we can view the overlap of some points which appears to be darker\n\n#tmap_mode('view')\n#tm_shape(childcare) + tm_dots(alpha = 0.4, size = 0.05)\ntmap_mode('plot')\n\nTo resolve duplicates we can employ any of the following 3 ways: 1. Deleting the duplicates, however we might end up deleting useful points 2. Use Jittering to jitter the points such that the duplicate point does not occupy the same space 3. Attach the patterns to the duplicates as marks, subsequently handled by analytical techniques that into account the marks\nIn this case we will be using jittering to handle the duplicates\n\nchildcare_ppp &lt;- rjitter(childcare_ppp,\n                         retry = TRUE,\n                         nsimm = 1,\n                         drop = TRUE)\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\nAs can be seen above the duplicates have now been dealt with.\n\n\n\nIt is good practice to confine area of analysis such as the Singapore Boundary, as such we can create objects called owin to represent this region of confinement\n\nsg_owin &lt;- as.owin(sg_sf)\n\nplot(sg_owin)\n\n\n\n\n\n\n\n\nThe owin basically contains a list of polygon that defines the boundary.\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\nNext to combine the point and owin objects we will extract childcare event points located within the owin object. In the output the point and polygon are combined into a single ppp object.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1544 points\nAverage intensity 2.128551e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\nplot(childcareSG_ppp)\n\n\n\n\n\n\n\n\n\n\n\n\nUsing spatstat we will be working on the following SPPA\n\nderiving kernel density estimation (KDE) layer for visualising and exploring the intensity of point processes\nperforming Confirmatory Spatial Point Patterns Analysis by using Nearest Neighbour statistics\n\n\n\n\n\nUsing density() we can compute the kernal density of the points event. diggle() is used for automatic bandwith selection for computing kernel density\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp, sigma = bw.diggle, edge = TRUE, kernel = \"gaussian\")\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nThe desnsity output range of 0 to 0.000035 is too small to comprehend as the svy21 uses meter for measurement, but before that we can also use the diggle() to compute to compute the kde layer\n\nbw &lt;- bw.diggle(childcareSG_ppp)\n\nbw\n\n   sigma \n472.4817 \n\n\n\n\n\nUsing the rescale() we can convert our unit of measurement to use kilometer instead of meter, the legend should now show density in km instead\n\nchildcareSG_ppp_km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp_km, sigma = bw.diggle, edge = TRUE, kernel = \"gaussian\")\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\n\n\nspatstat offers 3 other methods aside from diggle()\n\n\n\nbw.CvL(childcareSG_ppp_km)\n\n   sigma \n4.606555 \n\n\n\n\n\n\nbw.scott(childcareSG_ppp_km)\n\n sigma.x  sigma.y \n2.225122 1.450411 \n\n\n\n\n\n\nbw.ppl(childcareSG_ppp_km)\n\n    sigma \n0.4024939 \n\n\n\n\n\nThe ppl() algorithm is recommended because it seems to produce more appropriate values when the patttern consist of tight clusters\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(kde_childcareSG_bw, main = \"diggle\")\nplot(density(childcareSG_ppp_km, sigma =  bw.ppl, edge = TRUE, kernel = \"gaussian\"), main = \"ppl\")\nplot(density(childcareSG_ppp_km, sigma =  bw.CvL, edge = TRUE, kernel = \"gaussian\"), main = \"CvL\")\nplot(density(childcareSG_ppp_km, sigma =  bw.scott, edge = TRUE, kernel = \"gaussian\"), main = \"scott\")\n\n\n\n\n\n\n\n\n\n\n\nThe default kernel method for ppp() used is the gaussian, here are some other options\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"gaussian\"), main = \"Gaussian\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"epanechnikov\"), main = \"Epanechnikov\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"quartic\"), main = \"Quartic\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"disc\"), main = \"Disc\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can also compute with a specified bandwidth, in our case of 600m we will use a sigma value of 0.6 as childcare_ppp_km uses kilometers.\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp_km, sigma = 0.6, edge = TRUE, kernel = \"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n\n\nGiven that fixed bandwidth are sensitive to highly skew distribution of spatial point patterns over geographical units (e.g. urban versus rural), adaptive bandwidth can be used to resolve this.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp_km, method=\"kernel\")\n\npar(mfrow = c(1,2), mar = c(1,1,1,2))\nplot(kde_childcareSG_600, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\nThe results are the same, we are just converting for mapping\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG_bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nNext we convert the gridded output into a raster layer\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.816077e-15, 20.53237  (min, max)\n\n\nThe CRS property is NA, to add our CRS\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -8.816077e-15, 20.53237  (min, max)\n\n\n\n\n\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\", palette=\"viridis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\nStart by extracting the Punggol, Tampines, Choa Chu Kang and Jurong West planning areas\n\npg &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\nPlottng of the target areas\n\npar(mfrow=c(2,2))\n\nplot(pg, main = \"Punggol\")\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\n\n\n\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\nFirst convert them to owin objects\n\npg_owin &lt;- as.owin(pg)\ntm_owin &lt;- as.owin(tm)\nck_owin &lt;- as.owin(ck)\njw_owin &lt;- as.owin(jw)\n\nExtract out the childcare points from their respective owin\n\nchildcare_pg_ppp = childcare_ppp[pg_owin]\nchildcare_tm_ppp = childcare_ppp[tm_owin]\nchildcare_ck_ppp = childcare_ppp[ck_owin]\nchildcare_jw_ppp = childcare_ppp[jw_owin]\n\nRescale from meters to kilometers\n\nchildcare_pg_ppp_km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp_km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp_km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp_km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nComparing childcare at the target areas\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(childcare_pg_ppp_km, main=\"Punggol\")\nplot(childcare_tm_ppp_km, main=\"Tampines\")\nplot(childcare_ck_ppp_km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp_km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\nNext we compute the kde with diggle()\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcare_pg_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\nUsing a fixed bandwidth of 250m\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcare_pg_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo perform the Clark-Evans test of aggregation using the clarkevans.test(), the test hypotheses are:\n\nHo = The distribution of childcare services are randomly distributed.\nH1 = The distribution of childcare services are not randomly distributed.\nThe 95% confident interval will be used.\n\n\n\nR: Measures the degree of clustering or dispersion in the spatial distribution of childcare services. - If R = 1, there is complete randomness. - If R &lt; 1, there is clustering (points are closer together than expected by chance). - If R &gt; 1, there is dispersion (points are farther apart than expected by chance).\np-value: This is the probability of observing a test statistic (R) as extreme or more extreme than the observed one, assuming the null hypothesis (Ho) is true. - A p-value less than the significance level (usually 0.05) indicates that the observed data is unlikely to occur under the null hypothesis, leading to rejection of Ho.\n\nclarkevans.test(childcareSG_ppp,\n                correction = \"none\",\n                clipregion = \"sg_owin\",\n                alternative = c(\"clustered\"),\n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.56076, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n\nclarkevans.test(childcare_ck_ppp,\n                correction = \"none\",\n                clipregion = NULL,\n                alternative = c(\"clustered\"),\n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.91197, p-value = 0.09421\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &gt; 0.05, H0 cannot be rejected.\n\n\n\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.79477, p-value = 0.0001062\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected."
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#getting-started",
    "href": "hands-on_ex/ex03/ho_ex03.html#getting-started",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "In this hands-on we will be working with 3 new packages, spatstat used for point pattern analysis, raster which reads/writes and manipulates gridded spatial data (raster) and maptools which provides a set of tools for manipulating geographic data (used to convert Spatial object to ppp format of spatstat)\n\n# We have to ensure maptools is installed because it is not available in our version of R\n#| eval: false\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\nThe downloaded binary packages are in\n    /var/folders/77/9zlh5tts65gbm3hvrbnyxrzh0000gn/T//RtmpOHjGi8/downloaded_packages\n\npacman::p_load(tmap, sf, raster, spatstat, maptools, sp, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#importing-data",
    "href": "hands-on_ex/ex03/ho_ex03.html#importing-data",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "mpsz_sf &lt;- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz_sf &lt;- st_set_crs(mpsz_sf, 3414)\n\nsg_sf &lt;- st_read(dsn = \"data\", layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\nsg_sf &lt;- st_set_crs(sg_sf, 3414)\n\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform( crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data/child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nchildcare_sf &lt;- st_set_crs(childcare_sf, 3414)\n\n# Plot map \ntm_shape(sg_sf) + tm_fill() + \n  tm_shape(mpsz_sf) + tm_polygons() + \n  tm_shape(childcare_sf) + tm_dots()\n\n\n\n\n\n\n\n\nUse the view mode to get an interactive map\n\n#tmap_mode('view')\n#tm_shape(childcare_sf) + tm_dots()\n# Rem to chagne the mode\ntmap_mode('plot')"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#data-wrangling",
    "href": "hands-on_ex/ex03/ho_ex03.html#data-wrangling",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "While Simple Feature Data Frames (SF) are a more modern and efficient way to represent spatial data in R that adheres to modern standards and providing a consistent interface, SP Spatial classes have also been a staple in R’s geospatial ecosystem, we shall next see how to convert the data to sp’s spatial classes\n\n\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Name,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Description \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;08F73931F4A691F4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;RAFFLES KIDZ @ PUNGGOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;379D017BF244B0FA&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\n\n\n\nA generic sp object is a more general term that refers to any object that belongs to the sp package and has spatial attributes. This could be a specific Spatial class or a more complex object that combines multiple spatial components. This step is necessary an as intermediate state before converting into ppp object for spatstat\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\n\nFinally we can convert into a the ppp format (Conversion: sf df -&gt; sp spatial -&gt; sp generic -&gt; ppp). ppp is a specialized format within the spatstat package that is optimized for analyzing spatial point patterns using ppp().\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\nNote the summary of the object indicates there are duplicate points in the data\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n\nWe can run the duplicated() to firstly check for any duplicates\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nNext we can use multiplicity() to view the co-incidence poitns\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\nNext we calculate which how many points in our data have &gt;1 co-incidence points. In this case 128 duplicate points\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 128\n\n\nLets use the interactive map to view the location of these duplicated points, by giving the points some transparency we can view the overlap of some points which appears to be darker\n\n#tmap_mode('view')\n#tm_shape(childcare) + tm_dots(alpha = 0.4, size = 0.05)\ntmap_mode('plot')\n\nTo resolve duplicates we can employ any of the following 3 ways: 1. Deleting the duplicates, however we might end up deleting useful points 2. Use Jittering to jitter the points such that the duplicate point does not occupy the same space 3. Attach the patterns to the duplicates as marks, subsequently handled by analytical techniques that into account the marks\nIn this case we will be using jittering to handle the duplicates\n\nchildcare_ppp &lt;- rjitter(childcare_ppp,\n                         retry = TRUE,\n                         nsimm = 1,\n                         drop = TRUE)\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\nAs can be seen above the duplicates have now been dealt with.\n\n\n\nIt is good practice to confine area of analysis such as the Singapore Boundary, as such we can create objects called owin to represent this region of confinement\n\nsg_owin &lt;- as.owin(sg_sf)\n\nplot(sg_owin)\n\n\n\n\n\n\n\n\nThe owin basically contains a list of polygon that defines the boundary.\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\nNext to combine the point and owin objects we will extract childcare event points located within the owin object. In the output the point and polygon are combined into a single ppp object.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1544 points\nAverage intensity 2.128551e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#st-order-spatial-point-patterns-analysis",
    "href": "hands-on_ex/ex03/ho_ex03.html#st-order-spatial-point-patterns-analysis",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Using spatstat we will be working on the following SPPA\n\nderiving kernel density estimation (KDE) layer for visualising and exploring the intensity of point processes\nperforming Confirmatory Spatial Point Patterns Analysis by using Nearest Neighbour statistics\n\n\n\n\n\nUsing density() we can compute the kernal density of the points event. diggle() is used for automatic bandwith selection for computing kernel density\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp, sigma = bw.diggle, edge = TRUE, kernel = \"gaussian\")\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nThe desnsity output range of 0 to 0.000035 is too small to comprehend as the svy21 uses meter for measurement, but before that we can also use the diggle() to compute to compute the kde layer\n\nbw &lt;- bw.diggle(childcareSG_ppp)\n\nbw\n\n   sigma \n472.4817 \n\n\n\n\n\nUsing the rescale() we can convert our unit of measurement to use kilometer instead of meter, the legend should now show density in km instead\n\nchildcareSG_ppp_km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp_km, sigma = bw.diggle, edge = TRUE, kernel = \"gaussian\")\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\n\n\nspatstat offers 3 other methods aside from diggle()\n\n\n\nbw.CvL(childcareSG_ppp_km)\n\n   sigma \n4.606555 \n\n\n\n\n\n\nbw.scott(childcareSG_ppp_km)\n\n sigma.x  sigma.y \n2.225122 1.450411 \n\n\n\n\n\n\nbw.ppl(childcareSG_ppp_km)\n\n    sigma \n0.4024939 \n\n\n\n\n\nThe ppl() algorithm is recommended because it seems to produce more appropriate values when the patttern consist of tight clusters\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(kde_childcareSG_bw, main = \"diggle\")\nplot(density(childcareSG_ppp_km, sigma =  bw.ppl, edge = TRUE, kernel = \"gaussian\"), main = \"ppl\")\nplot(density(childcareSG_ppp_km, sigma =  bw.CvL, edge = TRUE, kernel = \"gaussian\"), main = \"CvL\")\nplot(density(childcareSG_ppp_km, sigma =  bw.scott, edge = TRUE, kernel = \"gaussian\"), main = \"scott\")\n\n\n\n\n\n\n\n\n\n\n\nThe default kernel method for ppp() used is the gaussian, here are some other options\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"gaussian\"), main = \"Gaussian\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"epanechnikov\"), main = \"Epanechnikov\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"quartic\"), main = \"Quartic\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"disc\"), main = \"Disc\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can also compute with a specified bandwidth, in our case of 600m we will use a sigma value of 0.6 as childcare_ppp_km uses kilometers.\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp_km, sigma = 0.6, edge = TRUE, kernel = \"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n\n\nGiven that fixed bandwidth are sensitive to highly skew distribution of spatial point patterns over geographical units (e.g. urban versus rural), adaptive bandwidth can be used to resolve this.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp_km, method=\"kernel\")\n\npar(mfrow = c(1,2), mar = c(1,1,1,2))\nplot(kde_childcareSG_600, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\nThe results are the same, we are just converting for mapping\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG_bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nNext we convert the gridded output into a raster layer\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.816077e-15, 20.53237  (min, max)\n\n\nThe CRS property is NA, to add our CRS\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -8.816077e-15, 20.53237  (min, max)\n\n\n\n\n\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\", palette=\"viridis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\nStart by extracting the Punggol, Tampines, Choa Chu Kang and Jurong West planning areas\n\npg &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\nPlottng of the target areas\n\npar(mfrow=c(2,2))\n\nplot(pg, main = \"Punggol\")\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\n\n\n\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\nFirst convert them to owin objects\n\npg_owin &lt;- as.owin(pg)\ntm_owin &lt;- as.owin(tm)\nck_owin &lt;- as.owin(ck)\njw_owin &lt;- as.owin(jw)\n\nExtract out the childcare points from their respective owin\n\nchildcare_pg_ppp = childcare_ppp[pg_owin]\nchildcare_tm_ppp = childcare_ppp[tm_owin]\nchildcare_ck_ppp = childcare_ppp[ck_owin]\nchildcare_jw_ppp = childcare_ppp[jw_owin]\n\nRescale from meters to kilometers\n\nchildcare_pg_ppp_km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp_km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp_km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp_km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nComparing childcare at the target areas\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(childcare_pg_ppp_km, main=\"Punggol\")\nplot(childcare_tm_ppp_km, main=\"Tampines\")\nplot(childcare_ck_ppp_km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp_km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\nNext we compute the kde with diggle()\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcare_pg_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\nUsing a fixed bandwidth of 250m\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcare_pg_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo perform the Clark-Evans test of aggregation using the clarkevans.test(), the test hypotheses are:\n\nHo = The distribution of childcare services are randomly distributed.\nH1 = The distribution of childcare services are not randomly distributed.\nThe 95% confident interval will be used.\n\n\n\nR: Measures the degree of clustering or dispersion in the spatial distribution of childcare services. - If R = 1, there is complete randomness. - If R &lt; 1, there is clustering (points are closer together than expected by chance). - If R &gt; 1, there is dispersion (points are farther apart than expected by chance).\np-value: This is the probability of observing a test statistic (R) as extreme or more extreme than the observed one, assuming the null hypothesis (Ho) is true. - A p-value less than the significance level (usually 0.05) indicates that the observed data is unlikely to occur under the null hypothesis, leading to rejection of Ho.\n\nclarkevans.test(childcareSG_ppp,\n                correction = \"none\",\n                clipregion = \"sg_owin\",\n                alternative = c(\"clustered\"),\n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.56076, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n\nclarkevans.test(childcare_ck_ppp,\n                correction = \"none\",\n                clipregion = NULL,\n                alternative = c(\"clustered\"),\n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.91197, p-value = 0.09421\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &gt; 0.05, H0 cannot be rejected.\n\n\n\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.79477, p-value = 0.0001062\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected."
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-with-g-function",
    "href": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-with-g-function",
    "title": "Hands-on Exercise 3",
    "section": "2.1 Analysing Spatial Point Process with G-Function",
    "text": "2.1 Analysing Spatial Point Process with G-Function\nG function measures the distribution of the distances from an arbitrary even to its nearest event\n\n2.1.1 Choa Chu Kang Planning Area\nUsing Gest() we can compute the G-function\n\nG_CK &lt;- Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nH0: The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1: The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\nMonte Carlo test with the envelope()\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(G_CK.csr)\n\n\n\n\n\n\n\n\n\n\n2.1.2 Tampines Planning Area\nPerforming Complete Spatial Randomness Test\n\nH0: The distribution of childcare services at Tampines are randomly distributed.\nH1: The distribution of childcare services at Tampines are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nG_tm.csr &lt;- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-with-the-f-function",
    "href": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-with-the-f-function",
    "title": "Hands-on Exercise 3",
    "section": "2.2 Analysing Spatial Point Process with the F-Function",
    "text": "2.2 Analysing Spatial Point Process with the F-Function\nF function estimates the empty space function F(r) or its hazard rate h(r) from a point pattern in a window of arbitrary shape.\n\n2.2.1 Choa Chu Kang Planning Area\n\nF_CK &lt;- Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1: The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(F_CK.csr)\n\n\n\n\n\n\n\n\n\n\n2.2.2 Tampines Planning Area\n\nF_tm &lt;- Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Tampines are randomly distributed.\nH1: The distribution of childcare services at Tampines are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-using-k-function",
    "href": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-using-k-function",
    "title": "Hands-on Exercise 3",
    "section": "2.3 Analysing Spatial Point Process Using K-Function",
    "text": "2.3 Analysing Spatial Point Process Using K-Function\nK-function measures the number of events found up to a given distance of any particular event. We will be using the Kest() function from spatstat.\n\n2.3.1 Choa Chu Kang Planning Area\n\nK_ck &lt;- Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1: The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nK_ck.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\n\n\n2.3.2 Tampines Planning Area\n\nK_tm &lt;- Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Tampines are randomly distributed.\nH1: The distribution of childcare services at Tampines are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nK_tm.csr &lt;- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-using-l-function",
    "href": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-using-l-function",
    "title": "Hands-on Exercise 3",
    "section": "2.4 Analysing Spatial Point Process Using L-Function",
    "text": "2.4 Analysing Spatial Point Process Using L-Function\nL function is a transformation of the K function, designed to help in identifying clustering or regularity in spatial point patterns\n\n2.4.1 Choa Chu Kang Planning Area\n\nL_ck &lt;- Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1: The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nL_ck.csr &lt;- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\n\n\n2.4.2 Tampines Planning Area\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Tampines are randomly distributed.\nH1: The distribution of childcare services at Tampines are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nL_tm.csr &lt;- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html",
    "href": "hands-on_ex/ex05/ho_ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "Spatial weights matrices are fundamental tools in spatial analysis. They quantify the spatial relationships between geographic features, such as points, lines, or polygons. These relationships can be based on distance, contiguity, or other spatial criteria."
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#loading-packages",
    "href": "hands-on_ex/ex05/ho_ex05.html#loading-packages",
    "title": "Hands-on Exercise 5",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nWe will be using the spdep package which is used for the creation and manipulation of spatial weights matrices. These spatial weights matrices are essential for tasks like spatial autocorrelation analysis, spatial regression modeling, and understanding the spatial distribution of phenomena.\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#importing-data",
    "href": "hands-on_ex/ex05/ho_ex05.html#importing-data",
    "title": "Hands-on Exercise 5",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/hands-on_ex/ex05/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#relational-join",
    "href": "hands-on_ex/ex05/ho_ex05.html#relational-join",
    "title": "Hands-on Exercise 5",
    "section": "2.3 Relational Join",
    "text": "2.3 Relational Join\nNext we update the attribute table of hunan joined based by county.\n\nhunan &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#visualising-regional-development-indicator",
    "href": "hands-on_ex/ex05/ho_ex05.html#visualising-regional-development-indicator",
    "title": "Hands-on Exercise 5",
    "section": "2.4 Visualising Regional Development Indicator",
    "text": "2.4 Visualising Regional Development Indicator\nNext we take a look at the GDPPC across hunan and their individual country.\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#queen-contiguity-based-neighbours",
    "href": "hands-on_ex/ex05/ho_ex05.html#queen-contiguity-based-neighbours",
    "title": "Hands-on Exercise 5",
    "section": "3.1 QUEEN Contiguity Based Neighbours",
    "text": "3.1 QUEEN Contiguity Based Neighbours\nUsing poly2nb we can find the number of neighbours for each county, with the max being 11 in all direction, and 2 with just 1 neighbour.\n\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nTo get the neighbours for the first area unit 1, which have 5 units. The first county being Anxing\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\nTo get for all it’s 5 neighbours, and their respective GDPPC.\n\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\nnb1 &lt;- hunan$GDPPC[wm_q[[1]]]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nWeight Matrix\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"snap\")= num 9e-08\n - attr(*, \"sym\")= logi TRUE\n - attr(*, \"ncomp\")=List of 2\n  ..$ nc     : int 1\n  ..$ comp.id: int [1:88] 1 1 1 1 1 1 1 1 1 1 ..."
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#rook-contiguity-based-neighbours",
    "href": "hands-on_ex/ex05/ho_ex05.html#rook-contiguity-based-neighbours",
    "title": "Hands-on Exercise 5",
    "section": "3.2 ROOK Contiguity Based Neighbours",
    "text": "3.2 ROOK Contiguity Based Neighbours\nNotice how now with rook we have lesser max link at county taoyuan (85), from 10 to 11. Lets try to visualize this in the next section.\n\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#visualising-contiguity-weights",
    "href": "hands-on_ex/ex05/ho_ex05.html#visualising-contiguity-weights",
    "title": "Hands-on Exercise 5",
    "section": "3.3 Visualising Contiguity Weights",
    "text": "3.3 Visualising Contiguity Weights\nTo do so we need the centroids of each polygon to plot there relations, we start by extracting the long and lat of each country and combine the coordinates\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\n3.3.1 Plotting QUEEN Map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\n\n\n\n\n3.3.2 Plotting ROOK Map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\n\n\n3.3.3 Side by Side Comparison\nNotice how Taoyuan was able to connect with the diagonal county touching at just a point, sandwich between 2 other counties with the QUEEN?\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#determining-cut-off-distance",
    "href": "hands-on_ex/ex05/ho_ex05.html#determining-cut-off-distance",
    "title": "Hands-on Exercise 5",
    "section": "4.1 Determining cut-off distance",
    "text": "4.1 Determining cut-off distance\nStart with knearneigh by getting the points belonging to set of k nearest neighbours of each other then convert it into nb class with knn2nb\nUsing nbdists to get the length of neighbour relationship edges. Returns coordinate pairs if projected\n\nk1 &lt;- knn2nb(knearneigh(coords))\nsummary(k1)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 88 \nPercentage nonzero weights: 1.136364 \nAverage number of links: 1 \n25 disjoint connected subgraphs\nNon-symmetric neighbours list\nLink number distribution:\n\n 1 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 1 link\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 1 link\n\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#computing-fixed-distance-weight-matrix",
    "href": "hands-on_ex/ex05/ho_ex05.html#computing-fixed-distance-weight-matrix",
    "title": "Hands-on Exercise 5",
    "section": "4.2 Computing fixed distance weight matrix",
    "text": "4.2 Computing fixed distance weight matrix\nFrom the previous summary we could tell the largest first nearest neighbour distance is 61.79km, so using an upper limit can guarantee that we will at least have 1 neighbour.\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nsummary(wm_d62)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\n\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n - attr(*, \"ncomp\")=List of 2\n  ..$ nc     : int 1\n  ..$ comp.id: int [1:88] 1 1 1 1 1 1 1 1 1 1 ...\n\n\nFor a formatted output we can use table() and card().\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#visualising-distance-weights",
    "href": "hands-on_ex/ex05/ho_ex05.html#visualising-distance-weights",
    "title": "Hands-on Exercise 5",
    "section": "4.3 Visualising Distance Weights",
    "text": "4.3 Visualising Distance Weights\nFollowing a plot of the nearest neighbour plot and the distance based neighbours we have computed\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(hunan$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#adaptive-distance-weight-matrix",
    "href": "hands-on_ex/ex05/ho_ex05.html#adaptive-distance-weight-matrix",
    "title": "Hands-on Exercise 5",
    "section": "4.4 Adaptive distance weight matrix",
    "text": "4.4 Adaptive distance weight matrix\nNow lets pick the no. of nearest neighbours to be 6.\n\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nsummary(knn6)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\nLink number distribution:\n\n 6 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 6 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 6 links\n\n\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"ncomp\")=List of 2\n  ..$ nc     : int 1\n  ..$ comp.id: int [1:88] 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n4.4.1 Side by Side Comparison\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, pch = 19, cex = 0.6, add=TRUE, col=\"red\" )\nplot(hunan$geometry, border=\"lightgrey\", main=\"6 nearest neighbours\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#spatial-lag-with-row-standardized-weights",
    "href": "hands-on_ex/ex05/ho_ex05.html#spatial-lag-with-row-standardized-weights",
    "title": "Hands-on Exercise 5",
    "section": "7.1 Spatial lag with row-standardized weights",
    "text": "7.1 Spatial lag with row-standardized weights\nWe compute the average neighbour GDPPC value for our lagged values.\n\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\nGDPPC for the 1st polygon’s 5 neighbours\n\nnb1 &lt;- hunan$GDPPC[wm_q[[1]]]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nAppend lagged values to the sf dataframe\n\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan,lag.res)\n\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\nComparison of GDPPC vs GDPPC spatial lag (GDDPC vs RSW)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#spatial-lag-as-a-sum-of-neighbouring-values",
    "href": "hands-on_ex/ex05/ho_ex05.html#spatial-lag-as-a-sum-of-neighbouring-values",
    "title": "Hands-on Exercise 5",
    "section": "7.2 Spatial lag as a sum of neighbouring values",
    "text": "7.2 Spatial lag as a sum of neighbouring values\nThis method will assign 1 per neighbour of the polygon.\n\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nAppend lagged value to sf dataframe\n\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\nhunan &lt;- left_join(hunan, lag.res)\n\nComparison of GDPPC vs GDPPC spatial lag value (GDDPC vs SNV)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#spatial-window-average",
    "href": "hands-on_ex/ex05/ho_ex05.html#spatial-window-average",
    "title": "Hands-on Exercise 5",
    "section": "7.3 Spatial Window Average",
    "text": "7.3 Spatial Window Average\nIn this method we add a diagonal element to neighbour, the polygon itself is added too\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\nRe-compute the weights with nb2listw\n\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\nCompute the lag variable from the weights\n\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nAppend lagged value to sf dataframe\n\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag_w_avg_gpdpc)\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\nWe can also use kable from knitr to compare lagged value and spatial window average values.\n\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nComparison of GDPPC vs GDPPC spatial lag value (RSW vs SWA)\n\nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#spatial-window-sum",
    "href": "hands-on_ex/ex05/ho_ex05.html#spatial-window-sum",
    "title": "Hands-on Exercise 5",
    "section": "7.4 Spatial Window Sum",
    "text": "7.4 Spatial Window Sum\nSimilar to window average but without using row-standardised weights. Assign binary weights to neighbour structure which includes the diagonal element.\n\n# Add the diagonal again\nwm_qs &lt;- include.self(wm_q)\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\nUsing nb2listw and glist we assign weight values.\n\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nCompute the lag variable from the weights\n\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\nAppend lagged value to sf dataframe\n\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\nCompare lagged value and spatial window sum values.\n\nhunan %&gt;%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nComparison of GDPPC vs GDPPC spatial lag value (SNV vs SWS)\n\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#comparison-of-all-4",
    "href": "hands-on_ex/ex05/ho_ex05.html#comparison-of-all-4",
    "title": "Hands-on Exercise 5",
    "section": "7.5 Comparison of all 4",
    "text": "7.5 Comparison of all 4\n\ntmap_arrange(lag_gdppc, lag_sum_gdppc, w_avg_gdppc, w_sum_gdppc, asp=1, nrow =2 , ncol=2)"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html",
    "href": "take-home_ex/ex01/th_ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In 2024 armed conflict continues to be a devastating global issue, with millions of people affected each year. Recent years have seen a surge in conflicts, driven by factors such as political instability, regional tensions, and resource scarcity. Myanmar, in particular, has experienced significant armed conflict in recent years, including the 2021 military coup and subsequent violence.\nTODO: Lit review\n\n\n\n\nAnalyze the spatial distribution of armed conflict events in Myanmar.\nIdentify patterns and trends in the temporal distribution of conflict events.\nIdentify potential hotspots of conflict activity.\nProvide insights for policymakers and humanitarian organizations working to address the conflict in Myanmar."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#context",
    "href": "take-home_ex/ex01/th_ex01.html#context",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In 2024 armed conflict continues to be a devastating global issue, with millions of people affected each year. Recent years have seen a surge in conflicts, driven by factors such as political instability, regional tensions, and resource scarcity. Myanmar, in particular, has experienced significant armed conflict in recent years, including the 2021 military coup and subsequent violence.\nTODO: Lit review"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#objectives",
    "href": "take-home_ex/ex01/th_ex01.html#objectives",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Analyze the spatial distribution of armed conflict events in Myanmar.\nIdentify patterns and trends in the temporal distribution of conflict events.\nIdentify potential hotspots of conflict activity.\nProvide insights for policymakers and humanitarian organizations working to address the conflict in Myanmar."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#loading-packages",
    "href": "take-home_ex/ex01/th_ex01.html#loading-packages",
    "title": "Take-home Exercise 1",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nIn this project we will be using the following packages:\n\ntmap: A package for creating thematic maps in R. It provides a simple and flexible interface for customizing maps and exporting them in various formats.\nsf: A package for simple feature data, which is a modern standard for representing geographic features. It provides efficient data structures and functions for spatial operations.\nraster: A package for working with raster data, such as images and digital elevation models. It offers tools for reading, writing, manipulating, and analyzing raster data.\nspatstat: A package for spatial point pattern analysis. It provides functions for analyzing the distribution and relationships between points in a study area.\nmaptools: A package for reading and writing various spatial data formats, including shapefiles and KML. It also provides tools for converting between different spatial data structures.\nsp: A package for spatial data in R. It provides classes and functions for representing and manipulating spatial data, such as points, lines, and polygons.\ntidyverse: A collection of R packages designed for data manipulation, visualization, and analysis. It includes packages like dplyr, ggplot2, and tidyr, which are commonly used in data science workflows.\n\n\npacman::p_load(tmap, sf, raster, spatstat, sparr, maptools, sp, tidyverse, DT, gridExtra, animation)"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#loading-data",
    "href": "take-home_ex/ex01/th_ex01.html#loading-data",
    "title": "Take-home Exercise 1",
    "section": "2.2 Loading Data",
    "text": "2.2 Loading Data\nThe dataset used in this analysis is sourced from the Armed Conflict Location & Event Data (ACLED) database. It contains information on various types of armed conflict events, including Battles, Explosion/Remote violence, Strategic developments, Protest, Riots, and Violence against civilians. The data covers the period from January 2021 to June 2024 and provides specific details such as event date, location coordinates, actor information, and more.\n\n# Read CSV files\nacled_2021_23 &lt;- read_csv(\"data/aspatial/2021-2023-Myanmar.csv\")\nacled_2024 &lt;- read_csv(\"data/aspatial/2024-Myanmar.csv\")\n\nNext we load Myanmar District and State Boundary from Myanmar Information Management Unit (MIMU) and projected onto the correct CRS.\n\n# Read Myanmar Boundary\nmym_sf &lt;- st_read(dsn = \"data/geospatial\", \n                      layer = \"mmr_polbnda_adm2_250k_mimu\") %&gt;%\n              st_transform(crs = 32647)\n\nReading layer `mmr_polbnda_adm2_250k_mimu' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/take-home_ex/ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 80 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\nmym_st_sf &lt;- st_read(dsn = \"data/geospatial\", \n                      layer = \"mmr_polbnda_adm1_250k_mimu_1\") %&gt;%\n              st_transform(crs = 32647)\n\nReading layer `mmr_polbnda_adm1_250k_mimu_1' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/take-home_ex/ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 15 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#crs-projection-formatting",
    "href": "take-home_ex/ex01/th_ex01.html#crs-projection-formatting",
    "title": "Take-home Exercise 1",
    "section": "3.1 CRS Projection & Formatting",
    "text": "3.1 CRS Projection & Formatting\nThe initial step involved reading the ACLED data into R and converting it into a sf data frame, specifying the longitude and latitude columns as coordinates and the WGS84 coordinate reference system (CRS). To ensure consistency with the administrative boundary data, the CRS was projected to EPSG:32647.\nAdditional data cleaning and preparation steps were performed, including handling missing values and formatting dates.\n\n# Combine data frames\nacled_combined &lt;- bind_rows(acled_2021_23, acled_2024)\n\nacled_full_sf &lt;- acled_combined %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;%\n  st_transform(crs = 32647) %&gt;%\n  mutate(event_date = dmy(event_date))"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#data-cleaning",
    "href": "take-home_ex/ex01/th_ex01.html#data-cleaning",
    "title": "Take-home Exercise 1",
    "section": "3.2 Data Cleaning",
    "text": "3.2 Data Cleaning\nWe conducted a preliminary data quality check on our key spatial features to ensure data integrity. While no missing values were found in the columns, we did identify duplicate geometries. This is not unexpected, as the data represents a time series, and multiple events may occur in the same location over time.\n\n# Check for null values in key columns\nna_count &lt;- acled_full_sf %&gt;%\n  summarise(na_geometry = sum(is.na(geometry)),\n            na_event_date = sum(is.na(event_date)))\n\n# Check for null values in key columns\nduplicate_count &lt;- acled_full_sf %&gt;%\n  summarise(duplicate_event_id = sum(duplicated(event_id_cnty)),\n            duplicate_geometry = sum(duplicated(geometry)))\n\nprint(na_count)\n\nSimple feature collection with 1 feature and 2 fields\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: -208804.4 ymin: 1103500 xmax: 640934.5 ymax: 3042960\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 1 × 3\n  na_geometry na_event_date                                             geometry\n        &lt;int&gt;         &lt;int&gt;                                     &lt;MULTIPOINT [m]&gt;\n1           0             0 ((-208804.4 2357274), (-207135 2358896), (-206931.7…\n\nprint(duplicate_count)\n\nSimple feature collection with 1 feature and 2 fields\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: -208804.4 ymin: 1103500 xmax: 640934.5 ymax: 3042960\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 1 × 3\n  duplicate_event_id duplicate_geometry                                 geometry\n               &lt;int&gt;              &lt;int&gt;                         &lt;MULTIPOINT [m]&gt;\n1                  0              44101 ((-208804.4 2357274), (-207135 2358896)…"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#data-wrangling",
    "href": "take-home_ex/ex01/th_ex01.html#data-wrangling",
    "title": "Take-home Exercise 1",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\nTo prepare our dataframe for subsequent geoprocessing, we performed necessary data joining and processing steps. We then saved the processed state of the dataframe for future reference and analysis.\n\n3.3.1 Joining with District Data\nWe will start by adding the district and state into our acled_sf dataframe using a spatial join\n\nacled_sf &lt;- st_join(acled_full_sf, mym_sf) %&gt;%\n  dplyr::select(event_date, event_type, fatalities, ST, DT, admin1, geometry) %&gt;%\n  rename(state = ST, district = DT)\n\n\n\n3.3.2 Missing Fields (State)\nUpon joining the dataframes, we observed that a small number of points were located outside the boundary dataframe. However, this is not a significant concern for our subsequent analysis, as we will be focusing on other states.\n\ndatatable(acled_sf %&gt;% \n        filter(is.na(state)) %&gt;%\n        dplyr::select(event_date, event_type, admin1)\n      )\n\n\n\n\n\n\n\n3.3.3 Adding Quarter and Saving RDS\nWe will also be extracting out the quarters and years for our subsequent analysis.\n\nacled_sf &lt;- acled_sf %&gt;%\n  mutate(quarter = quarter(event_date, with_year = TRUE)) %&gt;%\n  mutate(year = year(event_date)) %&gt;%\n  dplyr::select(-admin1)\n\nacled_sf\n\nSimple feature collection with 51553 features and 7 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -208804.4 ymin: 1103500 xmax: 640934.5 ymax: 3042960\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 51,553 × 8\n   event_date event_type     fatalities state district            geometry\n   &lt;date&gt;     &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;            &lt;POINT [m]&gt;\n 1 2023-12-31 Explosions/Re…          0 Mon   Mawlamy…  (393190.2 1690159)\n 2 2023-12-31 Explosions/Re…          0 Rakh… Maungdaw (-183852.6 2305258)\n 3 2023-12-31 Battles                 4 Bago… Thayarw…    (165427 2062239)\n 4 2023-12-31 Strategic dev…          0 Bago… Thayarw…    (165427 2062239)\n 5 2023-12-31 Explosions/Re…          1 Saga… Katha     (202852.5 2640880)\n 6 2023-12-31 Battles                 0 Shan… Muse      (391530.9 2594611)\n 7 2023-12-31 Explosions/Re…          0 Mon   Mawlamy…  (391095.1 1692216)\n 8 2023-12-31 Battles                 1 Saga… Monywa    (115044.9 2432742)\n 9 2023-12-31 Violence agai…          1 Saga… Kanbalu   (153264.2 2542964)\n10 2023-12-31 Violence agai…          1 Mon   Thaton    (335571.8 1837874)\n# ℹ 51,543 more rows\n# ℹ 2 more variables: quarter &lt;dbl&gt;, year &lt;dbl&gt;\n\n\n\n\n3.3.4 Saving sf Dataframe\nNext we store the processed sf dataframe as rds for subsequent usage.\n\nwrite_rds(acled_sf, \"data/rds/acled_sf.rds\")\nwrite_rds(mym_sf, \"data/rds/mym_sf.rds\")\nwrite_rds(mym_st_sf, \"data/rds/mym_st_sf.rds\")"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#selecting-area-of-study",
    "href": "take-home_ex/ex01/th_ex01.html#selecting-area-of-study",
    "title": "Take-home Exercise 1",
    "section": "4.1 Selecting Area of Study",
    "text": "4.1 Selecting Area of Study\nTo identify suitable areas for in-depth analysis, we examined the overall distribution of conflict events across Myanmar. This initial exploration helped us select regions of particular interest for further investigation.\n\n4.1.1 Overall Distribution (Points)\nOur initial visualization of conflict events on the map of Myanmar revealed distinct clusters around the central regions of Sagaing, Mandalay, and Magway. This observation suggests that these areas may have experienced higher concentrations of conflict activity.\n\nstate_m &lt;- tm_shape(mym_st_sf) +\n  tm_polygons() +\n  tm_text(\"ST\", size = 0.5) +\n  tm_layout(title = \"State\")\n\ndistribution_m &lt;- tm_shape(mym_st_sf) +\n  tm_polygons() +\n  tm_shape(acled_sf) +\n  tm_dots(col = \"red\", alpha = 0.03, size = 0.01) +\n  tm_layout(title = \"Distribution\")\n\ntmap_arrange(state_m, distribution_m, asp = 1, ncol = 2)\n\n\n\n\n\n\n\n\n\n\n4.1.2 Overall Distribution (Districts)\nTo further validate our previous observations, we created a choropleth map to visualize the spatial distribution of conflict events. This map confirmed the concentration of conflict activity in the central states.\n\nacled_by_district &lt;- acled_sf %&gt;%\n  group_by(district) %&gt;%\n  summarize(event_count = n())\n\n# Join the event count data with the region polygon data\njoined_data &lt;- st_join(mym_sf, acled_by_district)\n\nchoropleth_m &lt;- tm_shape(joined_data) +\n  tm_polygons(col = \"event_count\", style = \"jenks\", palette = \"YlOrRd\") +\n  tm_layout(title = \"Event Count\")\n\ntmap_arrange(state_m, choropleth_m, asp = 1, ncol = 2)\n\n\n\n\n\n\n\n\n\n\n4.1.3 Event Count by State\nThe following datatables shows that over the four-year period, Sagaing, Mandalay, and Magway experienced the highest number of conflict events.\n\nsummary_table &lt;- acled_sf %&gt;%\n  st_drop_geometry() %&gt;% # Remove geometry for faster processing\n  group_by(state) %&gt;%\n  tally(name = \"event_count\") %&gt;%\n  arrange(desc(event_count))\n\ndatatable(summary_table)\n\n\n\n\n\n\n\n\n\n\n\nSelected State\n\n\n\nWhile Sagaing and Mandalay have received significant attention due to their higher levels of conflict and population density, we have chosen to focus our analysis on Magway. This state offers a unique perspective due to its diverse ethnic composition, including Chin, Rakhine, Shan, and Karen populations. By examining Magway, we can gain valuable insights into the potential spillover effects from neighboring conflict zones and conduct a more in-depth analysis of the state’s internal dynamics."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#viewing-the-timeline",
    "href": "take-home_ex/ex01/th_ex01.html#viewing-the-timeline",
    "title": "Take-home Exercise 1",
    "section": "4.2 Viewing the timeline",
    "text": "4.2 Viewing the timeline\nTo understand the temporal dynamics of conflict and its spatial distribution, we will analyze the data for the selected states. Before proceeding, we will partition the conflict and boundary dataframes into three groups: the three states of interest and Magway alone. This separation will allow us to focus on specific regions and analyze their unique characteristics.\n\n# Filter for Magway Surrounding Neigbours\nacled_msm_sf &lt;- acled_sf %&gt;%\n  filter(state %in% c(\"Magway\", \"Sagaing\", \"Mandalay\"))\n\nmsm_sf &lt;- mym_st_sf %&gt;%\n  filter(ST %in% c(\"Magway\", \"Sagaing\", \"Mandalay\"))\n\n# Filter for \"Magway\" in both data frames\nacled_sf &lt;- acled_sf %&gt;%\n  filter(state == \"Magway\")\n\nmagway_sf &lt;- mym_sf %&gt;%\n  filter(ST == \"Magway\")\n\n\n4.2.1 Histogram of Events (Magway)\nFrom the histogram of event types reveals that the events were initially dominated by protests, the frequency of battles has steadily increased, while protests have declined. Although the overall number of conflict events has shown a general downward trend since its peak in 2022, battles currently constitute the majority of incidents.\n\nggplot(acled_sf, aes(x = event_date, fill = event_type)) +\n  geom_histogram(binwidth = 15, position = \"stack\") +\n  scale_fill_brewer(palette = \"Spectral\") +\n  labs(title = \"Stacked Histogram of Event Dates by Event Type\",\n       x = \"Event Date\",\n       y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n4.2.2 Distribution of Events (Magway)\nOur pie charts further validates the observation that protests were more prevalent at the beginning of the time period, while battles have become more frequent in recent months. This shift in the composition of conflict events highlights the evolving dynamics of the conflict.\n\n# Filter data by year\nyear_acled_sf &lt;- list()\nfor (yr in 2021:2024) {\n  year_acled_sf[[yr - 2020]] &lt;- acled_sf %&gt;% filter(year == yr)\n}\n\n# Create pie charts for each year\netc_plot &lt;- list()\nyr&lt;-0\nfor (year_acled in year_acled_sf) {\n  yr&lt;-yr+1\n  etc_plot[[yr]] &lt;- ggplot(year_acled  %&gt;% count(event_type), aes(x = \"\", y = n, fill = event_type)) +\n  geom_bar(stat = \"identity\", color = \"white\") +\n  geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +\n  coord_polar(theta = \"y\") +\n  scale_fill_brewer(palette = \"Spectral\") +\n  labs(title = as.character(yr+2020)) +\n  theme_void()\n}\n\n# Arrange the charts in a 2x2 grid\ngrid.arrange(etc_plot[[1]], etc_plot[[2]], etc_plot[[3]], etc_plot[[4]], ncol = 2)\n\n\n\n\n\n\n\n\nWe can also see in following majoritiy of the events occur on the northern border with Sagaing.\n\nmagway_plot &lt;- list()\n\nyr&lt;-0\nfor (year_acled in year_acled_sf) {\n  yr &lt;- yr + 1\n  magway_plot[[yr]] &lt;- tm_shape(magway_sf) +\n  tm_polygons() +\n  tm_shape(year_acled) +\n  tm_dots(col = \"event_type\", alpha = 0.5, size = 0.1, palette = \"Spectral\") +\n  tm_layout(title = paste(\"Events \", as.character(yr + 2020)))\n}\n\ntmap_arrange(magway_plot, asp = 2, nrow = 2, ncol = 2)"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#eventfatalities-insights",
    "href": "take-home_ex/ex01/th_ex01.html#eventfatalities-insights",
    "title": "Take-home Exercise 1",
    "section": "4.3 Event/Fatalities Insights",
    "text": "4.3 Event/Fatalities Insights\nOur boxplot also suggests that battles are associated with the highest number of fatalities, while protests generally have lower fatality counts.\n\nggplot(acled_sf, aes(x = event_type, y = fatalities)) +\n  geom_boxplot(color = \"darkorange\") +\n  labs(title = \"Relationship Between Fatalities and Event Type\",\n       x = \"Event Type\",\n       y = \"Fatalities\") +\n  coord_flip() +\n  theme(axis.text.y = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelection of Event Type\n\n\n\nGiven the distinct patterns observed in fatalities and the development of event types, we will focus our subsequent analysis on Battles, Explosions, Violence against Civilians, and Protests."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#preparation",
    "href": "take-home_ex/ex01/th_ex01.html#preparation",
    "title": "Take-home Exercise 1",
    "section": "5.1 Preparation",
    "text": "5.1 Preparation\nTo streamline our analysis, we have created reusable functions for common tasks. These functions facilitate the conversion of data to ppp format, confinement to specific regions, jittering for spatial randomness, rescaling, and the transformation of KDE results into raster format.\n\n5.1.1 Convert and Rescale\nIn this function we perform the following: 1. Convert event sf to ppp 2. Convert boundary sf to ppp 3. Jitter any duplicates (If any) 4. Rescale from m to km\n\nrescale_ppp_km &lt;- function(ppp_sf, owin_sf) {\n  # Converting sf to ppp\n  ppp &lt;- as.ppp(ppp_sf)\n  \n  # Converting sf to owin\n  owin &lt;- as.owin(owin_sf %&gt;% st_union())\n  \n  # Apply jitter duplicate exist\n  if (any(duplicated(ppp))) {\n    ppp &lt;- rjitter(ppp,\n                   retry = TRUE,\n                   nsimm = 1,\n                   drop = TRUE)\n  }\n\n  # Confine and rescale ppp\n  return(rescale(ppp[owin], 1000, \"km\"))\n}\n\n\n\n5.1.2 Convert KDE to Raster\n\nkde_to_raster &lt;- function(kde) {\n  kde_raster &lt;- raster(as.SpatialGridDataFrame.im(kde))\n  projection(kde_raster) &lt;- CRS(\"+init=EPSG:32647\")\n  return(kde_raster)\n}\n\n\n\n5.1.3 Prepping PPP\nNext lets prep the ppp objects for later use\n\n5.1.3.1 Magway\n\nPPPMap Boundary\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_sf, magway_sf)\n\nplot(acled_ppp_km)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = magway_sf) +\n  geom_sf(fill = \"lightblue\") +\n  geom_sf_label(aes(label = DT), size = 3, repel = TRUE) +\n  labs(title = \"District Boundaries\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.1.3.2 Magway, Sagaing & Mandalay\n\nPPPMap Boundary\n\n\n\nacled_msm_ppp_km &lt;- rescale_ppp_km(acled_msm_sf, msm_sf)\n\nplot(acled_msm_ppp_km)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = msm_sf) +\n  geom_sf(fill = \"lightblue\") +\n  geom_sf_label(aes(label = ST), size = 3, repel = TRUE) +\n  labs(title = \"State Boundaries\") +\n  theme_bw()"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#first-order-analysis",
    "href": "take-home_ex/ex01/th_ex01.html#first-order-analysis",
    "title": "Take-home Exercise 1",
    "section": "5.2 First Order Analysis",
    "text": "5.2 First Order Analysis\nOur initial analysis focuses on visualizing the spatial distribution of conflict events on inter-state, state and district level, across the time and event types using the density from the Spatstat package to derive the kernel density of area of study\n\n5.2.1 Picking a Density BW\nWe will be starting with finding a suitable Bandwidth for our data. As the area of study is large, making point events sparse, the bandwidth needs to be carefully considered for the best representation.\n\nPPLScottAdaptiveManual (10km)\n\n\n\nacled_ppp_kde_ppl = density(acled_ppp_km, \n                        sigma = bw.ppl, \n                        edge = TRUE, \n                        kernel = \"gaussian\")\n\nplot(acled_ppp_kde_ppl, main = \"PPL bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\nacled_ppp_kde_scott = density(acled_ppp_km, \n                        sigma = bw.scott,\n                        edge = TRUE, \n                        kernel = \"gaussian\")\n\nplot(acled_ppp_kde_scott, main = \"Scott bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\nacled_ppp_kde_adaptive &lt;- adaptive.density(acled_ppp_km, method=\"kernel\")\n\nplot(acled_ppp_kde_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\nacled_ppp_kde_man = density(acled_ppp_km, \n                        sigma = 10,\n                        edge = TRUE, \n                        kernel = \"gaussian\")\n\nplot(acled_ppp_kde_man, main = \"Manual bandwidth (10km)\")\n\n\n\n\n\n\n\n\n\n\n\nGiven the relatively sparse distribution of points within our study area, a manual bandwidth of 10km is deemed appropriate for the kernel density estimation. This bandwidth setting provides a suitable balance between capturing spatial patterns and avoiding excessive smoothing\n\n\n5.2.2 Inter-state Spatial Relations\nTo understand the potential influence of neighboring states on conflict dynamics within Magway, we will conduct a spatial analysis using a bandwidth of 15km, reflecting the larger geographical extent involved. This analysis will help us identify any spillover effects or sequential patterns of conflict across borders.\n\nkde_results &lt;- list()\nfor (yr in 2021:2024) {\n  acled_msm_ppp_km &lt;- rescale_ppp_km(acled_msm_sf %&gt;% filter(year == yr), msm_sf)\n  acled_msm_ppp_kde &lt;- density(acled_msm_ppp_km, sigma = 15, edge = TRUE, kernel = \"gaussian\")\n  kde_results[[yr - 2020]] &lt;- acled_msm_ppp_kde\n}\n\npar(mfrow=c(1,5), mar=c(1,1,1,1))\nyr &lt;- 2020\nfor (res in kde_results) {\n  yr &lt;- yr + 1\n  plot(res, main = as.character(yr))\n}\n\nplot(st_geometry(msm_sf), col = \"lightblue\", main = \"State\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nNotice the initial clusters forming in Mandalay. Subsequently, the clusters within Sagaing expanded towards the border between with Magway, eventually spilling over into Magway. Suggesting a strong influence of neighboring regions on conflict dynamics within Magway.\n\n\n\n\n5.2.3 State Analysis (Magway)\nNext we will delve into the state level, by exploring spatial patterns within Magway’s districts, we can identify areas of high concentration, potential hotspots, and the evolution of conflict over quarter\n\n5.2.3.1 Quarterly KDE (Magway)\nAt a closer look we can observe the events tend to form hotspots closer to the border with Sagaing.\n\nunique_quarters &lt;- unique(acled_sf$quarter) %&gt;% sort()\n\n# Create an empty list to store KDE results\nquart_kde_results &lt;- list()\n\n# Iterate through unique quarters\nq &lt;- 0\nfor (quart in unique_quarters) {\n  q &lt;- q + 1\n  acled_ppp_km &lt;- rescale_ppp_km(acled_sf %&gt;% filter(quarter == quart), magway_sf)\n  acled_ppp_kde &lt;- density(acled_ppp_km, sigma = 15, edge = TRUE, kernel = \"gaussian\")\n  quart_kde_results[[q]] &lt;- acled_ppp_kde\n}\n\n\npar(mfrow=c(4,4), mar=c(1,1,1,1))\n# Create a data frame for plotting\ni &lt;- 0\nfor (res in quart_kde_results) {\n  i &lt;- i + 1\n  r &lt;- ifelse(i %% 4 == 0, 4, i %% 4)\n  plot(res, \n       override.par = F,\n       fix.range = T,\n       main = paste(as.character(2021+as.integer((i-1)/4)), \"Q\", r))\n}\n\n\n\n\n\n\n\n\n\n\n5.2.3.2 Summary by district\nThe following are the summary statistics of the districts in Magway by Year, Event type and Year-Event type. Of all districts the one worst affected is Pakokku\n\nYearlyEvent TypeYearly by Event\n\n\n\n# Group by district, year, and event_type, then count events\nacled_grouped &lt;- acled_sf %&gt;%\n  st_drop_geometry() %&gt;% \n  group_by(district, year) %&gt;%\n  summarize(count = n()) %&gt;%\n  pivot_wider(names_from = year, values_from = count, values_fill = 0)\n\n# Create a data table\ndatatable(acled_grouped)\n\n\n\n\n\n\n\n\n# Group by district, year, and event_type, then count events\nacled_grouped &lt;- acled_sf %&gt;%\n  st_drop_geometry() %&gt;% \n  group_by(district, event_type) %&gt;%\n  summarize(count = n()) %&gt;%\n  pivot_wider(names_from = event_type, values_from = count, values_fill = 0)\n\n# Create a data table\ndatatable(acled_grouped)\n\n\n\n\n\n\n\n\n# Group by district, year, and event_type, then count events\nacled_grouped &lt;- acled_sf %&gt;%\n  st_drop_geometry() %&gt;% \n  group_by(district, year, event_type) %&gt;%\n  summarize(count = n()) %&gt;%\n  pivot_wider(names_from = c(year, event_type), values_from = count, values_fill = 0)\n\n# Create a data table\ndatatable(acled_grouped)\n\n\n\n\n\n\n\n\n\n\n\n5.2.4 District Analysis (Pakokku)\nGiven the severe nature of conflict in Pakokku, we will focus our subsequent analysis on this district. By examining Pakokku in detail, we can gain valuable insights into the factors driving intense conflict.\n\n5.2.4.1 Prepare Pakokku sf\n\n# Filter for \"Pakokku\" in both data frames\nacled_pak_sf &lt;- acled_sf %&gt;%\n  filter(district == \"Pakokku\")\nmagway_pak_sf &lt;- mym_sf %&gt;%\n  filter(DT == \"Pakokku\")\n\n\n\n5.2.4.1 Quadrant Count\nSplitting Pakokku into 10x10, we can start by looking a the Quadrat count of where the events mostly occur, in this case we can obseve higher counts in the center as well as long the eastern boundary.\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% dplyr::select(year, geometry), magway_pak_sf)\nquadrat_counts &lt;- quadratcount(acled_ppp_km, nx=10, ny=10)\n\nplot(quadrat_counts, main = \"Quadrat Counts\")\n\n\n\n\n\n\n\n\n\n\n5.2.4.2 Yearly Event Type KDE (Pakokku)\nHere we compare the event types over the years in Pakokku, each row representing an event type: 1. Protests 2. Explosions/Remote violence 3. Battles 4. Violence against civilians\n\net_kde_results &lt;- list()\nevent_types &lt;- list(\"Protests\", \"Explosions/Remote violence\", \"Battles\", \"Violence against civilians\")\nq &lt;- 0\n\n# Iterate through the list\nfor (et in event_types) {\n  for (yr in 2021:2024) {\n    q &lt;- q + 1\n    acled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == yr & event_type == et), magway_pak_sf)\n    acled_ppp_kde &lt;- density(acled_ppp_km, sigma = 5, edge = TRUE, kernel = \"gaussian\")\n    et_kde_results[[q]] &lt;- acled_ppp_kde\n  }\n}\n\n# TODO: same as above replot\npar(mfrow=c(4,4), mar=c(1,1,1,2))\n# Create a data frame for plotting\ni &lt;- 0\nfor (res in et_kde_results) {\n  i &lt;- i + 1\n  r &lt;- ifelse(i %% 4 == 0, 4, i %% 4)\n  plot(res, main = as.character(2020 + r))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEvent Type Findings\n\n\n\n\nProtests tend to be concentrated in urban areas\nExplosions and battles frequently occur near the outskirts of the city and towns\nViolence against civilians, on the other hand, is primarily concentrated in rural areas outside the city boundaries."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#second-order-analysis",
    "href": "take-home_ex/ex01/th_ex01.html#second-order-analysis",
    "title": "Take-home Exercise 1",
    "section": "5.3 Second Order Analysis",
    "text": "5.3 Second Order Analysis\nTo gain a deeper understanding of the spatial distribution of conflict events within Pakokku, we will conduct a second-order spatial analysis using the Clark-Evans test and Ripley’s K function. Before delving into these analyses, let’s examine the types of events that occurred in Pakokku across different quarters.\n\n# Group by district, year, and event_type, then count events\nacled_pak_grouped &lt;- acled_pak_sf %&gt;%\n  st_drop_geometry() %&gt;% \n  group_by(event_type, quarter) %&gt;%\n  summarize(count = n()) %&gt;%\n  pivot_wider(names_from = quarter, values_from = count, values_fill = 0, names_sort = TRUE)\n\n# Create a data table\ndatatable(acled_pak_grouped)\n\n\n\n\n\n\n5.3.1 Clark Evan Test\nBy employing the Clark-Evans test, we can assess whether the spatial distribution of conflict events within Pakokku deviates from complete spatial randomness. This analysis will help us identify any clustering or dispersion patterns that may exist. - H0: The distribution of events in Pakokku are randomly distributed. - H1: The distribution of events in Pakokku are not randomly distributed. - The 95% confident interval will be used.\n\nProtestsExplosionsBattlesViolence\n\n\n\n# Iterate through the list\nclarkevans.test(rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Protests\"), magway_pak_sf),\n            correction = \"none\",\n            alternative = c(\"clustered\"),\n            nsim = 999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Protests\"), \nR = 0.092082, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nProtests: R &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n# Iterate through the list\nclarkevans.test(rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Explosions/Remote violence\"), magway_pak_sf),\n            correction = \"none\",\n            alternative = c(\"clustered\"),\n            nsim = 999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Explosions/Remote violence\"), \nR = 0.36424, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nExplosions/Remote violence: R &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n# Iterate through the list\nclarkevans.test(rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Battles\"), magway_pak_sf),\n            correction = \"none\",\n            alternative = c(\"clustered\"),\n            nsim = 999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Battles\"), \nR = 0.34248, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nBattles: R &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n# Iterate through the list\nclarkevans.test(rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Violence against civilians\"), magway_pak_sf),\n            correction = \"none\",\n            alternative = c(\"clustered\"),\n            nsim = 999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Violence against civilians\"), \nR = 0.50772, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nViolence against civilians: R &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n\n\n\n\n\n\nUnderstanding High Clustering\n\n\n\n\nIncreased Intensity: Clusters of conflict events often indicate areas of heightened intensity. Concentrated violence can lead to greater casualties, displacement, and destruction of infrastructure.\nStrategic Considerations: Armed groups may strategically target specific areas for tactical advantages or to exert control over key resources.\nSpillover Effects: High clustering in one area can increase the risk of conflict spreading to neighboring regions. This is especially true if the conflict involves armed groups with territorial ambitions.\n\nGiven the observed shift from protests to battles over time, I am particularly interested in exploring the relationship between these two types of events. We will be using this 2 events for our subsequent analysis.\n\n\n\n\n5.3.2 G Function Analysis\nTo better appreciate the clustering we can start by visualizing on G function help us identify any clustering or dispersion patterns that may exist, providing valuable insights into the underlying dynamics of conflict in the region. Subsequently we will also be using the other variants of the Ripley’s K Function to determine spatial auto correlations, here are their uses: - G function: Measures the probability of finding a point within a given distance of another point. - K function: Measures the average number of points within a given distance of a randomly chosen point. - L function: A transformation of the K function that makes it easier to interpret. - F function: Measures the distribution of distances between pairs of points.\n\nBattlesBattles\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Battles\"), magway_pak_sf)\nG.csr &lt;- envelope(acled_ppp_km, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(G.csr, xlab = \"Dist (km)\", ylab = \"G(r)\", main = \"G-Function (Battles)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nThese observations suggest that there is a strong tendency for points to cluster within a distance of 6km. The rapid increase in the G function at shorter distances indicates a high degree of clustering within the first 6km. However, the slower increase beyond 8km suggests that the clustering effect might be weakening at larger distances.\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Protests\"), magway_pak_sf)\nG.csr &lt;- envelope(acled_ppp_km, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(G.csr, xlab = \"Dist (km)\", ylab = \"G(r)\", main = \"G-Function (Protests)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nThe observed G function steadily increasing suggests a clustering pattern for protests. This means that the probability of finding another protest within a given distance of a protest increases as the distance increases. Unlike battles which often involve larger-scale operations that can extend over wider areas, Protests tend to be more localized events, often concentrated in specific areas or near particular targets. This is why the G function for battles might have a larger range, indicating that points (events) can be found at greater distances from each other.\n\n\n\n\n\n5.3.3 K-Function Analysis\nTo ensure our observation is consistent we will use K Function to provide further insights into the spatial distribution of conflict events and help confirm our findings from the G function.\n\nBattlesProtests\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Battles\"), magway_pak_sf)\nK.csr &lt;- envelope(acled_ppp_km, Kest, nsim = 50)\n\nGenerating 50 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, \n50.\n\nDone.\n\nplot(K.csr, xlab = \"Dist (km)\", ylab = \"K(r)\", main = \"K-Function (Battles)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nSimilarly here we can observe the strong tendency for points to cluster on the on start up until 20+ km as it slowly converges with the envelope toward 25 km\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Protests\"), magway_pak_sf)\nK.csr &lt;- envelope(acled_ppp_km, Kest, nsim = 50)\n\nGenerating 50 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, \n50.\n\nDone.\n\nplot(K.csr, xlab = \"Dist (km)\", ylab = \"K(r)\", main = \"K-Function (Protests)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nThe K function for protest potrays even more pronounced clustering pattern for protests. The K function indicates a highly localized and intense concentration of protest events within a small radius.\n\n\n\nFrom the above observation we can confirm that our findings from\n\n\n\n\n\n\nUnderstanding Ripley’s K Function\n\n\n\n\nThe solid line represents the observed K function. - If K(r) is above the envelope, it indicates clustering (points are closer together than expected by chance). - If K(r) is below the envelope, it indicates dispersion (points are farther apart than expected by chance). - If K(r) is within the envelope, it suggests a random pattern.\nEnvelope: The envelope is generated by simulating random point patterns under the assumption of CSR. If the observed K function falls outside the envelope, it suggests a significant deviation from randomness.\nDotted line through the center: This line represents the theoretical K function under complete spatial randomness. It serves as a benchmark for comparison with the observed K function.\n\n\n\n\n\n\n5.3.3 L-Function Analysis\nTo view the K-Function more intuitively we will employ the L function. This transformation of the K function will provide a clearer visualization of the clustering patterns observed in the data.\n\nBattlesProtests\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Battles\"), magway_pak_sf)\nL.csr &lt;- envelope(acled_ppp_km, Lest, nsim = 50)\n\nGenerating 50 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, \n50.\n\nDone.\n\nplot(L.csr , . - r ~ r, xlab=\"Dist (km)\", ylab=\"L(r)-r\", main = \"L-Function (Battles)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Protests\"), magway_pak_sf)\nL.csr &lt;- envelope(acled_ppp_km, Lest, nsim = 50)\n\nGenerating 50 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, \n50.\n\nDone.\n\nplot(L.csr , . - r ~ r, xlab=\"Dist (km)\", ylab=\"L(r)-r\", main = \"L-Function (Protests)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.3.4 F-Function Analysis\nTo further validate our observation, we will employ the F function as complementary analysis. Which measures the distribution of distances between pairs of points.\n\nBattlesProtests\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Battles\"), magway_pak_sf)\nK.csr &lt;- envelope(acled_ppp_km, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(K.csr, xlab = \"Dist (km)\", ylab = \"F(r)\", main = \"F-Function (Battles)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nThis suggests that the observed distances between points are smaller than expected under complete spatial randomness. In other words, there is evidence of clustering in the data. The degree of clustering can be assessed by how far below the dotted line the F function curve lies.\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Protests\"), magway_pak_sf)\nK.csr &lt;- envelope(acled_ppp_km, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(K.csr, xlab = \"Dist (km)\", ylab = \"F(r)\", main = \"F-Function (Protests)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nSimilar observation as with Battles but with a more less steep observation line, indicating more intense clustering."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#overview-by-quarter",
    "href": "take-home_ex/ex01/th_ex01.html#overview-by-quarter",
    "title": "Take-home Exercise 1",
    "section": "6.1 Overview by Quarter",
    "text": "6.1 Overview by Quarter\n\ntm_shape(magway_pak_sf) + tm_polygons() +\n  tm_shape(acled_pak_sf) + tm_dots(size = 0.1, alpha = 0.5, col = \"red\") +\n  tm_facets(by=\"quarter\",\n            free.coords = F,\n            drop.units = T)"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#compute-st-density-by-event_type",
    "href": "take-home_ex/ex01/th_ex01.html#compute-st-density-by-event_type",
    "title": "Take-home Exercise 1",
    "section": "6.2 Compute ST Density by Event_type",
    "text": "6.2 Compute ST Density by Event_type\nWe start by preparing our sf with our quarter id to be used with the spattemp.density of the sparr for our spatial temporal analysis.\n\nacled_pak_sf &lt;- acled_pak_sf %&gt;%\n  mutate(quarter_id = ((year - 2021) * 4) + ((quarter %% 1) * 10))\n\n\nBattlesProtests\n\n\n\npak_ppp_owin &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Battles\") %&gt;% dplyr::select(quarter_id, geometry), magway_pak_sf)\n\nst_kde &lt;- sparr::spattemp.density(pak_ppp_owin)\nsummary(st_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 8.5989 (spatial)\n  lambda = 0.088 (temporal)\n\nNo. of observations\n  677 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [8.367469, 121.1188] x [2310.08, 2425.057]\n\nTemporal bound\n  [2, 15]\n\nEvaluation\n  128 x 128 x 14 trivariate lattice\n  Density range: [2.248839e-36, 0.0005999062]\n\n\n\ntims &lt;- seq(2, 14)\npar(mfcol = c(4,4), mar = c(2, 2, 2, 2))\nfor(i in tims) {\n  plot(st_kde, i,\n       override.par = F,\n       fix.range = F,\n       main=paste(\"KDE: \",i))\n  }\n\n\n\n\n\n\n\n\nWe can observe over the quarters (less 2021 Q1) the Battles are spread out around the northern sector of Pakokku\n\n\n\npak_ppp_owin &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Protests\") %&gt;% dplyr::select(quarter_id, geometry), magway_pak_sf)\n\nst_kde &lt;- sparr::spattemp.density(pak_ppp_owin)\nsummary(st_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 6.7531 (spatial)\n  lambda = 0.0836 (temporal)\n\nNo. of observations\n  212 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [8.367469, 121.1188] x [2310.08, 2425.057]\n\nTemporal bound\n  [0, 15]\n\nEvaluation\n  128 x 128 x 16 trivariate lattice\n  Density range: [3.261449e-77, 0.004421199]\n\n\n\ntims &lt;- seq(2, 14)\npar(mfcol = c(4,4), mar = c(2, 2, 2, 2))\nfor(i in tims) {\n  plot(st_kde, i,\n       override.par = F,\n       fix.range = F,\n       main=paste(\"KDE: \",i))\n  }\n\n\n\n\n\n\n\n\nWhereas the Protests is observed to remain localized and consistent in towns and cities."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#animating-events-battles",
    "href": "take-home_ex/ex01/th_ex01.html#animating-events-battles",
    "title": "Take-home Exercise 1",
    "section": "6.3 Animating Events (Battles)",
    "text": "6.3 Animating Events (Battles)\nThe Spatial Temporal Diffusion for Battles is animated with the following code, which generates and MP4, subsequently converted into a Gif\n\n#! ouptput: false\n# pak_ppp_owin &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Battles\") %&gt;% dplyr::select(quarter_id, geometry), magway_pak_sf)\n\n# hlam &lt;- LIK.spattemp(pak_ppp_owin)\n# f.breve &lt;- spattemp.density(pak_ppp_owin, h=hlam[1], lambda=hlam[2], tlim=c(1,14))\n# g.tilde &lt;- bivariate.density(pak_ppp_owin, h0=hlam[1])\n# rho.breve &lt;- spattemp.risk(f=f.breve,g=g.tilde, tolerate=TRUE)\n\n# colpal &lt;- spatstat.options(\"image.colfun\")\n# fmdcolours &lt;- colourmap(colpal(128),breaks=c(-80,seq(-7,4,length=128)))\n# mytimes &lt;- 1:14\n# animation::saveVideo(\n#  for(i in 1:length(mytimes)){\n#    plot(rho.breve,tselect=mytimes[i],type=\"conditional\",col=fmdcolours,\n#         tol.args=list(levels=c(0.05,0.0001),lty=2:1,drawlabels=FALSE),\n#         sleep=0,override.par=FALSE)\n#    title(xlab=\"Easting\",ylab=\"Northing\")\n#  },\n#  video.name=\"fmd_protests.mp4\", other.opts = '-b:v 1M -pix_fmt yuv420p', ani.width=640, ani.height=640, interval=1/4)\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe above code chunk is commented to prevent execution as it requires ffmpeg tool for running. Ensure you have the tool installed before running."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#visualizing-conflicts-on-osm",
    "href": "take-home_ex/ex01/th_ex01.html#visualizing-conflicts-on-osm",
    "title": "Take-home Exercise 1",
    "section": "7.1 Visualizing conflicts on OSM",
    "text": "7.1 Visualizing conflicts on OSM\nFor our OSM dimensions we will be working with the places layers which consists of towns and cities as well as the places of worship (POW). The data are retrieved from geofabrik for Myanmmar.\n\n7.1.1 Prepping OSM Data\nOSM data is loaded and crs transformed.\n\nosm_sf = st_read(\"data/geospatial/myanmar-latest-free.shp.zip\", layer=\"gis_osm_places_a_free_1\") %&gt;%\n  st_transform(crs = 32647)\n\nReading layer `gis_osm_places_a_free_1' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/take-home_ex/ex01/data/geospatial/myanmar-latest-free.shp.zip' \n  using driver `ESRI Shapefile'\nSimple feature collection with 10489 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.24155 ymin: 9.606004 xmax: 101.0663 ymax: 28.17021\nGeodetic CRS:  WGS 84\n\nosm_pow_sf = st_read(\"data/geospatial/myanmar-latest-free.shp.zip\", layer=\"gis_osm_pofw_free_1\") %&gt;%\n  st_transform(crs = 32647)\n\nReading layer `gis_osm_pofw_free_1' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/take-home_ex/ex01/data/geospatial/myanmar-latest-free.shp.zip' \n  using driver `ESRI Shapefile'\nSimple feature collection with 12083 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 92.16019 ymin: 9.95157 xmax: 100.9118 ymax: 27.39084\nGeodetic CRS:  WGS 84\n\n\n\n\n7.1.2 Visualizing Area of Study\nIn the following we take a look at the distribution of the places and POW across Magway.\n\nTowns and CityPlaces of Worship\n\n\nBy incorporating places data from OSM, we can identify areas with high population density and analyze their relationship to conflict events. This analysis will help us understand whether population concentration plays a role in shaping the spatial distribution of conflict\n\n# Create the distribution map with title and dots\nosm_mag_sf &lt;- st_intersection(osm_sf, magway_sf)\ntm_shape(magway_sf) +\n  tm_polygons() +\n  tm_shape(osm_mag_sf %&gt;% filter(fclass %in% c(\"town\", \"city\", \"suburb\"))) +\n  tm_bubbles(col = \"fclass\", alpha = 1, size = 0.1) +\n  tm_layout(title = \"Distribution\", title.position = c(\"right\", \"top\"))\n\n\n\n\n\n\n\n\nWithin Magway we can identify the Pakokku in blue, the largest city in the Magway Region of Myanmar. It is situated about 30 km northeast of Bagan on the Irrawaddy River with a population of 322,154.\n\n\nWhile our OSM data does not include ethnicity information, we can explore potential relationships between conflict events and places of worship. By analyzing the spatial proximity between conflict locations and religious sites, we may gain insights into the role of religious identity or affiliation in shaping conflict dynamics.\n\n# Create the distribution map with title and dots\nosm_pow_mag_sf &lt;- st_intersection(osm_pow_sf, magway_sf)\ntm_shape(magway_sf) +\n  tm_polygons() +\n  tm_shape(osm_pow_mag_sf) +\n  tm_bubbles(col = \"fclass\", alpha = 0.5, size = 0.1) +\n  tm_layout(title = \"Distribution\", title.position = c(\"right\", \"top\"))\n\n\n\n\n\n\n\n\nOther than a scatter of other religions in Minbu on the broder with Rakhine in the west the region is mostly dominated by Buddhism.\n\n\n\n\n\n7.1.3 KDE on OSM\nNext we will overlay the OSM points on our density plot to identify their spatial relations.\n\nacled_ppp_pro &lt;- as.ppp(acled_pak_sf %&gt;% filter(event_type == \"Protests\"))\nacled_ppp_bat &lt;- as.ppp(acled_pak_sf %&gt;% filter(event_type == \"Battles\"))\nmagway_owin &lt;- as.owin(magway_pak_sf %&gt;% st_union())\n\n\n7.1.3.1 Protests KDE\n\nacled_ppp_kde &lt;- density(acled_ppp_pro[magway_owin], sigma = 5000, edge = TRUE, kernel = \"gaussian\")\nacled_mag_raster &lt;- kde_to_raster(acled_ppp_kde)\n\npak_kde_raster &lt;- tm_shape(acled_mag_raster) +\n  tm_raster(alpha = 0.8, palette = \"YlOrRd\")\n\n\nTowns and CityPlaces of Worhsip\n\n\n\n# Assuming you have a RasterLayer object named 'my_raster'\nosm_pak_sf &lt;- st_intersection(osm_sf, magway_pak_sf)\ntm_shape(magway_pak_sf) +\n  tm_polygons(col = \"white\") +\n  pak_kde_raster +\n  tm_shape(osm_pak_sf %&gt;% filter(fclass %in% c(\"town\", \"city\"))) +\n  tm_bubbles(col = \"fclass\", alpha = 1, size = 0.2, palette = c(\"aquamarine\", \"cornflowerblue\")) + \n  tm_layout(title = \"Places (Protests)\", title.position = c(\"center\", \"top\")) \n\n\n\n\n\n\n\n\nAs observed the protests are mostly clustered around the city of Pakokku and the township of Myaing.\n\n\n\n# Assuming you have a RasterLayer object named 'my_raster'\nosm_pow_pak_sf &lt;- st_intersection(osm_pow_sf, magway_pak_sf)\ntm_shape(magway_pak_sf) +\n  tm_polygons(col = \"white\") +\n  pak_kde_raster +\n  tm_shape(osm_pow_pak_sf) +\n  tm_bubbles(col = \"fclass\", alpha = 0.3, size = 0.1, palette = c(\"aquamarine\")) +\n  tm_layout(title = \"Places of Worship (Protests)\", title.position = c(\"center\", \"top\"))\n\n\n\n\n\n\n\n\nThere is not much relations to be observed with places of worship since the dominant and registered religion within the district is Buddhist.\n\n\n\n\n\n7.1.3.2 Battles KDE\n\nacled_ppp_kde &lt;- density(acled_ppp_bat[magway_owin], sigma = 5000, edge = TRUE, kernel = \"gaussian\")\nacled_mag_raster &lt;- kde_to_raster(acled_ppp_kde)\n\npak_kde_raster &lt;- tm_shape(acled_mag_raster) +\n  tm_raster(alpha = 0.8, palette = \"YlOrRd\")\n\n\nTowns and CityPlaces of Worhsip\n\n\n\n# Assuming you have a RasterLayer object named 'my_raster'\nosm_pak_sf &lt;- st_intersection(osm_sf, magway_pak_sf)\ntm_shape(magway_pak_sf) +\n  tm_polygons(col = \"white\") +\n  pak_kde_raster +\n  tm_shape(osm_pak_sf %&gt;% filter(fclass %in% c(\"town\", \"city\"))) +\n  tm_bubbles(col = \"fclass\", alpha = 1, size = 0.2, palette = c(\"aquamarine\", \"cornflowerblue\")) + \n  tm_layout(title = \"Places (Battles)\", title.position = c(\"center\", \"top\")) \n\n\n\n\n\n\n\n\nBattles tend to occur in wider radius around towns and cities, while protests are more concentrated in urban centers.\n\n\n\n# Assuming you have a RasterLayer object named 'my_raster'\nosm_pow_pak_sf &lt;- st_intersection(osm_pow_sf, magway_pak_sf)\ntm_shape(magway_pak_sf) +\n  tm_polygons(col = \"white\") +\n  pak_kde_raster +\n  tm_shape(osm_pow_pak_sf) +\n  tm_bubbles(col = \"fclass\", alpha = 0.3, size = 0.1, palette = c(\"aquamarine\")) +\n  tm_layout(title = \"Places of Worship (Battles)\", title.position = c(\"center\", \"top\"))\n\n\n\n\n\n\n\n\nThere is not much relations to be observed with places of worship since the dominant and registered religion within the district is Buddhist."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#analysis-of-timeline",
    "href": "take-home_ex/ex01/th_ex01.html#analysis-of-timeline",
    "title": "Take-home Exercise 1",
    "section": "7.2 Analysis of Timeline",
    "text": "7.2 Analysis of Timeline\nFinally lets discuss the event type and its changes over the course of the conflict.\n\n# Filter for the desired event types\ngrouped_data &lt;- acled_pak_sf %&gt;%\n  filter(event_type %in% c(\"Protests\", \"Battles\")) %&gt;%\n  mutate(year_quarter = year + (quarter %% 1) * 2.5) %&gt;% \n  group_by(event_type, year_quarter) %&gt;%\n  summarize(count = n())\n\n# Create the line plot\nggplot(grouped_data, aes(x = year_quarter, y = count, color = event_type)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Event Type Counts Over Time\",\n       x = \"Quarter\",\n       y = \"Count\") +\n  scale_color_manual(values = c(\"Protests\" = \"red\", \"Battles\" = \"blue\")) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nOur analysis reveals a distinct temporal pattern in conflict events. Protests were prevalent in the early stages of the conflict in 2021, but their frequency gradually declined over time. On the other hand, battles have become more frequent, suggesting a shift in the tactics or strategies employed by the conflicting parties.\nSeveral factors may contribute to this trend. The increasing presence of security forces and the implementation of restrictive measures could have suppressed protest activity. Additionally, the evolving dynamics of the conflict, such as changes in leadership or alliances, may have influenced the shift towards more violent confrontations."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#key-policy-and-mitigation-strategies",
    "href": "take-home_ex/ex01/th_ex01.html#key-policy-and-mitigation-strategies",
    "title": "Take-home Exercise 1",
    "section": "7.3 Key Policy and Mitigation Strategies",
    "text": "7.3 Key Policy and Mitigation Strategies\n\nPromote Dialogue and Reconciliation: To foster peace and stability, it is essential to facilitate inclusive dialogue among all relevant stakeholders. Neutral mediation and trust-building measures can support this process, creating a conducive environment for negotiation and agreement.\nAddress Root Causes: Addressing the underlying grievances and social injustices that fuel the conflict is crucial for long-term peace. This involves promoting socioeconomic development, ensuring human rights protection, and fostering inter-ethnic reconciliation.\nSecurity Sector Reform: Reforming the security sector is essential for creating a more accountable, professional, and human rights-respecting force. This includes measures such as demilitarization, civilian control, and support for disarmament, demobilization, and reintegration programs."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#technically",
    "href": "take-home_ex/ex01/th_ex01.html#technically",
    "title": "Take-home Exercise 1",
    "section": "8.1 Technically",
    "text": "8.1 Technically\nI’ve learned how to use spatial analysis tools effectively, especially for first-order, second-order and spatial temporal analyses. The spatstat and sparr packages were invaluable for this. The EDA with ggplot was also tremendously helpful for my subsequent."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#conflict-related",
    "href": "take-home_ex/ex01/th_ex01.html#conflict-related",
    "title": "Take-home Exercise 1",
    "section": "8.2 Conflict-Related",
    "text": "8.2 Conflict-Related\nI gained insights into the spatial distribution of conflict events, identified hotspots, and understood temporal patterns. I also explored the relationships between conflict and geographic factors such as places and POW. These findings also made me delve into ways of mitigating such conflicts as well as peacbuilding effots."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html",
    "href": "take-home_ex/ex02/th_ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Drug abuse is a significant global health issue with far-reaching consequences, including negative health outcomes, financial burdens, and social problems. Despite efforts to combat it, illicit drug consumption remains prevalent and continues to grow. In 2021, an estimated 296 million people aged 15–64 worldwide had used a drug in the past 12 months.\nThailand, situated near the Golden Triangle - the largest drug production site in Asia - has become a market and transit route for drug trafficking due to its geographic location and infrastructure development. This has made drug abuse a major social issue within the country.\nYouth are particularly vulnerable to drug abuse, with approximately 2.7 million Thai youths using drugs. Among 15-19-year-olds, around 300,000 require drug treatment. Vocational-school students are disproportionately affected, with nearly double the number of drug users compared to secondary-school students.\n\n\n\n\nDetermine if drug abuse indicator are spatially dependent\nIdentify clusters, outliers and hotspots of drug abuse\nIdentify emerging hot and cold spots"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#context",
    "href": "take-home_ex/ex02/th_ex02.html#context",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Drug abuse is a significant global health issue with far-reaching consequences, including negative health outcomes, financial burdens, and social problems. Despite efforts to combat it, illicit drug consumption remains prevalent and continues to grow. In 2021, an estimated 296 million people aged 15–64 worldwide had used a drug in the past 12 months.\nThailand, situated near the Golden Triangle - the largest drug production site in Asia - has become a market and transit route for drug trafficking due to its geographic location and infrastructure development. This has made drug abuse a major social issue within the country.\nYouth are particularly vulnerable to drug abuse, with approximately 2.7 million Thai youths using drugs. Among 15-19-year-olds, around 300,000 require drug treatment. Vocational-school students are disproportionately affected, with nearly double the number of drug users compared to secondary-school students."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#objectives",
    "href": "take-home_ex/ex02/th_ex02.html#objectives",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Determine if drug abuse indicator are spatially dependent\nIdentify clusters, outliers and hotspots of drug abuse\nIdentify emerging hot and cold spots"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#loading-packages",
    "href": "take-home_ex/ex02/th_ex02.html#loading-packages",
    "title": "Take-home Exercise 2",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nIn this project we will be using the following packages:\n\ntmap: A package for creating thematic maps in R. It provides a simple and flexible interface for customizing maps and exporting them in various formats.\nsf: A package for simple feature data, which is a modern standard for representing geographic features. It provides efficient data structures and functions for spatial operations.\nsfdep: A package specifically designed for spatial dependence analysis. It provides functions for calculating spatial weights matrices, conducting global and local spatial autocorrelation tests (e.g., Moran’s I, Geary’s C), and performing spatial regression analysis.\ntidyverse: A collection of R packages designed for data manipulation, visualization, and analysis. It includes packages like dplyr, ggplot2, and tidyr, which are commonly used in data science workflows.\nkendall: A package used for performing Kendall’s rank correlation test. This test is often used to assess the degree of association between two variables when the data is ordinal or continuous but not normally distributed.\n\n\npacman::p_load(sf, sfdep, tmap, tidyverse, ggplot2, gridExtra, kendall)"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#loading-data",
    "href": "take-home_ex/ex02/th_ex02.html#loading-data",
    "title": "Take-home Exercise 2",
    "section": "2.2 Loading Data",
    "text": "2.2 Loading Data\nThis dataset presents statistics related to different types of drug offenses in Thailand, categorized by fiscal year. The data provides insights into the prevalence of various drug-related cases and their distribution across different provinces.\n\noff_sf &lt;- read_csv(\"data/aspatial/thai_drug_offenses_2017_2022.csv\")\n\nHere we will be loading Thailand’s administrative 1 (province) boundaries, in accordance with the drug offense dataset.\n\nprov_sf &lt;- st_read(dsn = \"data/geospatial/tha_adm_rtsd_itos_20210121_shp\", layer = \"tha_admbnda_adm1_rtsd_20220121\") %&gt;%\n              st_transform(crs = 24047)\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/IS415-GAA/take-home_ex/ex02/data/geospatial/tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#examining-data",
    "href": "take-home_ex/ex02/th_ex02.html#examining-data",
    "title": "Take-home Exercise 2",
    "section": "3.1 Examining Data",
    "text": "3.1 Examining Data\nBefore performing the join we need to identify if the column we are joining is clear for joining (ie. share the same spelling).\n\nprov_diff &lt;- function(off_sf_provinces, prov_sf_provinces) {\n  # Check if all provinces from off_sf are in prov_sf\n  all_off_sf_in_prov_sf &lt;- all(off_sf_provinces %in% prov_sf_provinces)\n  \n  # Check if all provinces from prov_sf are in off_sf\n  all_prov_sf_in_off_sf &lt;- all(prov_sf_provinces %in% off_sf_provinces)\n  \n  # Check if the sets are equal\n  sets_are_equal &lt;- all_off_sf_in_prov_sf && all_prov_sf_in_off_sf\n  \n  if (sets_are_equal) {\n    cat(\"All province names match.\\n\")\n  } else {\n    cat(\"There are mismatches in province names.\\n\")\n  \n    # Find the differences\n    cat(\"Missing in prov_sf:\", paste(setdiff(off_sf_provinces, prov_sf_provinces), collapse = \", \"), \"\\n\")\n    cat(\"Missing in off_sf:\", paste(setdiff(prov_sf_provinces, off_sf_provinces), collapse = \", \"), \"\\n\")\n  }\n}\n\nprov_diff(unique(off_sf$province_en), unique(prov_sf$ADM1_EN))\n\nThere are mismatches in province names.\nMissing in prov_sf: Loburi, buogkan \nMissing in off_sf: Lop Buri, Bueng Kan \n\n\n\n\n\n\n\n\nProvinces to Update\n\n\n\nNotice in the above when we compare the unique set from both SF there is 2 misspellings, where we will be renaming the province in off_sf:\n\nLoburi -&gt; Lop Buri\nBuogkan -&gt; Bueng Kan"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#updaing-mixmatched-province",
    "href": "take-home_ex/ex02/th_ex02.html#updaing-mixmatched-province",
    "title": "Take-home Exercise 2",
    "section": "3.2 Updaing Mixmatched Province",
    "text": "3.2 Updaing Mixmatched Province\nWe will perform the suggested naming and check if the provinces matches.\n\noff_sf &lt;- off_sf %&gt;%\n  mutate(province_en = case_when(\n    province_en == \"Loburi\" ~ \"Lop Buri\",\n    TRUE ~ province_en\n  ))\noff_sf &lt;- off_sf %&gt;%\n  mutate(province_en = case_when(\n    province_en == \"buogkan\" ~ \"Bueng Kan\",\n    TRUE ~ province_en\n  ))\n\nprov_diff(unique(off_sf$province_en), unique(prov_sf$ADM1_EN))\n\nAll province names match."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#joining-sf-on-province",
    "href": "take-home_ex/ex02/th_ex02.html#joining-sf-on-province",
    "title": "Take-home Exercise 2",
    "section": "3.3 Joining sf on Province",
    "text": "3.3 Joining sf on Province\nNow we can join the province and drug offense dataframe, left join on province since it is the sf df.\n\ndu_sf &lt;- left_join(prov_sf, off_sf, by = c(\"ADM1_EN\" = \"province_en\"))\nhead(du_sf)\n\nSimple feature collection with 6 features and 20 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 644049.1 ymin: 1491784 xmax: 710059.2 ymax: 1543010\nProjected CRS: Indian 1975 / UTM zone 47N\n  Shape_Leng Shape_Area ADM1_EN      ADM1_TH ADM1_PCODE ADM1_REF ADM1ALT1EN\n1   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n2   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n3   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n4   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n5   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n6   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n  ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH ADM0_PCODE       date\n1       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n2       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n3       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n4       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n5       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n6       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n     validOn validTo fiscal_year types_of_drug_offenses no_cases  province_th\n1 2022-01-22    &lt;NA&gt;        2017         drug_use_cases    11871 กรุงเทพมหานคร\n2 2022-01-22    &lt;NA&gt;        2018         drug_use_cases    16480 กรุงเทพมหานคร\n3 2022-01-22    &lt;NA&gt;        2019         drug_use_cases    15067 กรุงเทพมหานคร\n4 2022-01-22    &lt;NA&gt;        2020         drug_use_cases     9724 กรุงเทพมหานคร\n5 2022-01-22    &lt;NA&gt;        2021         drug_use_cases     9625 กรุงเทพมหานคร\n6 2022-01-22    &lt;NA&gt;        2022         drug_use_cases     2755 กรุงเทพมหานคร\n                        geometry\n1 MULTIPOLYGON (((674854.6 15...\n2 MULTIPOLYGON (((674854.6 15...\n3 MULTIPOLYGON (((674854.6 15...\n4 MULTIPOLYGON (((674854.6 15...\n5 MULTIPOLYGON (((674854.6 15...\n6 MULTIPOLYGON (((674854.6 15..."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#filtering-to-just-drug-use",
    "href": "take-home_ex/ex02/th_ex02.html#filtering-to-just-drug-use",
    "title": "Take-home Exercise 2",
    "section": "3.4 Filtering to just Drug Use",
    "text": "3.4 Filtering to just Drug Use\nThe following are the types of drug related use cases captured within the data, for this particular project we will be scoping down the data for analysis to just drug_use_cases.\n\nunique(du_sf$types_of_drug_offenses)\n\n [1] \"drug_use_cases\"                                        \n [2] \"suspects_in_drug_use_cases\"                            \n [3] \"possession_cases\"                                      \n [4] \"suspects_in_possession_cases\"                          \n [5] \"possession_with_intent_to_distribute_cases\"            \n [6] \"suspects_in_possession_with_intent_to_distribute_cases\"\n [7] \"trafficking_cases\"                                     \n [8] \"suspects_in_trafficking_cases\"                         \n [9] \"production_cases\"                                      \n[10] \"suspects_in_production_cases\"                          \n[11] \"import_cases\"                                          \n[12] \"suspects_in_import_cases\"                              \n[13] \"export_cases\"                                          \n[14] \"suspects_in_export_cases\"                              \n[15] \"conspiracy_cases\"                                      \n[16] \"suspects_in_conspiracy_cases\"                          \n\n\nSince we will be predominately working with drug use offense, we will filter by drug_use_cases and remove columns that are not involved in analysis.\n\ndu_sf &lt;- du_sf %&gt;%\n  select(fiscal_year, types_of_drug_offenses, no_cases, ADM1_EN, geometry) %&gt;%\n  filter(types_of_drug_offenses == \"drug_use_cases\") %&gt;%\n  rename(year = fiscal_year,\n         cases = no_cases,\n         province = ADM1_EN) %&gt;%\n  select(-types_of_drug_offenses)\n\nhead(du_sf)\n\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 644049.1 ymin: 1491784 xmax: 710059.2 ymax: 1543010\nProjected CRS: Indian 1975 / UTM zone 47N\n  year cases province                       geometry\n1 2017 11871  Bangkok MULTIPOLYGON (((674854.6 15...\n2 2018 16480  Bangkok MULTIPOLYGON (((674854.6 15...\n3 2019 15067  Bangkok MULTIPOLYGON (((674854.6 15...\n4 2020  9724  Bangkok MULTIPOLYGON (((674854.6 15...\n5 2021  9625  Bangkok MULTIPOLYGON (((674854.6 15...\n6 2022  2755  Bangkok MULTIPOLYGON (((674854.6 15...\n\n\n\n3.5 Saving Dataframe\nWe will save the filtered province and joined sf df for reuse later\n\nprov_sf &lt;- prov_sf %&gt;%\n  select(ADM1_EN, geometry) %&gt;%\n  rename(province = ADM1_EN)\nwrite_rds(prov_sf, \"data/rds/province.rds\")\n\n\nwrite_rds(du_sf, \"data/rds/drug_use.rds\")\n\nLoad the province and joined df and create a drug use df without geometry for EDA\n\nprov_sf &lt;- read_rds(\"data/rds/province.rds\")\ndu_sf &lt;- read_rds(\"data/rds/drug_use.rds\")\ndu_df &lt;- du_sf %&gt;%\n  select(year, cases, province) %&gt;%\n  st_drop_geometry()"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#drug-use-cases-2017-2022",
    "href": "take-home_ex/ex02/th_ex02.html#drug-use-cases-2017-2022",
    "title": "Take-home Exercise 2",
    "section": "4.1 Drug Use Cases (2017-2022)",
    "text": "4.1 Drug Use Cases (2017-2022)\nThe data provided with the dataset is yearly record of the number of drug cases, let’s start by observing the trend of drug use in the past few years.\n\n# Aggregate cases by year\naggregated_data &lt;- du_df %&gt;%\n  group_by(year) %&gt;%\n  summarize(total_cases = sum(cases))\n\n# Create the line chart with a curved line and a centered title\nggplot(aggregated_data, aes(x = year, y = total_cases)) +\n  geom_smooth(method = \"loess\", se = FALSE, color = \"red\") +\n  geom_text(aes(label = total_cases), vjust = -0.5) + \n  labs(title = \"Total Cases Over Time\",\n       x = \"Year\",\n       y = \"Total Cases\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\nWe can see that the drug use cases spiked in 2021 doubling the number of cases in 2017."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#top-10-province",
    "href": "take-home_ex/ex02/th_ex02.html#top-10-province",
    "title": "Take-home Exercise 2",
    "section": "4.2 Top 10 Province",
    "text": "4.2 Top 10 Province\n\n# Create a function to generate the pie chart for a given year\ncreate_pie_chart &lt;- function(yr) {\n  # Group the data by province and sum the cases\n  province_data &lt;- du_df %&gt;%\n    filter(year == yr) %&gt;%\n    group_by(province) %&gt;%\n    summarize(total_cases = sum(cases))\n\n  # Sort the data by total_cases in descending order\n  province_data &lt;- province_data[order(-province_data$total_cases), ]\n\n  # Select the top 10 provinces\n  top_10_provinces &lt;- province_data[1:10, ]\n\n  # Create the pie chart with labels, smaller legend, text, and title\n  ggplot(top_10_provinces, aes(x = \"\", y = total_cases, fill = province)) +\n    geom_bar(stat = \"identity\", color = \"white\") +\n    coord_polar(theta = \"y\") +\n    geom_text(aes(label = total_cases), position = position_stack(vjust = 0.5), size = 2) +  # Smaller text size\n    labs(title = yr, size = 3) +  # Smaller title size\n    scale_fill_brewer(palette = \"YlOrRd\") +  # Use RdYlGn palette\n    theme_void() +\n    theme(legend.text = element_text(size = 3),\n          legend.key.size = unit(0.3, \"cm\"))  # Smaller legend text size\n}\n\n# Create a list of pie charts for each year\npie_charts &lt;- list()\nfor (year in 2017:2022) {\n  pie_charts[[year-2016]] &lt;- create_pie_chart(year)\n}\n\n# Arrange the charts in a 2x2 grid\ngrid.arrange(grobs = pie_charts, ncol = 3, nrow = 2)\n\n\n\n\n\n\n\n\nFrom the above pie charts the we can observe Bangkok, Chang Mai, Chon Buri have consistently remained at the top. It is also interesting to note Bangkok was off the list in 2022."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#spatial-distrbution-of-drug-use",
    "href": "take-home_ex/ex02/th_ex02.html#spatial-distrbution-of-drug-use",
    "title": "Take-home Exercise 2",
    "section": "4.3 Spatial Distrbution of Drug Use",
    "text": "4.3 Spatial Distrbution of Drug Use\n\nDistributionProvince\n\n\n\nmin_cases &lt;- min(du_sf$cases)\nmax_cases &lt;- max(du_sf$cases)\n\ntm_shape(du_sf) +\n    tm_fill(\"cases\",\n            breaks = seq(min_cases, max_cases, length.out = 6),\n            palette = \"YlOrRd\") +\n    tm_borders(alpha = 0.5) +\n    tm_layout(legend.outside = TRUE,\n              legend.outside.position = \"right\") +\n    tm_facets(by=\"year\",\n              free.coords = F,\n              drop.units = T)\n\n\n\n\n\n\n\n\nFrom the choropleth plot we can observe that there seemed to be more cases of drug use 2021. Cases are seen in clusters in the central provinces around Bangkok and Chon Buri, north in Chang Mai and down south in Nakhon Si Thammarat.\n\n\n\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYear Selection\n\n\n\nGiven the recency and the spike in cases during 2021, we shall work on the 3 years of 2020 - 2022 to narrow our focus and gather deeper insights from these years."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#examine-contiguity",
    "href": "take-home_ex/ex02/th_ex02.html#examine-contiguity",
    "title": "Take-home Exercise 2",
    "section": "5.1 Examine Contiguity",
    "text": "5.1 Examine Contiguity\n\n5.1.1 Computing Contiguity\nHere we will be computing the contiguity of our provinces, where we use the queen contiguity by default\n\n# Calculate contiguity neighbors\nnb &lt;- st_contiguity(prov_sf$geometry)\n\nThe st_contiguity analysis reveals that there are 77 contiguous regions in the data. The majority of regions have between 3 and 5 neighbors, indicating a moderate level of spatial connectivity. However, there are also some regions with fewer neighbors, including one region that has no neighbors at all. This region might be an outlier or an island that is not connected to any other regions in the data.\n\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n\n\nRegion 67 is indicated to have no links and it is identified to be Phuket which happens to be an island on it’s own.\n\nprov_sf$province[[67]]\n\n[1] \"Phuket\"\n\n\n\n\n\n\n\n\nLand link\n\n\n\nDespite Phuket being an island there is actually a land link between Phuket and Phang Nga. \n\n\n\n\n5.1.2 Fixing Contiguity\nTo ensure we account for the landlink we will be adding Phang Nga as part of Phuket’s neighbor for the sake of our subsequent analysis.\n\nwhich(unique(prov_sf$province) == \"Phangnga\")\n\n[1] 66\n\n\n\n# Adding into each others link\nnb[[67]] &lt;- as.integer(c(66))\nnb[[66]] &lt;- c(nb[[66]], as.integer(67))\n\n\n\n5.1.3 Visualizing Contiguity\nThe following plot portrays the connectivity between the provinces using the queens contiguity, note that Phuket is also now linked with Phang Nga. With the nb we can proceed with perform the Spatial Autocorrelation analysis\n\n# Visualize the contiguity\nplot(st_geometry(prov_sf), border = 'lightgrey')\nplot(nb, st_geometry(prov_sf), pch = 19, cex = 0.6, col = 'red', add = TRUE)"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#morans-i",
    "href": "take-home_ex/ex02/th_ex02.html#morans-i",
    "title": "Take-home Exercise 2",
    "section": "5.2 Moran’s I",
    "text": "5.2 Moran’s I\nTo identify general clustering and dispersion of drug use across provinces we shall employ Moran’s I test.\n\n5.2.1 Moran’s I Test\nWe will begin by computing the the weight matrix across the years 2020 - 2022.\n\n# Storing our weights into a list\ndu_wm &lt;- list()\nfor (yr in 2020:2022) {\n  du_wm[[yr-2019]] &lt;- du_sf %&gt;%\n    filter(year == yr) %&gt;%\n    mutate(nb = nb, wt = st_weights(nb, style = \"W\"), .before = 1)\n}\n\nhead(du_wm[[1]])\n\nSimple feature collection with 6 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n                      nb\n1    2, 3, 4, 15, 59, 60\n2                  1, 15\n3            1, 4, 5, 59\n4    1, 3, 5, 10, 15, 17\n5 3, 4, 6, 7, 10, 58, 59\n6            5, 7, 8, 58\n                                                                           wt\n1            0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n2                                                                    0.5, 0.5\n3                                                      0.25, 0.25, 0.25, 0.25\n4            0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n5 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n6                                                      0.25, 0.25, 0.25, 0.25\n  year cases                 province                       geometry\n1 2020  9724                  Bangkok MULTIPOLYGON (((674854.6 15...\n2 2020  1816             Samut Prakan MULTIPOLYGON (((687654.3 15...\n3 2020   937               Nonthaburi MULTIPOLYGON (((645332.7 15...\n4 2020  1192             Pathum Thani MULTIPOLYGON (((704600.8 15...\n5 2020  1745 Phra Nakhon Si Ayutthaya MULTIPOLYGON (((663456.7 16...\n6 2020   423                Ang Thong MULTIPOLYGON (((643988 1636...\n\n\n\n202020212022\n\n\n\nglimpse(global_moran(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt))\n\nList of 2\n $ I: num 0.0876\n $ K: num 10.4\n\nglobal_moran_test(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 1.3777, p-value = 0.08414\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.087572782      -0.013157895       0.005345516 \n\n\nBased on these results, there is some evidence of positive spatial autocorrelation in drug use in 2020 (I: 0.0876). However, the observed clustering is not statistically significant where p-value &gt; 0.05. This suggests that while there might be a tendency for drug use to cluster geographically, the observed pattern could be due to chance.\n\n\n\nglimpse(global_moran(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt))\n\nList of 2\n $ I: num 0.201\n $ K: num 4.71\n\nglobal_moran_test(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.808, p-value = 0.002493\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.201001723      -0.013157895       0.005816956 \n\n\nBased on these results, there is strong evidence of positive spatial autocorrelation in drug use in 2021 (I: 0.201). The observed clustering is statistically significant where p-value &lt; 0.05, suggesting that the pattern is unlikely to be due to chance. This indicates a more pronounced tendency for drug use to cluster geographically in 2021 compared to 2020.\n\n\n\nglimpse(global_moran(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt))\n\nList of 2\n $ I: num 0.216\n $ K: num 3.88\n\nglobal_moran_test(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.9826, p-value = 0.001429\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.21564943       -0.01315789        0.00588501 \n\n\nBased on these results, similar to 2021, there is strong evidence of positive spatial autocorrelation in drug use in 2022 (I: 0.216). The observed clustering is statistically significant where p-value &lt; 0.05, suggesting that the pattern is unlikely to be due to chance.\n\n\n\n\n\n5.2.2 Moran’s I Perm Test\nGiven that we are running simulations, we start by setting the seed to ensure subsequent reproducibility.\n\nset.seed(888)\n\n\n202020212022\n\n\n\ndu_mi_perm_20 &lt;- global_moran_perm(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt, nsim = 99)\ndu_mi_perm_20\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.087573, observed rank = 92, p-value = 0.16\nalternative hypothesis: two.sided\n\nsummary(du_mi_perm_20$res)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.13071 -0.05919 -0.02025 -0.01037  0.03147  0.25448 \n\n\nBased on the observed Moran’s I statistic of 0.087573 has a rank of 93 out of 100 simulations, resulting in a p-value of 0.16. This suggests a weak positive spatial autocorrelation, however the observed spatial autocorrelation is not statistically significant at a 5% level.\n\nhist(du_mi_perm_20$res, freq=TRUE, breaks=20, xlab=\"Simulated Moran's I\", main=\"Histogram of Simulated Moran's I (2020, sims = 99)\")\nabline(v=0, col=\"red\")\n\n\n\n\n\n\n\n\n\n\n\ndu_mi_perm_21 &lt;- global_moran_perm(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt, nsim = 99)\ndu_mi_perm_21\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.201, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\nsummary(du_mi_perm_21$res)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.17864 -0.06450 -0.01222 -0.01162  0.03652  0.20100 \n\n\nBased on the observed Moran’s I statistic of 0.201 has a rank of 99 out of 100 simulations, resulting in a p-value of 0.02. This suggests a positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level, as the p-value is less than 0.05.\n\nhist(du_mi_perm_21$res, freq=TRUE, breaks=20, xlab=\"Simulated Moran's I\", main=\"Histogram of Simulated Moran's I (2021, sims = 99)\")\nabline(v=0, col=\"red\")\n\n\n\n\n\n\n\n\n\n\n\ndu_mi_perm_22 &lt;- global_moran_perm(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt, nsim = 99)\ndu_mi_perm_22\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.21565, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\nsummary(du_mi_perm_22$res)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.24803 -0.07494 -0.02639 -0.01746  0.03541  0.21565 \n\n\nBased on the observed Moran’s I statistic of 0.21565 has a rank of 100 out of 100 simulations, resulting in a p-value of 2.2e-16. This suggests a positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level, as the p-value is less than 0.05.\n\nhist(du_mi_perm_22$res, freq=TRUE, breaks=20, xlab=\"Simulated Moran's I\", main=\"Histogram of Simulated Moran's I (2022, sims = 99)\")\nabline(v=0, col=\"red\")"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#gearys-c",
    "href": "take-home_ex/ex02/th_ex02.html#gearys-c",
    "title": "Take-home Exercise 2",
    "section": "5.3 Geary’s C",
    "text": "5.3 Geary’s C\nNext we shall further understand and verify if our findings with Moran’s I is consistent with the Geary’s C test.\n\n5.2.1 Geary’s C Test\n\n202020212022\n\n\n\nglimpse(global_c(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt))\n\nList of 2\n $ C: num 0.952\n $ K: num 10.4\n\nglobal_c_test(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt)\n\n\n    Geary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 0.47287, p-value = 0.3182\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       0.95158530        1.00000000        0.01048272 \n\n\nBased on these results, there is weak evidence of spatial clustering in drug use in 2020. The Geary’s C statistic of 0.9516 is close to the expected value of 1, and the p-value of 0.3182 is not statistically significant. This suggests that the observed pattern of drug use is not significantly dispersed across space.\n\n\n\nglimpse(global_c(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt))\n\nList of 2\n $ C: num 0.847\n $ K: num 4.71\n\nglobal_c_test(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt)\n\n\n    Geary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 1.7358, p-value = 0.0413\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.847281286       1.000000000       0.007741081 \n\n\nBased on these results, there is some evidence of spatial clustering in drug use in 2021. The Geary’s C statistic of 0.847281286 is lower than the expected value of 1, and the p-value of 0.0413 is statistically significant. Suggesting a tendency for provinces with high drug use rates to be surrounded by provinces with low drug use rates (dispersion).\n\n\n\nglimpse(global_c(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt))\n\nList of 2\n $ C: num 0.836\n $ K: num 3.88\n\nglobal_c_test(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt)\n\n\n    Geary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 1.9173, p-value = 0.0276\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.835677203       1.000000000       0.007345315 \n\n\nBased on these results, similar to 2021 there is some evidence of spatial clustering in drug use in 2022. The Geary’s C statistic of 0.835677203 is lower than the expected value of 1, and the p-value of 0.0276 is statistically significant. Suggesting a tendency for provinces with high drug use rates to be surrounded by provinces with low drug use rates (dispersion).\n\n\n\n\n\n5.2.2 Geary’s C Perm Test\n\n202020212022\n\n\n\ndu_gc_perm_20 &lt;- global_c_perm(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt, nsim = 99)\ndu_gc_perm_20\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.95159, observed rank = 31, p-value = 0.31\nalternative hypothesis: greater\n\nsummary(du_gc_perm_20$res)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7866  0.9359  1.0073  1.0061  1.0732  1.2449 \n\n\nBased on the observed Geary C statistic of 0.95159 has a rank of 29 out of 100 simulations, resulting in a p-value of 0.29. This suggests a weak positive spatial autocorrelation in the data and that the observed spatial dispersion is not statistically significant at a 5% level.\n\nhist(du_gc_perm_20$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\", main=\"Histogram of Simulated Geary's c (2020, sims = 99)\")\nabline(v=1, col=\"red\")\nabline(v=du_gc_perm_20$statistic, col=\"blue\", lwd=2)\n\n\n\n\n\n\n\n\n\n\n\ndu_gc_perm_21 &lt;- global_c_perm(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt, nsim = 99)\ndu_gc_perm_21\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.84728, observed rank = 4, p-value = 0.04\nalternative hypothesis: greater\n\nsummary(du_gc_perm_21$res)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7609  0.9299  1.0052  0.9994  1.0581  1.3582 \n\n\nBased on the observed Geary C statistic of 0.84728 has a rank of 8 out of 100 simulations, resulting in a p-value of 0.08. This suggests a weak positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level.\n\nhist(du_gc_perm_21$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\", main=\"Histogram of Simulated Geary's c (2021, sims = 99)\")\nabline(v=1, col=\"red\")\nabline(v=du_gc_perm_21$statistic, col=\"blue\", lwd=2)\n\n\n\n\n\n\n\n\n\n\n\ndu_gc_perm_22 &lt;- global_c_perm(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt, nsim = 99)\ndu_gc_perm_22\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.83568, observed rank = 5, p-value = 0.05\nalternative hypothesis: greater\n\nsummary(du_gc_perm_22$res)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7756  0.9421  0.9924  0.9927  1.0448  1.2929 \n\n\nBased on the observed Geary C statistic of 0.83568 has a rank of 2 out of 100 simulations, resulting in a p-value of 0.02. This suggests a weak positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level.\n\nhist(du_gc_perm_22$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\", main=\"Histogram of Simulated Geary's c (2022, sims = 99)\")\nabline(v=1, col=\"red\")\nabline(v=du_gc_perm_22$statistic, col=\"blue\", lwd=2)"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#morans-i-1",
    "href": "take-home_ex/ex02/th_ex02.html#morans-i-1",
    "title": "Take-home Exercise 2",
    "section": "6.1 Moran’s I",
    "text": "6.1 Moran’s I\n\n6.1.1 Computing Local Moran’s I\nWe start by computing the local Moran’s I for each year.\n\n202020212022\n\n\n\ndu_lm_20 &lt;- du_wm[[1]] %&gt;%\n  mutate(local_moran = local_moran(cases, nb, wt, nsim = 99), .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(du_lm_20)\n\nSimple feature collection with 6 features and 17 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 18\n       ii       eii    var_ii   z_ii     p_ii p_ii_sim p_folded_sim skewness\n    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1 -0.904  -0.466    1.74      -0.332 0.740        0.84         0.42    0.699\n2 -0.0335 -0.000444 0.0000866 -3.55  0.000386     0.02         0.01   -1.36 \n3 -0.556  -0.00112  0.0698    -2.10  0.0358       0.08         0.04   -1.16 \n4 -0.217   0.00130  0.0240    -1.40  0.160        0.22         0.11   -1.23 \n5  0.0223 -0.00293  0.000508   1.12  0.264        0.18         0.09   -1.03 \n6  0.317  -0.00215  0.190      0.731 0.465        0.34         0.17   -1.54 \n# ℹ 10 more variables: kurtosis &lt;dbl&gt;, mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;,\n#   nb &lt;nb&gt;, wt &lt;list&gt;, year &lt;dbl&gt;, cases &lt;dbl&gt;, province &lt;chr&gt;,\n#   geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\ndu_lm_21 &lt;- du_wm[[2]] %&gt;%\n  mutate(local_moran = local_moran(cases, nb, wt, nsim = 99), .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(du_lm_21)\n\nSimple feature collection with 6 features and 17 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 18\n       ii      eii  var_ii   z_ii   p_ii p_ii_sim p_folded_sim skewness kurtosis\n    &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 -0.906   3.43e-3 1.48    -0.747 0.455      0.56         0.28    0.729    0.456\n2 -0.321  -2.07e-3 0.0195  -2.29  0.0221     0.06         0.03   -0.708   -0.255\n3  0.0221 -4.44e-4 0.00137  0.610 0.542      0.5          0.25    0.711    0.297\n4 -0.150   1.33e-3 0.0436  -0.727 0.467      0.5          0.25   -0.411   -0.399\n5  0.294   3.71e-2 0.0352   1.37  0.171      0.12         0.06   -0.428   -0.671\n6  0.635   1.25e-2 0.198    1.40  0.162      0.12         0.06   -0.455   -0.472\n# ℹ 9 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, year &lt;dbl&gt;, cases &lt;dbl&gt;, province &lt;chr&gt;,\n#   geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\ndu_lm_22 &lt;- du_wm[[3]] %&gt;%\n  mutate(local_moran = local_moran(cases, nb, wt, nsim = 99), .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(du_lm_22)\n\nSimple feature collection with 6 features and 17 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 18\n       ii      eii   var_ii   z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 -0.285   0.0358  0.170    -0.779 0.436     0.44         0.22    0.242   -0.501\n2  0.111  -0.00160 0.0396    0.567 0.571     0.58         0.29    0.927    1.50 \n3 -0.165   0.00604 0.143    -0.451 0.652     0.56         0.28   -0.692    0.559\n4  0.0112  0.00209 0.000393  0.459 0.646     0.7          0.35   -0.274   -0.349\n5  0.132  -0.00189 0.0156    1.07  0.284     0.2          0.1    -0.539    0.344\n6  0.436  -0.0287  0.161     1.16  0.246     0.26         0.13   -0.157   -0.894\n# ℹ 9 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, year &lt;dbl&gt;, cases &lt;dbl&gt;, province &lt;chr&gt;,\n#   geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\n\n\n\n\n\n\nIntepretation of Attributes\n\n\n\n\nii: local moran i\np_ii: p-value with base method\np_ii_sim: Based on simulation\nmean: Cluster type Labels\nmedian: Similar to mean (Better option if there are significant skewness in data)\n\n\n\n\n\n6.1.2 Visualizing I Values\n\n202020212022Province\n\n\n\npii_m &lt;- tm_shape(du_lm_20) +\n  tm_fill(\"p_ii_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value (2020)\", main.title.size = 1)\n\nii_m &lt;- tm_shape(du_lm_20) +\n  tm_fill(\"ii\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I (2020)\", main.title.size = 1)\n\ntmap_arrange(ii_m, pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, we observed clusters of higher drug use in central provinces like Chon Buri and Rayong, while Mae Hong Son appeared as an outlier with significantly different drug use patterns (low) as compared to it’s neighbors. The low p-values associated with these clusters indicate a high likelihood of statistically significant spatial autocorrelation, suggesting that the observed patterns may likely not be due to chance.\n\n\n\npii_m &lt;- tm_shape(du_lm_21) +\n  tm_fill(\"p_ii_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value (2021)\", main.title.size = 1)\n\nii_m &lt;- tm_shape(du_lm_21) +\n  tm_fill(\"ii\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I (2021)\", main.title.size = 1)\n\ntmap_arrange(ii_m, pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, we observed clusters of higher drug use increased across Thailand. Besides the central provinces like Chon Buri and Rayong, the southern province of Surat Thani and Nakhon as well as the eastern province of Ubon all experienced higher drug and clustering patterns, while Mae Hong Son remains as an outlier as compared to it’s neighbors. The p-values however seems to be mixed, indicating a varied likelihood of statistically significant spatial autocorrelation.\n\n\n\npii_m &lt;- tm_shape(du_lm_22) +\n  tm_fill(\"p_ii_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value (2022)\", main.title.size = 1)\n\nii_m &lt;- tm_shape(du_lm_22) +\n  tm_fill(\"ii\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I (2022)\", main.title.size = 1)\n\ntmap_arrange(ii_m, pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, we observed a general decrease in drug use across Thailand. However we observe strong clustering patterns in central provinces of Udon, Kalasin and Khon Kaen, while Mae Hong Son remains as an outlier as compared to it’s neighbors. The p-values associated with the central province seems to be low, indicating a high likelihood of statistically significant spatial autocorrelation.\n\n\n\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.1.3 LISA Cluster Map\nNext we will examining the significant locations color coded by type of spatial autocorrelation.\n\n202020212022Province\n\n\n\nlisa_sig &lt;- du_lm_20 %&gt;%\n  filter(p_ii_sim &lt; 0.1) \n\ntm_shape(du_lm_20) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, we observed a high-high cluster of drug use in the central provinces surrounding Bangkok. This suggests that areas with high drug use rates are clustered together in this region. Additionally, several low-high outliers were identified, indicating areas with high drug use rates surrounded by areas with low drug use rates. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n\n\nlisa_sig &lt;- du_lm_21 %&gt;%\n  filter(p_ii_sim &lt; 0.1) \n\ntm_shape(du_lm_21) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, we observed a low-low cluster of drug use in the western provinces. Additionally, we can observe several smaller high-high clusters scattered around. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n\n\nlisa_sig &lt;- du_lm_22 %&gt;%\n  filter(p_ii_sim &lt; 0.1) \n\ntm_shape(du_lm_22) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, similar to 2021 we observed a low-low cluster of drug use in the western provinces. Additionally, we can observe large high-high clusters in the northen-central provinces of Kalasin and Udon Thani. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n\n\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#hotspot-and-coldspot-analysis",
    "href": "take-home_ex/ex02/th_ex02.html#hotspot-and-coldspot-analysis",
    "title": "Take-home Exercise 2",
    "section": "6.2 Hotspot and Coldspot Analysis",
    "text": "6.2 Hotspot and Coldspot Analysis\nTo further analyze the spatial distribution of drug use, we can employ the Getis-Ord Gi* statistic to identify local hotspots and coldspots. This analysis will help pinpoint specific areas with significantly high or low concentrations of drug use, providing valuable insights into the spatial patterns of the phenomenon. Before we start we will need to get the inverse weight matrix for Gi* statistics to work.\n\n# Storing our weights into a list\ndu_iwm &lt;- list()\nfor (yr in 2020:2022) {\n  du_iwm[[yr-2019]] &lt;- du_sf %&gt;%\n    filter(year == yr) %&gt;%\n    mutate(nb = nb,\n           wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1),\n           .before = 1)\n}\n\nhead(du_iwm[[1]])\n\nSimple feature collection with 6 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n                      nb\n1    2, 3, 4, 15, 59, 60\n2                  1, 15\n3            1, 4, 5, 59\n4    1, 3, 5, 10, 15, 17\n5 3, 4, 6, 7, 10, 58, 59\n6            5, 7, 8, 58\n                                                                                               wts\n1               5.330037e-05, 2.809414e-05, 2.416100e-05, 9.504299e-06, 1.709074e-05, 2.216785e-05\n2                                                                       5.330037e-05, 1.095141e-05\n3                                           2.809414e-05, 3.315966e-05, 1.995419e-05, 3.180094e-05\n4               2.416100e-05, 3.315966e-05, 2.932427e-05, 1.431406e-05, 8.594233e-06, 1.667747e-05\n5 1.995419e-05, 2.932427e-05, 3.095582e-05, 9.832177e-06, 1.967158e-05, 1.638466e-05, 1.407828e-05\n6                                           3.095582e-05, 1.069042e-05, 2.974675e-05, 2.628824e-05\n  year cases                 province                       geometry\n1 2020  9724                  Bangkok MULTIPOLYGON (((674854.6 15...\n2 2020  1816             Samut Prakan MULTIPOLYGON (((687654.3 15...\n3 2020   937               Nonthaburi MULTIPOLYGON (((645332.7 15...\n4 2020  1192             Pathum Thani MULTIPOLYGON (((704600.8 15...\n5 2020  1745 Phra Nakhon Si Ayutthaya MULTIPOLYGON (((663456.7 16...\n6 2020   423                Ang Thong MULTIPOLYGON (((643988 1636...\n\n\n\n6.2.1 Computing Local Gi*\n\n202020212022\n\n\n\nhcsa_20 &lt;- du_iwm[[1]] %&gt;%\n  mutate(local_Gi = local_gstar_perm(cases, nb, wts, nsim = 99), .before = 1) %&gt;%\n  unnest(local_Gi) \n\nhead(hcsa_20)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 16\n  gi_star cluster   e_gi    var_gi std_dev  p_value p_sim p_folded_sim skewness\n    &lt;dbl&gt; &lt;fct&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1    1.34 High    0.0208 0.0000132  -0.513 0.608     0.72         0.36    0.518\n2    2.98 Low     0.0133 0.0000353   3.42  0.000635  0.04         0.02    1.93 \n3    1.71 Low     0.0120 0.0000207   2.21  0.0271    0.12         0.06    1.02 \n4    1.21 Low     0.0123 0.0000173   1.45  0.146     0.18         0.09    1.72 \n5   -1.08 Low     0.0130 0.0000205  -0.995 0.320     0.18         0.09    0.983\n6   -1.09 Low     0.0101 0.0000187  -0.668 0.504     0.58         0.29    1.41 \n# ℹ 7 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, year &lt;dbl&gt;,\n#   cases &lt;dbl&gt;, province &lt;chr&gt;, geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\nhcsa_21 &lt;- du_iwm[[2]] %&gt;%\n  mutate(local_Gi = local_gstar_perm(cases, nb, wts, nsim = 99), .before = 1) %&gt;%\n  unnest(local_Gi) \n\nhead(hcsa_21)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 16\n  gi_star cluster   e_gi    var_gi std_dev p_value p_sim p_folded_sim skewness\n    &lt;dbl&gt; &lt;fct&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1   0.289 High    0.0163 0.0000116  -0.661  0.509   0.56         0.28   0.520 \n2   1.74  Low     0.0122 0.0000287   2.09   0.0370  0.1          0.05   1.01  \n3   0.538 High    0.0126 0.0000162   0.712  0.476   0.5          0.25   0.714 \n4   0.482 Low     0.0124 0.0000199   0.542  0.588   0.44         0.22   1.23  \n5  -1.68  Low     0.0120 0.0000119  -1.44   0.151   0.18         0.09   0.495 \n6  -1.68  Low     0.0107 0.0000128  -1.52   0.129   0.12         0.06   0.0274\n# ℹ 7 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, year &lt;dbl&gt;,\n#   cases &lt;dbl&gt;, province &lt;chr&gt;, geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\nhcsa_22 &lt;- du_iwm[[3]] %&gt;%\n  mutate(local_Gi = local_gstar_perm(cases, nb, wts, nsim = 99), .before = 1) %&gt;%\n  unnest(local_Gi) \n\nhead(hcsa_22)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 16\n  gi_star cluster   e_gi    var_gi std_dev p_value p_sim p_folded_sim skewness\n    &lt;dbl&gt; &lt;fct&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1 -0.308  High    0.0140 0.0000105  -0.609   0.543  0.58         0.29    0.326\n2  0.647  High    0.0144 0.0000188   0.435   0.664  0.62         0.31    0.625\n3  0.0640 Low     0.0116 0.0000150   0.430   0.667  0.54         0.27    0.828\n4 -0.575  Low     0.0127 0.0000118  -0.452   0.651  0.78         0.39    0.366\n5 -1.21   Low     0.0125 0.0000105  -0.979   0.327  0.38         0.19    0.237\n6 -1.40   Low     0.0113 0.0000150  -0.965   0.335  0.24         0.12    0.921\n# ℹ 7 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, year &lt;dbl&gt;,\n#   cases &lt;dbl&gt;, province &lt;chr&gt;, geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\n\n\n6.2.2 Visualizing Gi* Values\n\n202020212022Province\n\n\n\nh_pii_m &lt;- tm_shape(hcsa_20) +\n  tm_fill(\"p_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value (2020)\", main.title.size = 1)\n\nh_ii_m &lt;- tm_shape(hcsa_20) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I (2020)\", main.title.size = 1)\n\ntmap_arrange(h_ii_m, h_pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, similar to Moran’s I plot we observed a cluster of hotspots in central provinces, slightly north around Nakhon Sawan we observe a cluster of coldspot. The generally low p-values associated with these clusters indicate a high likelihood of statistically significant hotspot and coldspot.\n\n\n\nh_pii_m &lt;- tm_shape(hcsa_21) +\n  tm_fill(\"p_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value (2021)\", main.title.size = 1)\n\nh_ii_m &lt;- tm_shape(hcsa_21) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I (2021)\", main.title.size = 1)\n\ntmap_arrange(h_ii_m, h_pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, we observed a cluster of hotspots in eastern provinces, and similar to Moran’s I analysis a cluster of coldspot to the western provinces. The mixed p-values associated with these clusters indicate a varying likelihood of statistically significant hotspot and coldspot.\n\n\n\nh_pii_m &lt;- tm_shape(hcsa_22) +\n  tm_fill(\"p_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value (2022)\", main.title.size = 1)\n\nh_ii_m &lt;- tm_shape(hcsa_22) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I (2022)\", main.title.size = 1)\n\ntmap_arrange(h_ii_m, h_pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, we observed a cluster of hotspots in north-central province, and similary a cluster of coldspot to the western provinces. The relatively low p-values associated with these clusters indicate a highly likelihood of statistically significant hotspot and coldspot.\n\n\n\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.1.3 HCSA LISA Map\n\n202020212022Province\n\n\n\nHCSA_sig &lt;- hcsa_20 %&gt;%\n  filter(p_sim &lt; 0.1) \n\ntm_shape(hcsa_20) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, we observed a hotspot in the central near Chantha Buri, and a couple of coldspots in the proximity of Nakhon Sawan. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n\n\nHCSA_sig &lt;- hcsa_21 %&gt;%\n  filter(p_sim &lt; 0.1) \n\ntm_shape(hcsa_21) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, we observe a cluster of coldspots in the western provinces and several hotspots to the east. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n\n\nHCSA_sig &lt;- hcsa_22 %&gt;%\n  filter(p_sim &lt; 0.1) \n\ntm_shape(hcsa_22) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, similar to 2021 we observe a cluster of coldspots in the western provinces although not as significant. Additionally we also the development of a cluster of hotspots in and around the northern province of Kalasin in 2022. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n\n\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#computing-bos",
    "href": "take-home_ex/ex02/th_ex02.html#computing-bos",
    "title": "Take-home Exercise 2",
    "section": "7.1 Computing BOS",
    "text": "7.1 Computing BOS\nWe start by calculating the spacetime object with the drug use df and the province sf df.\n\nbos &lt;- spacetime(du_df, prov_sf,\n                 .loc_col = \"province\",\n                 .time_col = \"year\")\n\nNext we compute the neighbor and weights for the spacetime object.\n\nbos_nb &lt;- bos %&gt;% \n  activate(\"geometry\") %&gt;%\n  mutate(\n    nb = include_self(st_contiguity(geometry)),\n    wt = st_weights(nb)\n  ) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#emerging-hotspot-analysis-1",
    "href": "take-home_ex/ex02/th_ex02.html#emerging-hotspot-analysis-1",
    "title": "Take-home Exercise 2",
    "section": "7.2 Emerging Hotspot Analysis",
    "text": "7.2 Emerging Hotspot Analysis\nEmerging Hot Spot Analysis identifies trends in spatial clustering over a period of time. Emerging hot spot analysis combines the Getis-Ord Gi* statistic with the Mann-Kendall trend test to determine if there is a temporal trend associated with local clustering of hot and cold spots.\n\nehsa &lt;- emerging_hotspot_analysis(\n  x = bos_nb,\n  .var = \"cases\",\n  k = 1,\n  nsim = 99,\n  nb_col = \"nb\",\n  wt_col = \"wt\"\n)\nhead(ehsa)\n\n                  location        tau   p_value      classification\n1                  Bangkok  0.3333333 0.4523704 no pattern detected\n2             Samut Prakan -0.3333333 0.4523704   sporadic coldspot\n3               Nonthaburi  0.2000000 0.7071142    sporadic hotspot\n4             Pathum Thani  0.3333333 0.4523704 no pattern detected\n5 Phra Nakhon Si Ayutthaya  0.3333333 0.4523704         new hotspot\n6                Ang Thong  0.3333333 0.4523704    sporadic hotspot\n\n\n\n\n\n\n\n\nEHSA Intepretation\n\n\n\ntau: The tau value represents the Kendall’s tau coefficient, which measures the strength and direction of the monotonic trend in the Gi* values over time. - tau &gt; 0: Indicates a positive trend, suggesting that the location is becoming a hotspot (increasing Gi* values). - tau &lt; 0: Indicates a negative trend, suggesting that the location is becoming a coldspot (decreasing Gi* values). - tau ≈ 0: Indicates no significant trend.\n\n\nWe will be joining the ehsa df with the province sf df for the spatial attribute.\n\nehsa_sf &lt;- left_join(prov_sf, ehsa, by = c(\"province\" = \"location\"))\nhead(ehsa_sf)\n\nSimple feature collection with 6 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n                  province        tau   p_value      classification\n1                  Bangkok  0.3333333 0.4523704 no pattern detected\n2             Samut Prakan -0.3333333 0.4523704   sporadic coldspot\n3               Nonthaburi  0.2000000 0.7071142    sporadic hotspot\n4             Pathum Thani  0.3333333 0.4523704 no pattern detected\n5 Phra Nakhon Si Ayutthaya  0.3333333 0.4523704         new hotspot\n6                Ang Thong  0.3333333 0.4523704    sporadic hotspot\n                        geometry\n1 MULTIPOLYGON (((674854.6 15...\n2 MULTIPOLYGON (((687654.3 15...\n3 MULTIPOLYGON (((645332.7 15...\n4 MULTIPOLYGON (((704600.8 15...\n5 MULTIPOLYGON (((663456.7 16...\n6 MULTIPOLYGON (((643988 1636..."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#visualizing-ehca",
    "href": "take-home_ex/ex02/th_ex02.html#visualizing-ehca",
    "title": "Take-home Exercise 2",
    "section": "7.3 Visualizing EHCA",
    "text": "7.3 Visualizing EHCA\n\n7.3.1 Tau, Classification and p-value\n\ne_p_m &lt;- tm_shape(ehsa_sf) +\n  tm_fill(\"p_value\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"EHSA p-value\", main.title.size = 1)\n\ne_c_m &lt;- tm_shape(ehsa_sf) +\n  tm_fill(\"classification\", palette = \"Spectral\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"EHSA Classification\", main.title.size = 1)\n\ne_t_m &lt;- tm_shape(ehsa_sf) +\n  tm_fill(\"tau\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"EHSA tau-value\", main.title.size = 1)\n\ntmap_arrange(e_t_m, e_c_m, e_p_m, ncol = 3)\n\n\n\n\n\n\n\n\nWe can observe a scatter of emerging hot and cold spots within our tau plot while the classification plot further points out several new hotspots. However the p-value is highly mixed which results in varying statistically significance. To help narrow down our analysis we can filter by p-value in a EHSA LISA map for further analysis.\n\n\n7.2.3 EHSA LISA Map (85% Confidence)\n\nEHSA_sig &lt;- ehsa_sf %&gt;%\n  filter(p_value &lt; 0.15) \n\ne_tp_m &lt;- tm_shape(ehsa_sf) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(EHSA_sig) +\n  tm_fill(\"tau\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"EHSA tau (&gt;85%)\", main.title.size = 1)\n\ne_cp_m &lt;- tm_shape(ehsa_sf) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(EHSA_sig) +\n  tm_fill(\"classification\", palette = \"Spectral\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"EHSA Classification (&gt;85%)\", main.title.size = 1)\n\np_m &lt;- tm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n\ntmap_arrange(e_tp_m, e_cp_m, p_m, ncol = 3)\n\n\n\n\n\n\n\n\nBased on the LISA map, we can confirm the emergence of several hotspots in Chon Buri as a sporadic hotspot and Nakhon Nayok as a new emerging hotspot. Additionally we can also identify several emerging hotspots in the northern provinces such as Chang mai, with sporadic coldspots. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#overall-trend",
    "href": "take-home_ex/ex02/th_ex02.html#overall-trend",
    "title": "Take-home Exercise 2",
    "section": "8.1 Overall Trend",
    "text": "8.1 Overall Trend\nThe analysis reveals a significant spike in drug use cases between 2017 and 2021, with the number of cases doubling during this period. Bangkok, Chiang Mai, and Chon Buri consistently ranked among the top provinces with the highest drug use rates, although Bangkok was not among the top 10 in 2022."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#breakdown",
    "href": "take-home_ex/ex02/th_ex02.html#breakdown",
    "title": "Take-home Exercise 2",
    "section": "8.2 Breakdown",
    "text": "8.2 Breakdown\n\n8.2.1 Global Spatial Autocorrelation\n\n2020: Weak evidence of positive spatial autocorrelation, suggesting a slight tendency for drug use to cluster geographically.\n2021: Strong evidence of positive spatial autocorrelation, indicating a pronounced clustering pattern.\n2022: Similar to 2021, strong evidence of positive spatial autocorrelation.\n\n\n\n8.2.2 Local Spatial Autocorrelation\n\n2020: Clusters identified in central provinces (Chon Buri, Rayong) and an outlier in Mae Hong Son.\n2021: Increased clustering observed in central and southern provinces, with Mae Hong Son remaining an outlier.\n2022: Decreased overall drug use, but persistent clustering in central provinces (Udon, Kalasin, Khon Kaen) and continued outlier status for Mae Hong Son.\n\n\n\n8.2.3 Emerging Hotspot Analysis\n\nSporadic emerging hotspots: Identified in various regions, including Chon Buri, Nakhon Nayok, and northern provinces.\nVarying statistical significance: The significance of emerging hotspots varies, indicating the need for further analysis."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#key-findings",
    "href": "take-home_ex/ex02/th_ex02.html#key-findings",
    "title": "Take-home Exercise 2",
    "section": "8.3 Key Findings",
    "text": "8.3 Key Findings\n\nSpatial clustering: Some evidence of spatial autocorrelation suggests that drug use is clustered geographically.\nPersistent hotspots: Certain regions (e.g., central provinces) consistently exhibit higher drug use rates.\nOutlier regions: Mae Hong Son consistently stands out as an outlier with different drug use patterns."
  },
  {
    "objectID": "in-class_ex/ex06/ic_ex06.html",
    "href": "in-class_ex/ex06/ic_ex06.html",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, tidyverse, DT)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex06/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:3,7,15,16,31,32)\n\n\n# nb: A neighbor list object created by st_neighbor\n# style: \"W\" for standardized weights\n# .before = 1: Insert into the front\n# Returns a table with the neighbors that can be viewed\n\nwm_q &lt;- hunan %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb, style = \"W\"), .before = 1)\n\ndatatable(wm_q)\n\n\n\n\n\n\nmoranI &lt;- global_moran(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n\nglimpse(moranI)\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\nK is average neighbours found\n\n# Performs a basic test\nglobal_moran_test(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\np-value: &lt; 0.05, enough statistical evidence we can reject null hypothesis, does not conform to random distribution (95% sure) - Fail to reject null hypothesis if greater than 0.05 no point proceeding Moran I: Greater than 0 suggest clustering in the data, but is a relatively low clustering\n\n# Always best practice to set seed before simulation\nset.seed(1234)\n\n\n\n\nglobal_moran_perm(wm_q$GDPPC, wm_q$nb, wm_q$wt, nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\np-value: Is smaller Moran I: Is the same\n\n\n\n\nlisa &lt;- wm_q %&gt;%\n  mutate(local_moran = local_moran(GDPPC, nb, wt, nsim = 99), .before = 1) %&gt;%\n  unnest(local_moran) # Turn it into a table form\n\ndatatable(lisa)\n\n\n\n\n\nii: local moran i p_ii: p-value with base method p_ii_sim: Based on simulation mean: label hotspots median: Use if there is significant no. of positive or negative skew Plot out skewness to see if you want to use median\n\ntmap_mode(\"plot\")\npii_m &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value\", main.title.size = 1)\n\nii_m &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\", main.title.size = 1)\n\ntmap_arrange(pii_m, ii_m, ncol = 2)\n\n\n\n\n\n\n\n\n\nlisa_sig &lt;- lisa %&gt;%\n  filter(p_ii &lt; 0.05) \n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\n\n\n# MUST Use distance inverse distance, Further are smaller\nwm_idw &lt;- hunan %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1),\n         .before = 1)\n\n\nHCSA &lt;- wm_idw %&gt;%\n  mutate(local_Gi = local_gstar_perm(GDPPC, nb, wts, nsim = 99), .before = 1) %&gt;%\n  unnest(local_Gi) # Turn it into a table form\n\ndatatable(HCSA)\n\n\n\n\n\ngi_star value:\nLISA use cluster and outlier G*: Hot and cold spot\n\nh_pii_m &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value\", main.title.size = 1)\n\nh_ii_m &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I\", main.title.size = 1)\n\ntmap_arrange(h_pii_m, h_ii_m, ncol = 2)\n\n\n\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA %&gt;%\n  filter(p_sim &lt; 0.05) \n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "in-class_ex/ex06/ic_ex06.html#global-moran-i-permutation",
    "href": "in-class_ex/ex06/ic_ex06.html#global-moran-i-permutation",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "global_moran_perm(wm_q$GDPPC, wm_q$nb, wm_q$wt, nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\np-value: Is smaller Moran I: Is the same"
  },
  {
    "objectID": "in-class_ex/ex06/ic_ex06.html#local-moran-i-permutation",
    "href": "in-class_ex/ex06/ic_ex06.html#local-moran-i-permutation",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "lisa &lt;- wm_q %&gt;%\n  mutate(local_moran = local_moran(GDPPC, nb, wt, nsim = 99), .before = 1) %&gt;%\n  unnest(local_moran) # Turn it into a table form\n\ndatatable(lisa)\n\n\n\n\n\nii: local moran i p_ii: p-value with base method p_ii_sim: Based on simulation mean: label hotspots median: Use if there is significant no. of positive or negative skew Plot out skewness to see if you want to use median\n\ntmap_mode(\"plot\")\npii_m &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value\", main.title.size = 1)\n\nii_m &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\", main.title.size = 1)\n\ntmap_arrange(pii_m, ii_m, ncol = 2)\n\n\n\n\n\n\n\n\n\nlisa_sig &lt;- lisa %&gt;%\n  filter(p_ii &lt; 0.05) \n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "in-class_ex/ex06/ic_ex06.html#hot-spot-cold-spot-analysis",
    "href": "in-class_ex/ex06/ic_ex06.html#hot-spot-cold-spot-analysis",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "# MUST Use distance inverse distance, Further are smaller\nwm_idw &lt;- hunan %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1),\n         .before = 1)\n\n\nHCSA &lt;- wm_idw %&gt;%\n  mutate(local_Gi = local_gstar_perm(GDPPC, nb, wts, nsim = 99), .before = 1) %&gt;%\n  unnest(local_Gi) # Turn it into a table form\n\ndatatable(HCSA)\n\n\n\n\n\ngi_star value:\nLISA use cluster and outlier G*: Hot and cold spot\n\nh_pii_m &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value\", main.title.size = 1)\n\nh_ii_m &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I\", main.title.size = 1)\n\ntmap_arrange(h_pii_m, h_ii_m, ncol = 2)\n\n\n\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA %&gt;%\n  filter(p_sim &lt; 0.05) \n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "in-class_ex/ex10/ic_ex10.html",
    "href": "in-class_ex/ex10/ic_ex10.html",
    "title": "In-class Exercise 10",
    "section": "",
    "text": "1. Setup\n\npacman::p_load(olsrr, ggstatsplot, sf, tmap, tidyverse, performance, see, sfdep)\n\n\ncondo_resale &lt;- read_csv(\"data/aspatial/Condo_resale_2015.csv\")\ncondo_resale_sf &lt;- read_rds(\"data/rds/condo_resale_sf.rds\")\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/IS415-GAA/in-class_ex/ex10/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz &lt;- st_transform(mpsz, 3414)\n\n\nggcorrmat(condo_resale[, 5:23])\n\n\n\n\n\n\n\n\n\ncondo_mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD + LEASEHOLD_99YR, data=condo_resale_sf)\ncondo_mlr\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD + \n    LEASEHOLD_99YR, data = condo_resale_sf)\n\nCoefficients:\n         (Intercept)              AREA_SQM                   AGE  \n            543071.4               12688.7              -24566.0  \n            PROX_CBD        PROX_CHILDCARE      PROX_ELDERLYCARE  \n            -78122.0             -333219.0              170950.0  \nPROX_URA_GROWTH_AREA    PROX_HAWKER_MARKET     PROX_KINDERGARTEN  \n             38507.6               23801.2              144098.0  \n            PROX_MRT             PROX_PARK      PROX_PRIMARY_SCH  \n           -322775.9              564487.9              186170.5  \nPROX_TOP_PRIMARY_SCH    PROX_SHOPPING_MALL      PROX_SUPERMARKET  \n              -477.1             -207721.5              -48074.7  \n       PROX_BUS_STOP           NO_Of_UNITS       FAMILY_FRIENDLY  \n            675755.0                -216.2              142128.3  \n            FREEHOLD        LEASEHOLD_99YR  \n            300646.5              -77137.4  \n\n\n\nols_regress(condo_mlr)\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     750537.537 \nR-Squared                    0.652       MSE                571262902261.220 \nAdj. R-Squared               0.647       Coef. Var                    43.160 \nPred R-Squared               0.637       AIC                       42971.173 \nMAE                     412117.987       SBC                       43081.835 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.515738e+15          19        7.977571e+13    139.648    0.0000 \nResidual      8.089083e+14        1416    571262902261.220                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     543071.420    136210.918                   3.987    0.000     275874.535     810268.305 \n            AREA_SQM      12688.669       370.119        0.579     34.283    0.000      11962.627      13414.710 \n                 AGE     -24566.001      2766.041       -0.166     -8.881    0.000     -29991.980     -19140.022 \n            PROX_CBD     -78121.985      6791.377       -0.267    -11.503    0.000     -91444.227     -64799.744 \n      PROX_CHILDCARE    -333219.036    111020.303       -0.087     -3.001    0.003    -551000.984    -115437.089 \n    PROX_ELDERLYCARE     170949.961     42110.748        0.083      4.060    0.000      88343.803     253556.120 \nPROX_URA_GROWTH_AREA      38507.622     12523.661        0.059      3.075    0.002      13940.700      63074.545 \n  PROX_HAWKER_MARKET      23801.197     29299.923        0.019      0.812    0.417     -33674.725      81277.120 \n   PROX_KINDERGARTEN     144097.972     82738.669        0.030      1.742    0.082     -18205.570     306401.514 \n            PROX_MRT    -322775.874     58528.079       -0.123     -5.515    0.000    -437586.937    -207964.811 \n           PROX_PARK     564487.876     66563.011        0.148      8.481    0.000     433915.162     695060.590 \n    PROX_PRIMARY_SCH     186170.524     65515.193        0.072      2.842    0.005      57653.253     314687.795 \nPROX_TOP_PRIMARY_SCH       -477.073     20597.972       -0.001     -0.023    0.982     -40882.894      39928.747 \n  PROX_SHOPPING_MALL    -207721.520     42855.500       -0.109     -4.847    0.000    -291788.613    -123654.427 \n    PROX_SUPERMARKET     -48074.679     77145.257       -0.012     -0.623    0.533    -199405.956     103256.599 \n       PROX_BUS_STOP     675755.044    138551.991        0.133      4.877    0.000     403965.817     947544.272 \n         NO_Of_UNITS       -216.180        90.302       -0.046     -2.394    0.017       -393.320        -39.040 \n     FAMILY_FRIENDLY     142128.272     47055.082        0.056      3.020    0.003      49823.107     234433.438 \n            FREEHOLD     300646.543     77296.529        0.117      3.890    0.000     149018.525     452274.561 \n      LEASEHOLD_99YR     -77137.375     77570.869       -0.030     -0.994    0.320    -229303.551      75028.801 \n-----------------------------------------------------------------------------------------------------------------\n\n\nwill focus on p value for this in class, can have diff options though\nforward stepwise\nstepwise - see which one is more significant first then insert r square is increasing after ea iteration p val help to eliminate base model is alw 0 in forward\n\ncondo_fw_mlr &lt;- ols_step_forward_p(\n  condo_mlr,\n  p_val = 0.05,\n  details = FALSE\n)\ncondo_fw_mlr\n\n\n                                     Stepwise Summary                                      \n-----------------------------------------------------------------------------------------\nStep    Variable                   AIC          SBC         SBIC         R2       Adj. R2 \n-----------------------------------------------------------------------------------------\n 0      Base Model              44449.068    44459.608    40371.745    0.00000    0.00000 \n 1      AREA_SQM                43587.753    43603.562    39510.883    0.45184    0.45146 \n 2      PROX_CBD                43243.523    43264.602    39167.182    0.56928    0.56868 \n 3      PROX_PARK               43177.691    43204.039    39101.331    0.58915    0.58829 \n 4      FREEHOLD                43125.474    43157.092    39049.179    0.60438    0.60327 \n 5      AGE                     43069.222    43106.109    38993.167    0.62010    0.61878 \n 6      PROX_ELDERLYCARE        43046.515    43088.672    38970.548    0.62659    0.62502 \n 7      PROX_SHOPPING_MALL      43020.990    43068.417    38945.209    0.63367    0.63188 \n 8      PROX_URA_GROWTH_AREA    43009.092    43061.788    38933.407    0.63720    0.63517 \n 9      PROX_MRT                42999.058    43057.024    38923.483    0.64023    0.63796 \n 10     PROX_BUS_STOP           42984.951    43048.186    38909.582    0.64424    0.64175 \n 11     FAMILY_FRIENDLY         42981.085    43049.590    38905.797    0.64569    0.64296 \n 12     NO_Of_UNITS             42975.246    43049.021    38900.092    0.64762    0.64465 \n 13     PROX_CHILDCARE          42971.858    43050.902    38896.812    0.64894    0.64573 \n 14     PROX_PRIMARY_SCH        42966.758    43051.072    38891.872    0.65067    0.64723 \n-----------------------------------------------------------------------------------------\n\nFinal Model Output \n------------------\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.592 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.592                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n-----------------------------------------------------------------------------------------------------------------\n\n\nplot\nideally have curve not flat\n\nplot(condo_fw_mlr)\n\n\n\n\n\n\n\n\n\ncondo_bw_mlr &lt;- ols_step_backward_p(\n  condo_mlr,\n  p_val = 0.05,\n  details = FALSE\n)\ncondo_bw_mlr\n\n\n                                     Stepwise Summary                                      \n-----------------------------------------------------------------------------------------\nStep    Variable                   AIC          SBC         SBIC         R2       Adj. R2 \n-----------------------------------------------------------------------------------------\n 0      Full Model              42971.173    43081.835    38896.546    0.65203    0.64736 \n 1      PROX_TOP_PRIMARY_SCH    42969.173    43074.565    38894.518    0.65203    0.64761 \n 2      PROX_SUPERMARKET        42967.567    43067.689    38892.873    0.65193    0.64776 \n 3      PROX_HAWKER_MARKET      42966.461    43061.315    38891.719    0.65172    0.64779 \n 4      LEASEHOLD_99YR          42965.558    43055.141    38890.764    0.65145    0.64777 \n 5      PROX_KINDERGARTEN       42966.758    43051.072    38891.872    0.65067    0.64723 \n-----------------------------------------------------------------------------------------\n\nFinal Model Output \n------------------\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.592 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.592                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\nbackwards stepwise\nstart with full model\n\nplot(condo_bw_mlr)\n\n\n\n\n\n\n\n\n\ncondo_sb_mlr &lt;- ols_step_both_p(\n  condo_mlr,\n  p_val = 0.05,\n  details = FALSE\n)\ncondo_sb_mlr\n\n\n                                       Stepwise Summary                                        \n---------------------------------------------------------------------------------------------\nStep    Variable                       AIC          SBC         SBIC         R2       Adj. R2 \n---------------------------------------------------------------------------------------------\n 0      Base Model                  44449.068    44459.608    40371.745    0.00000    0.00000 \n 1      AREA_SQM (+)                43587.753    43603.562    39510.883    0.45184    0.45146 \n 2      PROX_CBD (+)                43243.523    43264.602    39167.182    0.56928    0.56868 \n 3      PROX_PARK (+)               43177.691    43204.039    39101.331    0.58915    0.58829 \n 4      FREEHOLD (+)                43125.474    43157.092    39049.179    0.60438    0.60327 \n 5      AGE (+)                     43069.222    43106.109    38993.167    0.62010    0.61878 \n 6      PROX_ELDERLYCARE (+)        43046.515    43088.672    38970.548    0.62659    0.62502 \n 7      PROX_SHOPPING_MALL (+)      43020.990    43068.417    38945.209    0.63367    0.63188 \n 8      PROX_URA_GROWTH_AREA (+)    43009.092    43061.788    38933.407    0.63720    0.63517 \n 9      PROX_MRT (+)                42999.058    43057.024    38923.483    0.64023    0.63796 \n 10     PROX_BUS_STOP (+)           42984.951    43048.186    38909.582    0.64424    0.64175 \n 11     FAMILY_FRIENDLY (+)         42981.085    43049.590    38905.797    0.64569    0.64296 \n 12     NO_Of_UNITS (+)             42975.246    43049.021    38900.092    0.64762    0.64465 \n 13     PROX_CHILDCARE (+)          42971.858    43050.902    38896.812    0.64894    0.64573 \n 14     PROX_PRIMARY_SCH (+)        42966.758    43051.072    38891.872    0.65067    0.64723 \n 15     PROX_KINDERGARTEN (+)       42965.558    43055.141    38890.764    0.65145    0.64777 \n---------------------------------------------------------------------------------------------\n\nFinal Model Output \n------------------\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751161.087 \nR-Squared                    0.651       MSE                570600646491.087 \nAdj. R-Squared               0.648       Coef. Var                    43.135 \nPred R-Squared               0.638       AIC                       42965.558 \nMAE                     413583.799       SBC                       43055.141 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.514394e+15          15        1.009596e+14    176.936    0.0000 \nResidual      8.102529e+14        1420    570600646491.087                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     459826.675    114616.014                   4.012    0.000     234991.777     684661.574 \n            AREA_SQM      12720.174       368.610        0.581     34.509    0.000      11997.096      13443.252 \n            PROX_CBD     -75676.065      5816.474       -0.258    -13.011    0.000     -87085.870     -64266.259 \n           PROX_PARK     575749.528     65523.382        0.151      8.787    0.000     447216.504     704282.552 \n            FREEHOLD     360203.286     48768.851        0.140      7.386    0.000     264536.552     455870.021 \n                 AGE     -24697.719      2752.751       -0.167     -8.972    0.000     -30097.615     -19297.824 \n    PROX_ELDERLYCARE     182435.081     39910.469        0.088      4.571    0.000     104145.268     260724.893 \n  PROX_SHOPPING_MALL    -224513.955     36588.872       -0.117     -6.136    0.000    -296288.004    -152739.906 \nPROX_URA_GROWTH_AREA      40145.474     11758.824        0.062      3.414    0.001      17078.942      63212.007 \n            PROX_MRT    -311753.202     57670.032       -0.119     -5.406    0.000    -424880.814    -198625.590 \n       PROX_BUS_STOP     711858.014    135420.040        0.140      5.257    0.000     446213.188     977502.840 \n     FAMILY_FRIENDLY     144034.218     46874.683        0.057      3.073    0.002      52083.153     235985.283 \n         NO_Of_UNITS       -236.270        88.032       -0.051     -2.684    0.007       -408.956        -63.583 \n      PROX_CHILDCARE    -336118.857    108331.761       -0.088     -3.103    0.002    -548626.339    -123611.374 \n    PROX_PRIMARY_SCH     162183.897     60202.895        0.063      2.694    0.007      44087.730     280280.063 \n   PROX_KINDERGARTEN     141915.768     79726.155        0.029      1.780    0.075     -14477.927     298309.464 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\nplot(condo_sb_mlr)\n\n\n\n\n\n\n\n\nmodel selection\nmodel is the wrapper for the stepwise need to use it to compare with lm()\n\nmetric &lt;- compare_performance(condo_mlr,\n                              condo_fw_mlr$model,\n                              condo_bw_mlr$model,\n                              condo_sb_mlr$model)\n\ngsub() to tidy test value in name field its nested as a sub model so need to clean it up using regex\n\nmetric$Name &lt;- gsub(\".*\\\\\\\\([a-zA-Z0-9_]+)\\\\\\\\, \\\\\\\\model\\\\\\\\.*\",\"\\\\1\", metric$Name)\n\nthe different indices are normalized and larger values indicate a better model performance. so points closer to the center indicates a worse fit indices\nblue is similar to brown one so it overlaps\nfrom see package\n\nplot(metric)\n\n\n\n\n\n\n\n\nvisualising model parameters\ncan see as a visual by sorting as ascending\n\nggcoefstats(condo_sb_mlr$model,\n            sort = \"ascending\")\n\n\n\n\n\n\n\n\nchecking for multicollinearity\n\ncheck_collinearity(condo_sb_mlr$model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n                 Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n             AREA_SQM 1.15 [1.10, 1.24]         1.07      0.87     [0.81, 0.91]\n             PROX_CBD 1.60 [1.50, 1.73]         1.27      0.62     [0.58, 0.67]\n            PROX_PARK 1.21 [1.15, 1.30]         1.10      0.83     [0.77, 0.87]\n             FREEHOLD 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n                  AGE 1.41 [1.33, 1.52]         1.19      0.71     [0.66, 0.75]\n     PROX_ELDERLYCARE 1.52 [1.42, 1.63]         1.23      0.66     [0.61, 0.70]\n   PROX_SHOPPING_MALL 1.49 [1.40, 1.60]         1.22      0.67     [0.62, 0.72]\n PROX_URA_GROWTH_AREA 1.33 [1.26, 1.43]         1.16      0.75     [0.70, 0.79]\n             PROX_MRT 1.96 [1.83, 2.13]         1.40      0.51     [0.47, 0.55]\n        PROX_BUS_STOP 2.89 [2.66, 3.15]         1.70      0.35     [0.32, 0.38]\n      FAMILY_FRIENDLY 1.38 [1.30, 1.48]         1.18      0.72     [0.67, 0.77]\n          NO_Of_UNITS 1.45 [1.37, 1.56]         1.21      0.69     [0.64, 0.73]\n       PROX_CHILDCARE 3.29 [3.02, 3.59]         1.81      0.30     [0.28, 0.33]\n     PROX_PRIMARY_SCH 2.21 [2.05, 2.40]         1.49      0.45     [0.42, 0.49]\n    PROX_KINDERGARTEN 1.11 [1.06, 1.20]         1.05      0.90     [0.84, 0.94]\n\n\nred no good blue still can green good\ntheme to make sure the labels dont overlap making it hard to read\nwhiskers mean confidence interval?\n\nplot(check_collinearity(condo_sb_mlr$model)) + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nlinearity assumption test\nhave 6 plots we only pick out 2nd one which is the linearity plot\nx is fitter value the sb_mlr\nfigure below reveals that most of the data points scattered around\n\nout &lt;- plot(check_model(condo_sb_mlr$model,\n                        panel = FALSE))\nout[[2]]\n\n\n\n\n\n\n\n\nnormality assumption test\nresidual of multiple linear regression mode is resemble normal distribution\n\nplot(check_normality(condo_sb_mlr$model))\n\n\n\n\n\n\n\n\nchecking outliers\nhas more method\ncook helps in visualising hence we pick it\n\noutliers &lt;- check_outliers(condo_sb_mlr$model,\n                           method = \"cook\")\noutliers\n\nOK: No outliers detected.\n- Based on the following method and threshold: cook (1).\n- For variable: (Whole model)\n\n\ncan use a visual one instead if dont want command line at a glance can see if there are any outliers\n\nplot(check_outliers(condo_sb_mlr$model,\n                           method = \"cook\"))\n\n\n\n\n\n\n\n\nspatially non-stationary assumption\nh0 - the residuals are randomly distributed (aka spatial stationary) h1 - the residuals are spatially non-stationary\nvisualising spatial non-stationary\n\nmlr_output &lt;- as.data.frame(condo_fw_mlr$model$residuals)"
  },
  {
    "objectID": "in-class_ex/ex03/ic_ex03.html",
    "href": "in-class_ex/ex03/ic_ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "1. Getting Started\nThe following code chunk uses p_load() to install and load the sf and tidyverse packages.\n\npacman::p_load(tmap, sf, raster, spatstat, maptools, sp, tidyverse)\n\n\n\n2. Importing data\nThe following code chunk will import the Master Plan data in ESRI shapefile and kml file format into R.\n\nmpsz_sf &lt;- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz_sf &lt;- st_set_crs(mpsz_sf, 3414)\n\nsg_sf &lt;- st_read(dsn = \"data\", layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\nsg_sf &lt;- st_set_crs(sg_sf, 3414)\n\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform( crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex03/data/child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nchildcare_sf &lt;- st_set_crs(childcare_sf, 3414)\n\n# st_union used to derive coastal outline sf data frame\nsg_sf &lt;- mpsz_sf %&gt;% st_union()\ntm_shape(sg_sf) + tm_borders()\n\n\n\n\n\n\n\n\nUpdated way of conversion is to use as_owin() and as_ppp() to convert sp dataframe Convert to Raster: spatstat use as(kd_childcareSG_adaptive, “SpatialGridDataFrame”) if maptools:: is not installed\n\nacled_sf &lt;- read_csv(\"./data/ACLED_Myanmar.csv\") %&gt;%\n  st_as_sf(coords= c(\"longitude\", \"latitude\"), crs=4326) %&gt;%\n  st_transform(crs = 32647) %&gt;%\n  mutate(event_date = dmy(event_date))\n\nqtm(acled_sf)"
  },
  {
    "objectID": "in-class_ex/ex05/ic_ex05.html",
    "href": "in-class_ex/ex05/ic_ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:3,7,15,16,31,32)\n\n\nwrite_rds(hunan, \"data/rds/hunan.rds\")\n\n\nhunan_sp &lt;- hunan %&gt;%\n  as_Spatial()\n\n\n# Geographically weighted summary statistics with adaptive bandwidth\nbw_AIC &lt;- bw.gwr(GDPPC ~ 1,\n                 data = hunan_sp,\n                 approach=\"AIC\",\n                 adaptive = TRUE,\n                 kernel = \"bisquare\",\n                 longlat = T)\n\nAdaptive bandwidth (number of nearest neighbours): 62 AICc value: 1923.156 \nAdaptive bandwidth (number of nearest neighbours): 46 AICc value: 1920.469 \nAdaptive bandwidth (number of nearest neighbours): 36 AICc value: 1917.324 \nAdaptive bandwidth (number of nearest neighbours): 29 AICc value: 1916.661 \nAdaptive bandwidth (number of nearest neighbours): 26 AICc value: 1914.897 \nAdaptive bandwidth (number of nearest neighbours): 22 AICc value: 1914.045 \nAdaptive bandwidth (number of nearest neighbours): 22 AICc value: 1914.045 \n\n\n\nbw_CV &lt;- bw.gwr(GDPPC ~ 1,\n                 data = hunan_sp,\n                 approach=\"CV\",\n                 adaptive = TRUE,\n                 kernel = \"bisquare\",\n                 longlat = T)\n\nAdaptive bandwidth: 62 CV score: 15515442343 \nAdaptive bandwidth: 46 CV score: 14937956887 \nAdaptive bandwidth: 36 CV score: 14408561608 \nAdaptive bandwidth: 29 CV score: 14198527496 \nAdaptive bandwidth: 26 CV score: 13898800611 \nAdaptive bandwidth: 22 CV score: 13662299974 \nAdaptive bandwidth: 22 CV score: 13662299974 \n\n\n\nbw_CV_fixed &lt;- bw.gwr(GDPPC ~ 1,\n                 data = hunan_sp,\n                 approach=\"CV\",\n                 adaptive = FALSE,\n                 kernel = \"bisquare\",\n                 longlat = T)\n\nFixed bandwidth: 357.4897 CV score: 16265191728 \nFixed bandwidth: 220.985 CV score: 14954930931 \nFixed bandwidth: 136.6204 CV score: 14134185837 \nFixed bandwidth: 84.48025 CV score: 13693362460 \nFixed bandwidth: 52.25585 CV score: Inf \nFixed bandwidth: 104.396 CV score: 13891052305 \nFixed bandwidth: 72.17162 CV score: 13577893677 \nFixed bandwidth: 64.56447 CV score: 14681160609 \nFixed bandwidth: 76.8731 CV score: 13444716890 \nFixed bandwidth: 79.77877 CV score: 13503296834 \nFixed bandwidth: 75.07729 CV score: 13452450771 \nFixed bandwidth: 77.98296 CV score: 13457916138 \nFixed bandwidth: 76.18716 CV score: 13442911302 \nFixed bandwidth: 75.76323 CV score: 13444600639 \nFixed bandwidth: 76.44916 CV score: 13442994078 \nFixed bandwidth: 76.02523 CV score: 13443285248 \nFixed bandwidth: 76.28724 CV score: 13442844774 \nFixed bandwidth: 76.34909 CV score: 13442864995 \nFixed bandwidth: 76.24901 CV score: 13442855596 \nFixed bandwidth: 76.31086 CV score: 13442847019 \nFixed bandwidth: 76.27264 CV score: 13442846793 \nFixed bandwidth: 76.29626 CV score: 13442844829 \nFixed bandwidth: 76.28166 CV score: 13442845238 \nFixed bandwidth: 76.29068 CV score: 13442844678 \nFixed bandwidth: 76.29281 CV score: 13442844691 \nFixed bandwidth: 76.28937 CV score: 13442844698 \nFixed bandwidth: 76.2915 CV score: 13442844676 \nFixed bandwidth: 76.292 CV score: 13442844679 \nFixed bandwidth: 76.29119 CV score: 13442844676 \nFixed bandwidth: 76.29099 CV score: 13442844676 \nFixed bandwidth: 76.29131 CV score: 13442844676 \nFixed bandwidth: 76.29138 CV score: 13442844676 \nFixed bandwidth: 76.29126 CV score: 13442844676 \nFixed bandwidth: 76.29123 CV score: 13442844676 \n\n\n\nbw_AIC_fixed &lt;- bw.gwr(GDPPC ~ 1,\n                 data = hunan_sp,\n                 approach=\"AIC\",\n                 adaptive = FALSE,\n                 kernel = \"bisquare\",\n                 longlat = T)\n\nFixed bandwidth: 357.4897 AICc value: 1927.631 \nFixed bandwidth: 220.985 AICc value: 1921.547 \nFixed bandwidth: 136.6204 AICc value: 1919.993 \nFixed bandwidth: 84.48025 AICc value: 1940.603 \nFixed bandwidth: 168.8448 AICc value: 1919.457 \nFixed bandwidth: 188.7606 AICc value: 1920.007 \nFixed bandwidth: 156.5362 AICc value: 1919.41 \nFixed bandwidth: 148.929 AICc value: 1919.527 \nFixed bandwidth: 161.2377 AICc value: 1919.392 \nFixed bandwidth: 164.1433 AICc value: 1919.403 \nFixed bandwidth: 159.4419 AICc value: 1919.393 \nFixed bandwidth: 162.3475 AICc value: 1919.394 \nFixed bandwidth: 160.5517 AICc value: 1919.391 \n\n\nComputing geographically weighted summary statistics\n\ngwstat &lt;- gwss(data= hunan_sp,\n               vars = \"GDPPC\",\n               bw = bw_AIC,\n               kernel = \"bisquare\",\n               adaptive = TRUE,\n               longlat = T)\n\nPrepare the output data\n\ngwstat_df &lt;- as.data.frame(gwstat$SDF)\n\n\nhunan_gstat &lt;- cbind(hunan, gwstat_df)\n\n\ntm_shape(hunan_gstat) +\n  tm_fill(\"GDPPC_LM\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Distributation of geographically weighted mean\",\n            main.title.position = \"center\",\n            main.title.size = 2.0,\n            legend.text.size = 1.2,\n            legend.height = 1.5,\n            legend.width = 1.5,\n            frame= TRUE)"
  }
]