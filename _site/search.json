[
  {
    "objectID": "listings.html",
    "href": "listings.html",
    "title": "Listings",
    "section": "",
    "text": "In-class Exercise 6\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with Spatial Autocorrelation\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 2\n\n\n\nTake-home\n\n\n\nIn this exercise, we will be analyzing drug use offence in Thailand from 2017 - 2022, using spatial autocorrelation techniques to identify clusters, outliers and hotspots of…\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 6\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver the Global and Local Spatial Autocorrelation Analysis Methods\n\n\n\nJeffery Lau\n\n\nSep 21, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 5\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with GWmodel\n\n\n\nJeffery Lau\n\n\nSep 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 5\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver the 1st and 2nd Order Spatial Point Patterns Analysis Methods\n\n\n\nJeffery Lau\n\n\nSep 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 4\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with sparr to perform spatial temporal analysis on our data\n\n\n\nJeffery Lau\n\n\nSep 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 4\n\n\n\nHands-on\n\n\n\nHands-on on Spatial-Temporal Analysis covered in In-class exercise 4\n\n\n\nJeffery Lau\n\n\nSep 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 1\n\n\n\nTake-home\n\n\n\nIn this exercise, We will be analyzing armed conflict data in Myanmar, using spatial point pattern analysis to understand the distribution and relationships between conflict…\n\n\n\nJeffery Lau\n\n\nSep 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 3\n\n\n\nIn-class\n\n\n\nIn this exercise we revisted on how to do proper CRS projection and transformations. Note: Last modified to update title only.\n\n\n\nJeffery Lau\n\n\nSep 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 3\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver the 1st and 2nd Order Spatial Point Patterns Analysis Methods\n\n\n\nJeffery Lau\n\n\nAug 30, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 2\n\n\n\nIn-class\n\n\n\nIn this exercise we learn to handle corrupted data, transforming CRS as well as some geoprocessing and joining of geospatial and aspatial data. Note: Last modified to update…\n\n\n\nJeffery Lau\n\n\nAug 26, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 2\n\n\n\nHands-on\n\n\n\nIn this exercise we work with themeatic mapping using tmap package to visualize our data\n\n\n\nJeffery Lau\n\n\nAug 19, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 1\n\n\n\nIn-class\n\n\n\nFirst lesson, learnt how to setup quatro doc. Note: Last modified to update title only.\n\n\n\nJeffery Lau\n\n\nAug 19, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 1\n\n\n\nHands-on\n\n\n\nIn this exercise we get our first hands-on with geoprocessing and basic plotting with R\n\n\n\nJeffery Lau\n\n\nAug 17, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "in-class_ex/ex02/ic_ex02.html",
    "href": "in-class_ex/ex02/ic_ex02.html",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "The following code chunk uses p_load() to install and load the sf and tidyverse packages.\n\npacman::p_load(sf, tidyverse, DT)"
  },
  {
    "objectID": "in-class_ex/ex02/ic_ex02.html#fixing-data-files",
    "href": "in-class_ex/ex02/ic_ex02.html#fixing-data-files",
    "title": "In-class Exercise 2",
    "section": "2.1 Fixing data files",
    "text": "2.1 Fixing data files\nNotice how much less tidy the kml file data is as compared to the shp file\n\nmpsz19_shp = st_read(dsn=\"data/MPSZ-2019\", layer=\"MPSZ-2019\") \n\nReading layer `MPSZ-2019' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex02/data/MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz19_kml = st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex02/data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nNotice that the CRS is also wrong, it is in GCS instead of PCS\n\n# Check CRS\nst_crs(mpsz19_shp)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n# Look up epsg code https://epsg.io/?q=3414\nmpsz19_shp &lt;- st_transform(mpsz19_shp, crs = 3414)\n\n# Check CRS again\nst_crs(mpsz19_shp)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "in-class_ex/ex02/ic_ex02.html#load-aspatial-data",
    "href": "in-class_ex/ex02/ic_ex02.html#load-aspatial-data",
    "title": "In-class Exercise 2",
    "section": "2.2 Load Aspatial Data",
    "text": "2.2 Load Aspatial Data\n\npopdata &lt;- read_csv(\"data/respopagesextod2023/respopagesextod2023.csv\")\n\nhead(popdata)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  &lt;chr&gt;      &lt;chr&gt;                  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;dbl&gt;\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2023\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats        0  2023\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2023\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2023\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2023\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    40  2023"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#loading-packages",
    "href": "in-class_ex/ex04/ic_ex04.html#loading-packages",
    "title": "In-class Exercise 4",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nWe will be loading the following packages, on top of the standard package with the additional sparr to work with spatio-temporal densities\n\npacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse)"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#import-data",
    "href": "in-class_ex/ex04/ic_ex04.html#import-data",
    "title": "In-class Exercise 4",
    "section": "2.2 Import data",
    "text": "2.2 Import data\nNext we import our data required, the boundary and forest fire data.\n\n# Load data\nkbb_sf &lt;- st_read(dsn = \"data/rawdata\", layer = \"Kepulauan_Bangka_Belitung\") %&gt;%\n  st_union() %&gt;%\n  st_zm(drop = TRUE, what = \"ZM\") %&gt;% \n  st_transform(crs = 32748)\n\nReading layer `Kepulauan_Bangka_Belitung' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex04/data/rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 298 features and 27 fields\nGeometry type: POLYGON\nDimension:     XYZ\nBounding box:  xmin: 105.1085 ymin: -3.116593 xmax: 106.8488 ymax: -1.501603\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nff_sf &lt;- read_csv(\"data/rawdata/forestfires.csv\") %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;% # Sequence always long then lat (x -&gt; y)\n  st_transform(crs = 32748)\n\nWe also create an owin for the boundary map\n\nkbb_owin &lt;- as.owin(kbb_sf)\nclass(kbb_owin)\n\n[1] \"owin\"\n\nplot(kbb_owin)"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#data-wrangling",
    "href": "in-class_ex/ex04/ic_ex04.html#data-wrangling",
    "title": "In-class Exercise 4",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\nStart by creating the year of day, month num and abbr for our forest fire\n\n# read_csv can detect the datetype\nff_sf &lt;- ff_sf %&gt;%\n  mutate(DayofYear = yday(acq_date)) %&gt;%\n  mutate(Month_num = month(acq_date)) %&gt;%\n  mutate(Month_fac = month(acq_date, label = T, abbr = F))\n\nff_sf\n\nSimple feature collection with 741 features and 16 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 521564.1 ymin: 9658137 xmax: 695791 ymax: 9828767\nProjected CRS: WGS 84 / UTM zone 48S\n# A tibble: 741 × 17\n   brightness  scan track acq_date   acq_time satellite instrument confidence\n *      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;date&gt;        &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;           &lt;dbl&gt;\n 1       312.   1.3   1.1 2023-01-10      629 Aqua      MODIS              67\n 2       314.   1.2   1.1 2023-01-10      629 Aqua      MODIS              70\n 3       315.   1.2   1.1 2023-01-10      629 Aqua      MODIS              71\n 4       309.   1.2   1.1 2023-01-10      629 Aqua      MODIS              54\n 5       308.   1.2   1.1 2023-01-10      629 Aqua      MODIS              33\n 6       322.   1.3   1.1 2023-01-10      629 Aqua      MODIS              72\n 7       318.   1.2   1.1 2023-01-10      629 Aqua      MODIS              71\n 8       318.   1.2   1.1 2023-01-10      629 Aqua      MODIS              75\n 9       327.   2     1.4 2023-01-12      616 Aqua      MODIS              73\n10       321.   2     1.4 2023-01-12      616 Aqua      MODIS              75\n# ℹ 731 more rows\n# ℹ 9 more variables: version &lt;dbl&gt;, bright_t31 &lt;dbl&gt;, frp &lt;dbl&gt;,\n#   daynight &lt;chr&gt;, type &lt;dbl&gt;, geometry &lt;POINT [m]&gt;, DayofYear &lt;dbl&gt;,\n#   Month_num &lt;dbl&gt;, Month_fac &lt;ord&gt;"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#data-exploration",
    "href": "in-class_ex/ex04/ic_ex04.html#data-exploration",
    "title": "In-class Exercise 4",
    "section": "2.4 Data Exploration",
    "text": "2.4 Data Exploration\n\ntm_shape(kbb_sf) + tm_polygons() + \n  tm_shape(ff_sf) + tm_bubbles(size = 0.1, col = \"brightness\") # (markets, symbol -&gt; own emblem), bubbles, squares\n\n\n\n\n\n\n\n\n\ntm_shape(kbb_sf) + tm_polygons() +\n  tm_shape(ff_sf) + tm_squares(size = 0.1) +\n  tm_facets(by=\"Month_fac\",\n            free.coords = F,\n            drop.units = T)"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#data-preparation",
    "href": "in-class_ex/ex04/ic_ex04.html#data-preparation",
    "title": "In-class Exercise 4",
    "section": "3.1 Data Preparation",
    "text": "3.1 Data Preparation\nGet fire month with geometry\n\nff_month &lt;- ff_sf %&gt;%\n  select(Month_num)\n\nConvert to ppp\n\nff_month_ppp &lt;- as.ppp(ff_month)\nplot(ff_month_ppp)\n\n\n\n\n\n\n\n\nNo duplicates detected\n\nany(duplicated(ff_month_ppp))\n\n[1] FALSE\n\n\n\nff_ppp_owin &lt;- ff_month_ppp[kbb_owin]\nplot(ff_ppp_owin)"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#compute-st-kde",
    "href": "in-class_ex/ex04/ic_ex04.html#compute-st-kde",
    "title": "In-class Exercise 4",
    "section": "3.2 Compute ST KDE",
    "text": "3.2 Compute ST KDE\n\nst_kde &lt;- spattemp.density(ff_ppp_owin)\nsummary(st_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 15102.47 (spatial)\n  lambda = 0.0304 (temporal)\n\nNo. of observations\n  741 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512066.8, 705559.4] x [9655398, 9834006]\n\nTemporal bound\n  [1, 12]\n\nEvaluation\n  128 x 128 x 12 trivariate lattice\n  Density range: [1.233458e-27, 8.202976e-10]\n\n\nVisualize the kde\n\ntims &lt;- c(7,8,9,10,11,12)\npar(mfcol = c(2,3))\nfor(i in tims) {\n  plot(st_kde, i,\n       override.par = F,\n       fix.range = T,\n       main=paste(\"KDE at month\",i))\n  }"
  },
  {
    "objectID": "in-class_ex/ex04/ic_ex04.html#altenative-method",
    "href": "in-class_ex/ex04/ic_ex04.html#altenative-method",
    "title": "In-class Exercise 4",
    "section": "3.3 Altenative method",
    "text": "3.3 Altenative method\n\nff_doy &lt;- ff_sf %&gt;%\n  select(DayofYear) %&gt;% \n  as.ppp()\n\nff_doy_owin &lt;- ff_doy[kbb_owin]\nplot(ff_doy_owin)\n\n\n\n\n\n\n\n\n\n# Take yday owin\nst_doy_kde &lt;- spattemp.density(ff_doy_owin)\nsummary(st_doy_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 15102.47 (spatial)\n  lambda = 6.3198 (temporal)\n\nNo. of observations\n  741 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512066.8, 705559.4] x [9655398, 9834006]\n\nTemporal bound\n  [10, 352]\n\nEvaluation\n  128 x 128 x 343 trivariate lattice\n  Density range: [3.959516e-27, 2.751287e-12]\n\n\nCheckout animation (https://tilmandavies.github.io/sparr/articles/fmd_animation/fmd_animation.html) to see the diffusion"
  },
  {
    "objectID": "in-class_ex/ex06/ic_ex06.html",
    "href": "in-class_ex/ex06/ic_ex06.html",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, tidyverse, DT)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex06/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:3,7,15,16,31,32)\n\n\n# nb: A neighbor list object created by st_neighbor\n# style: \"W\" for standardized weights\n# .before = 1: Insert into the front\n# Returns a table with the neighbors that can be viewed\n\nwm_q &lt;- hunan %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb, style = \"W\"), .before = 1)\n\ndatatable(wm_q)\n\n\n\n\n\n\nmoranI &lt;- global_moran(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n\nglimpse(moranI)\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\nK is average neighbours found\n\n# Performs a basic test\nglobal_moran_test(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\np-value: &lt; 0.05, enough statistical evidence we can reject null hypothesis, does not conform to random distribution (95% sure) - Fail to reject null hypothesis if greater than 0.05 no point proceeding Moran I: Greater than 0 suggest clustering in the data, but is a relatively low clustering\n\n# Always best practice to set seed before simulation\nset.seed(1234)\n\n\n\n\nglobal_moran_perm(wm_q$GDPPC, wm_q$nb, wm_q$wt, nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\np-value: Is smaller Moran I: Is the same\n\n\n\n\nlisa &lt;- wm_q %&gt;%\n  mutate(local_moran = local_moran(GDPPC, nb, wt, nsim = 99), .before = 1) %&gt;%\n  unnest(local_moran) # Turn it into a table form\n\ndatatable(lisa)\n\n\n\n\n\nii: local moran i p_ii: p-value with base method p_ii_sim: Based on simulation mean: label hotspots median: Use if there is significant no. of positive or negative skew Plot out skewness to see if you want to use median\n\ntmap_mode(\"plot\")\npii_m &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value\", main.title.size = 1)\n\nii_m &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\", main.title.size = 1)\n\ntmap_arrange(pii_m, ii_m, ncol = 2)\n\n\n\n\n\n\n\n\n\nlisa_sig &lt;- lisa %&gt;%\n  filter(p_ii &lt; 0.05) \n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\n\n\n# MUST Use distance inverse distance, Further are smaller\nwm_idw &lt;- hunan %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1),\n         .before = 1)\n\n\nHCSA &lt;- wm_idw %&gt;%\n  mutate(local_Gi = local_gstar_perm(GDPPC, nb, wts, nsim = 99), .before = 1) %&gt;%\n  unnest(local_Gi) # Turn it into a table form\n\ndatatable(HCSA)\n\n\n\n\n\ngi_star value:\nLISA use cluster and outlier G*: Hot and cold spot\n\nh_pii_m &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value\", main.title.size = 1)\n\nh_ii_m &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I\", main.title.size = 1)\n\ntmap_arrange(h_pii_m, h_ii_m, ncol = 2)\n\n\n\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA %&gt;%\n  filter(p_sim &lt; 0.05) \n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "in-class_ex/ex06/ic_ex06.html#global-moran-i-permutation",
    "href": "in-class_ex/ex06/ic_ex06.html#global-moran-i-permutation",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "global_moran_perm(wm_q$GDPPC, wm_q$nb, wm_q$wt, nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\np-value: Is smaller Moran I: Is the same"
  },
  {
    "objectID": "in-class_ex/ex06/ic_ex06.html#local-moran-i-permutation",
    "href": "in-class_ex/ex06/ic_ex06.html#local-moran-i-permutation",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "lisa &lt;- wm_q %&gt;%\n  mutate(local_moran = local_moran(GDPPC, nb, wt, nsim = 99), .before = 1) %&gt;%\n  unnest(local_moran) # Turn it into a table form\n\ndatatable(lisa)\n\n\n\n\n\nii: local moran i p_ii: p-value with base method p_ii_sim: Based on simulation mean: label hotspots median: Use if there is significant no. of positive or negative skew Plot out skewness to see if you want to use median\n\ntmap_mode(\"plot\")\npii_m &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value\", main.title.size = 1)\n\nii_m &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I\", main.title.size = 1)\n\ntmap_arrange(pii_m, ii_m, ncol = 2)\n\n\n\n\n\n\n\n\n\nlisa_sig &lt;- lisa %&gt;%\n  filter(p_ii &lt; 0.05) \n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "in-class_ex/ex06/ic_ex06.html#hot-spot-cold-spot-analysis",
    "href": "in-class_ex/ex06/ic_ex06.html#hot-spot-cold-spot-analysis",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "# MUST Use distance inverse distance, Further are smaller\nwm_idw &lt;- hunan %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1),\n         .before = 1)\n\n\nHCSA &lt;- wm_idw %&gt;%\n  mutate(local_Gi = local_gstar_perm(GDPPC, nb, wts, nsim = 99), .before = 1) %&gt;%\n  unnest(local_Gi) # Turn it into a table form\n\ndatatable(HCSA)\n\n\n\n\n\ngi_star value:\nLISA use cluster and outlier G*: Hot and cold spot\n\nh_pii_m &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value\", main.title.size = 1)\n\nh_ii_m &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I\", main.title.size = 1)\n\ntmap_arrange(h_pii_m, h_ii_m, ncol = 2)\n\n\n\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA %&gt;%\n  filter(p_sim &lt; 0.05) \n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html",
    "href": "take-home_ex/ex01/th_ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In 2024 armed conflict continues to be a devastating global issue, with millions of people affected each year. Recent years have seen a surge in conflicts, driven by factors such as political instability, regional tensions, and resource scarcity. Myanmar, in particular, has experienced significant armed conflict in recent years, including the 2021 military coup and subsequent violence.\nTODO: Lit review\n\n\n\n\nAnalyze the spatial distribution of armed conflict events in Myanmar.\nIdentify patterns and trends in the temporal distribution of conflict events.\nIdentify potential hotspots of conflict activity.\nProvide insights for policymakers and humanitarian organizations working to address the conflict in Myanmar."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#context",
    "href": "take-home_ex/ex01/th_ex01.html#context",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In 2024 armed conflict continues to be a devastating global issue, with millions of people affected each year. Recent years have seen a surge in conflicts, driven by factors such as political instability, regional tensions, and resource scarcity. Myanmar, in particular, has experienced significant armed conflict in recent years, including the 2021 military coup and subsequent violence.\nTODO: Lit review"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#objectives",
    "href": "take-home_ex/ex01/th_ex01.html#objectives",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Analyze the spatial distribution of armed conflict events in Myanmar.\nIdentify patterns and trends in the temporal distribution of conflict events.\nIdentify potential hotspots of conflict activity.\nProvide insights for policymakers and humanitarian organizations working to address the conflict in Myanmar."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#loading-packages",
    "href": "take-home_ex/ex01/th_ex01.html#loading-packages",
    "title": "Take-home Exercise 1",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nIn this project we will be using the following packages:\n\ntmap: A package for creating thematic maps in R. It provides a simple and flexible interface for customizing maps and exporting them in various formats.\nsf: A package for simple feature data, which is a modern standard for representing geographic features. It provides efficient data structures and functions for spatial operations.\nraster: A package for working with raster data, such as images and digital elevation models. It offers tools for reading, writing, manipulating, and analyzing raster data.\nspatstat: A package for spatial point pattern analysis. It provides functions for analyzing the distribution and relationships between points in a study area.\nmaptools: A package for reading and writing various spatial data formats, including shapefiles and KML. It also provides tools for converting between different spatial data structures.\nsp: A package for spatial data in R. It provides classes and functions for representing and manipulating spatial data, such as points, lines, and polygons.\ntidyverse: A collection of R packages designed for data manipulation, visualization, and analysis. It includes packages like dplyr, ggplot2, and tidyr, which are commonly used in data science workflows.\n\n\npacman::p_load(tmap, sf, raster, spatstat, sparr, maptools, sp, tidyverse, DT, gridExtra, animation)"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#loading-data",
    "href": "take-home_ex/ex01/th_ex01.html#loading-data",
    "title": "Take-home Exercise 1",
    "section": "2.2 Loading Data",
    "text": "2.2 Loading Data\nThe dataset used in this analysis is sourced from the Armed Conflict Location & Event Data (ACLED) database. It contains information on various types of armed conflict events, including Battles, Explosion/Remote violence, Strategic developments, Protest, Riots, and Violence against civilians. The data covers the period from January 2021 to June 2024 and provides specific details such as event date, location coordinates, actor information, and more.\n\n# Read CSV files\nacled_2021_23 &lt;- read_csv(\"data/aspatial/2021-2023-Myanmar.csv\")\nacled_2024 &lt;- read_csv(\"data/aspatial/2024-Myanmar.csv\")\n\nNext we load Myanmar District and State Boundary from Myanmar Information Management Unit (MIMU) and projected onto the correct CRS.\n\n# Read Myanmar Boundary\nmym_sf &lt;- st_read(dsn = \"data/geospatial\", \n                      layer = \"mmr_polbnda_adm2_250k_mimu\") %&gt;%\n              st_transform(crs = 32647)\n\nReading layer `mmr_polbnda_adm2_250k_mimu' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/take-home_ex/ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 80 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\nmym_st_sf &lt;- st_read(dsn = \"data/geospatial\", \n                      layer = \"mmr_polbnda_adm1_250k_mimu_1\") %&gt;%\n              st_transform(crs = 32647)\n\nReading layer `mmr_polbnda_adm1_250k_mimu_1' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/take-home_ex/ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 15 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#crs-projection-formatting",
    "href": "take-home_ex/ex01/th_ex01.html#crs-projection-formatting",
    "title": "Take-home Exercise 1",
    "section": "3.1 CRS Projection & Formatting",
    "text": "3.1 CRS Projection & Formatting\nThe initial step involved reading the ACLED data into R and converting it into a sf data frame, specifying the longitude and latitude columns as coordinates and the WGS84 coordinate reference system (CRS). To ensure consistency with the administrative boundary data, the CRS was projected to EPSG:32647.\nAdditional data cleaning and preparation steps were performed, including handling missing values and formatting dates.\n\n# Combine data frames\nacled_combined &lt;- bind_rows(acled_2021_23, acled_2024)\n\nacled_full_sf &lt;- acled_combined %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;%\n  st_transform(crs = 32647) %&gt;%\n  mutate(event_date = dmy(event_date))"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#data-cleaning",
    "href": "take-home_ex/ex01/th_ex01.html#data-cleaning",
    "title": "Take-home Exercise 1",
    "section": "3.2 Data Cleaning",
    "text": "3.2 Data Cleaning\nWe conducted a preliminary data quality check on our key spatial features to ensure data integrity. While no missing values were found in the columns, we did identify duplicate geometries. This is not unexpected, as the data represents a time series, and multiple events may occur in the same location over time.\n\n# Check for null values in key columns\nna_count &lt;- acled_full_sf %&gt;%\n  summarise(na_geometry = sum(is.na(geometry)),\n            na_event_date = sum(is.na(event_date)))\n\n# Check for null values in key columns\nduplicate_count &lt;- acled_full_sf %&gt;%\n  summarise(duplicate_event_id = sum(duplicated(event_id_cnty)),\n            duplicate_geometry = sum(duplicated(geometry)))\n\nprint(na_count)\n\nSimple feature collection with 1 feature and 2 fields\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: -208804.4 ymin: 1103500 xmax: 640934.5 ymax: 3042960\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 1 × 3\n  na_geometry na_event_date                                             geometry\n        &lt;int&gt;         &lt;int&gt;                                     &lt;MULTIPOINT [m]&gt;\n1           0             0 ((-208804.4 2357274), (-207135 2358896), (-206931.7…\n\nprint(duplicate_count)\n\nSimple feature collection with 1 feature and 2 fields\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: -208804.4 ymin: 1103500 xmax: 640934.5 ymax: 3042960\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 1 × 3\n  duplicate_event_id duplicate_geometry                                 geometry\n               &lt;int&gt;              &lt;int&gt;                         &lt;MULTIPOINT [m]&gt;\n1                  0              44101 ((-208804.4 2357274), (-207135 2358896)…"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#data-wrangling",
    "href": "take-home_ex/ex01/th_ex01.html#data-wrangling",
    "title": "Take-home Exercise 1",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\nTo prepare our dataframe for subsequent geoprocessing, we performed necessary data joining and processing steps. We then saved the processed state of the dataframe for future reference and analysis.\n\n3.3.1 Joining with District Data\nWe will start by adding the district and state into our acled_sf dataframe using a spatial join\n\nacled_sf &lt;- st_join(acled_full_sf, mym_sf) %&gt;%\n  dplyr::select(event_date, event_type, fatalities, ST, DT, admin1, geometry) %&gt;%\n  rename(state = ST, district = DT)\n\n\n\n3.3.2 Missing Fields (State)\nUpon joining the dataframes, we observed that a small number of points were located outside the boundary dataframe. However, this is not a significant concern for our subsequent analysis, as we will be focusing on other states.\n\ndatatable(acled_sf %&gt;% \n        filter(is.na(state)) %&gt;%\n        dplyr::select(event_date, event_type, admin1)\n      )\n\n\n\n\n\n\n\n3.3.3 Adding Quarter and Saving RDS\nWe will also be extracting out the quarters and years for our subsequent analysis.\n\nacled_sf &lt;- acled_sf %&gt;%\n  mutate(quarter = quarter(event_date, with_year = TRUE)) %&gt;%\n  mutate(year = year(event_date)) %&gt;%\n  dplyr::select(-admin1)\n\nacled_sf\n\nSimple feature collection with 51553 features and 7 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -208804.4 ymin: 1103500 xmax: 640934.5 ymax: 3042960\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 51,553 × 8\n   event_date event_type     fatalities state district            geometry\n   &lt;date&gt;     &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;            &lt;POINT [m]&gt;\n 1 2023-12-31 Explosions/Re…          0 Mon   Mawlamy…  (393190.2 1690159)\n 2 2023-12-31 Explosions/Re…          0 Rakh… Maungdaw (-183852.6 2305258)\n 3 2023-12-31 Battles                 4 Bago… Thayarw…    (165427 2062239)\n 4 2023-12-31 Strategic dev…          0 Bago… Thayarw…    (165427 2062239)\n 5 2023-12-31 Explosions/Re…          1 Saga… Katha     (202852.5 2640880)\n 6 2023-12-31 Battles                 0 Shan… Muse      (391530.9 2594611)\n 7 2023-12-31 Explosions/Re…          0 Mon   Mawlamy…  (391095.1 1692216)\n 8 2023-12-31 Battles                 1 Saga… Monywa    (115044.9 2432742)\n 9 2023-12-31 Violence agai…          1 Saga… Kanbalu   (153264.2 2542964)\n10 2023-12-31 Violence agai…          1 Mon   Thaton    (335571.8 1837874)\n# ℹ 51,543 more rows\n# ℹ 2 more variables: quarter &lt;dbl&gt;, year &lt;dbl&gt;\n\n\n\n\n3.3.4 Saving sf Dataframe\nNext we store the processed sf dataframe as rds for subsequent usage.\n\nwrite_rds(acled_sf, \"data/rds/acled_sf.rds\")\nwrite_rds(mym_sf, \"data/rds/mym_sf.rds\")\nwrite_rds(mym_st_sf, \"data/rds/mym_st_sf.rds\")"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#selecting-area-of-study",
    "href": "take-home_ex/ex01/th_ex01.html#selecting-area-of-study",
    "title": "Take-home Exercise 1",
    "section": "4.1 Selecting Area of Study",
    "text": "4.1 Selecting Area of Study\nTo identify suitable areas for in-depth analysis, we examined the overall distribution of conflict events across Myanmar. This initial exploration helped us select regions of particular interest for further investigation.\n\n4.1.1 Overall Distribution (Points)\nOur initial visualization of conflict events on the map of Myanmar revealed distinct clusters around the central regions of Sagaing, Mandalay, and Magway. This observation suggests that these areas may have experienced higher concentrations of conflict activity.\n\nstate_m &lt;- tm_shape(mym_st_sf) +\n  tm_polygons() +\n  tm_text(\"ST\", size = 0.5) +\n  tm_layout(title = \"State\")\n\ndistribution_m &lt;- tm_shape(mym_st_sf) +\n  tm_polygons() +\n  tm_shape(acled_sf) +\n  tm_dots(col = \"red\", alpha = 0.03, size = 0.01) +\n  tm_layout(title = \"Distribution\")\n\ntmap_arrange(state_m, distribution_m, asp = 1, ncol = 2)\n\n\n\n\n\n\n\n\n\n\n4.1.2 Overall Distribution (Districts)\nTo further validate our previous observations, we created a choropleth map to visualize the spatial distribution of conflict events. This map confirmed the concentration of conflict activity in the central states.\n\nacled_by_district &lt;- acled_sf %&gt;%\n  group_by(district) %&gt;%\n  summarize(event_count = n())\n\n# Join the event count data with the region polygon data\njoined_data &lt;- st_join(mym_sf, acled_by_district)\n\nchoropleth_m &lt;- tm_shape(joined_data) +\n  tm_polygons(col = \"event_count\", style = \"jenks\", palette = \"YlOrRd\") +\n  tm_layout(title = \"Event Count\")\n\ntmap_arrange(state_m, choropleth_m, asp = 1, ncol = 2)\n\n\n\n\n\n\n\n\n\n\n4.1.3 Event Count by State\nThe following datatables shows that over the four-year period, Sagaing, Mandalay, and Magway experienced the highest number of conflict events.\n\nsummary_table &lt;- acled_sf %&gt;%\n  st_drop_geometry() %&gt;% # Remove geometry for faster processing\n  group_by(state) %&gt;%\n  tally(name = \"event_count\") %&gt;%\n  arrange(desc(event_count))\n\ndatatable(summary_table)\n\n\n\n\n\n\n\n\n\n\n\nSelected State\n\n\n\nWhile Sagaing and Mandalay have received significant attention due to their higher levels of conflict and population density, we have chosen to focus our analysis on Magway. This state offers a unique perspective due to its diverse ethnic composition, including Chin, Rakhine, Shan, and Karen populations. By examining Magway, we can gain valuable insights into the potential spillover effects from neighboring conflict zones and conduct a more in-depth analysis of the state’s internal dynamics."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#viewing-the-timeline",
    "href": "take-home_ex/ex01/th_ex01.html#viewing-the-timeline",
    "title": "Take-home Exercise 1",
    "section": "4.2 Viewing the timeline",
    "text": "4.2 Viewing the timeline\nTo understand the temporal dynamics of conflict and its spatial distribution, we will analyze the data for the selected states. Before proceeding, we will partition the conflict and boundary dataframes into three groups: the three states of interest and Magway alone. This separation will allow us to focus on specific regions and analyze their unique characteristics.\n\n# Filter for Magway Surrounding Neigbours\nacled_msm_sf &lt;- acled_sf %&gt;%\n  filter(state %in% c(\"Magway\", \"Sagaing\", \"Mandalay\"))\n\nmsm_sf &lt;- mym_st_sf %&gt;%\n  filter(ST %in% c(\"Magway\", \"Sagaing\", \"Mandalay\"))\n\n# Filter for \"Magway\" in both data frames\nacled_sf &lt;- acled_sf %&gt;%\n  filter(state == \"Magway\")\n\nmagway_sf &lt;- mym_sf %&gt;%\n  filter(ST == \"Magway\")\n\n\n4.2.1 Histogram of Events (Magway)\nFrom the histogram of event types reveals that the events were initially dominated by protests, the frequency of battles has steadily increased, while protests have declined. Although the overall number of conflict events has shown a general downward trend since its peak in 2022, battles currently constitute the majority of incidents.\n\nggplot(acled_sf, aes(x = event_date, fill = event_type)) +\n  geom_histogram(binwidth = 15, position = \"stack\") +\n  scale_fill_brewer(palette = \"Spectral\") +\n  labs(title = \"Stacked Histogram of Event Dates by Event Type\",\n       x = \"Event Date\",\n       y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n4.2.2 Distribution of Events (Magway)\nOur pie charts further validates the observation that protests were more prevalent at the beginning of the time period, while battles have become more frequent in recent months. This shift in the composition of conflict events highlights the evolving dynamics of the conflict.\n\n# Filter data by year\nyear_acled_sf &lt;- list()\nfor (yr in 2021:2024) {\n  year_acled_sf[[yr - 2020]] &lt;- acled_sf %&gt;% filter(year == yr)\n}\n\n# Create pie charts for each year\netc_plot &lt;- list()\nyr&lt;-0\nfor (year_acled in year_acled_sf) {\n  yr&lt;-yr+1\n  etc_plot[[yr]] &lt;- ggplot(year_acled  %&gt;% count(event_type), aes(x = \"\", y = n, fill = event_type)) +\n  geom_bar(stat = \"identity\", color = \"white\") +\n  geom_text(aes(label = n), position = position_stack(vjust = 0.5)) +\n  coord_polar(theta = \"y\") +\n  scale_fill_brewer(palette = \"Spectral\") +\n  labs(title = as.character(yr+2020)) +\n  theme_void()\n}\n\n# Arrange the charts in a 2x2 grid\ngrid.arrange(etc_plot[[1]], etc_plot[[2]], etc_plot[[3]], etc_plot[[4]], ncol = 2)\n\n\n\n\n\n\n\n\nWe can also see in following majoritiy of the events occur on the northern border with Sagaing.\n\nmagway_plot &lt;- list()\n\nyr&lt;-0\nfor (year_acled in year_acled_sf) {\n  yr &lt;- yr + 1\n  magway_plot[[yr]] &lt;- tm_shape(magway_sf) +\n  tm_polygons() +\n  tm_shape(year_acled) +\n  tm_dots(col = \"event_type\", alpha = 0.5, size = 0.1, palette = \"Spectral\") +\n  tm_layout(title = paste(\"Events \", as.character(yr + 2020)))\n}\n\ntmap_arrange(magway_plot, asp = 2, nrow = 2, ncol = 2)"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#eventfatalities-insights",
    "href": "take-home_ex/ex01/th_ex01.html#eventfatalities-insights",
    "title": "Take-home Exercise 1",
    "section": "4.3 Event/Fatalities Insights",
    "text": "4.3 Event/Fatalities Insights\nOur boxplot also suggests that battles are associated with the highest number of fatalities, while protests generally have lower fatality counts.\n\nggplot(acled_sf, aes(x = event_type, y = fatalities)) +\n  geom_boxplot(color = \"darkorange\") +\n  labs(title = \"Relationship Between Fatalities and Event Type\",\n       x = \"Event Type\",\n       y = \"Fatalities\") +\n  coord_flip() +\n  theme(axis.text.y = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelection of Event Type\n\n\n\nGiven the distinct patterns observed in fatalities and the development of event types, we will focus our subsequent analysis on Battles, Explosions, Violence against Civilians, and Protests."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#preparation",
    "href": "take-home_ex/ex01/th_ex01.html#preparation",
    "title": "Take-home Exercise 1",
    "section": "5.1 Preparation",
    "text": "5.1 Preparation\nTo streamline our analysis, we have created reusable functions for common tasks. These functions facilitate the conversion of data to ppp format, confinement to specific regions, jittering for spatial randomness, rescaling, and the transformation of KDE results into raster format.\n\n5.1.1 Convert and Rescale\nIn this function we perform the following: 1. Convert event sf to ppp 2. Convert boundary sf to ppp 3. Jitter any duplicates (If any) 4. Rescale from m to km\n\nrescale_ppp_km &lt;- function(ppp_sf, owin_sf) {\n  # Converting sf to ppp\n  ppp &lt;- as.ppp(ppp_sf)\n  \n  # Converting sf to owin\n  owin &lt;- as.owin(owin_sf %&gt;% st_union())\n  \n  # Apply jitter duplicate exist\n  if (any(duplicated(ppp))) {\n    ppp &lt;- rjitter(ppp,\n                   retry = TRUE,\n                   nsimm = 1,\n                   drop = TRUE)\n  }\n\n  # Confine and rescale ppp\n  return(rescale(ppp[owin], 1000, \"km\"))\n}\n\n\n\n5.1.2 Convert KDE to Raster\n\nkde_to_raster &lt;- function(kde) {\n  kde_raster &lt;- raster(as.SpatialGridDataFrame.im(kde))\n  projection(kde_raster) &lt;- CRS(\"+init=EPSG:32647\")\n  return(kde_raster)\n}\n\n\n\n5.1.3 Prepping PPP\nNext lets prep the ppp objects for later use\n\n5.1.3.1 Magway\n\nPPPMap Boundary\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_sf, magway_sf)\n\nplot(acled_ppp_km)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = magway_sf) +\n  geom_sf(fill = \"lightblue\") +\n  geom_sf_label(aes(label = DT), size = 3, repel = TRUE) +\n  labs(title = \"District Boundaries\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.1.3.2 Magway, Sagaing & Mandalay\n\nPPPMap Boundary\n\n\n\nacled_msm_ppp_km &lt;- rescale_ppp_km(acled_msm_sf, msm_sf)\n\nplot(acled_msm_ppp_km)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = msm_sf) +\n  geom_sf(fill = \"lightblue\") +\n  geom_sf_label(aes(label = ST), size = 3, repel = TRUE) +\n  labs(title = \"State Boundaries\") +\n  theme_bw()"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#first-order-analysis",
    "href": "take-home_ex/ex01/th_ex01.html#first-order-analysis",
    "title": "Take-home Exercise 1",
    "section": "5.2 First Order Analysis",
    "text": "5.2 First Order Analysis\nOur initial analysis focuses on visualizing the spatial distribution of conflict events on inter-state, state and district level, across the time and event types using the density from the Spatstat package to derive the kernel density of area of study\n\n5.2.1 Picking a Density BW\nWe will be starting with finding a suitable Bandwidth for our data. As the area of study is large, making point events sparse, the bandwidth needs to be carefully considered for the best representation.\n\nPPLScottAdaptiveManual (10km)\n\n\n\nacled_ppp_kde_ppl = density(acled_ppp_km, \n                        sigma = bw.ppl, \n                        edge = TRUE, \n                        kernel = \"gaussian\")\n\nplot(acled_ppp_kde_ppl, main = \"PPL bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\nacled_ppp_kde_scott = density(acled_ppp_km, \n                        sigma = bw.scott,\n                        edge = TRUE, \n                        kernel = \"gaussian\")\n\nplot(acled_ppp_kde_scott, main = \"Scott bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\nacled_ppp_kde_adaptive &lt;- adaptive.density(acled_ppp_km, method=\"kernel\")\n\nplot(acled_ppp_kde_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\nacled_ppp_kde_man = density(acled_ppp_km, \n                        sigma = 10,\n                        edge = TRUE, \n                        kernel = \"gaussian\")\n\nplot(acled_ppp_kde_man, main = \"Manual bandwidth (10km)\")\n\n\n\n\n\n\n\n\n\n\n\nGiven the relatively sparse distribution of points within our study area, a manual bandwidth of 10km is deemed appropriate for the kernel density estimation. This bandwidth setting provides a suitable balance between capturing spatial patterns and avoiding excessive smoothing\n\n\n5.2.2 Inter-state Spatial Relations\nTo understand the potential influence of neighboring states on conflict dynamics within Magway, we will conduct a spatial analysis using a bandwidth of 15km, reflecting the larger geographical extent involved. This analysis will help us identify any spillover effects or sequential patterns of conflict across borders.\n\nkde_results &lt;- list()\nfor (yr in 2021:2024) {\n  acled_msm_ppp_km &lt;- rescale_ppp_km(acled_msm_sf %&gt;% filter(year == yr), msm_sf)\n  acled_msm_ppp_kde &lt;- density(acled_msm_ppp_km, sigma = 15, edge = TRUE, kernel = \"gaussian\")\n  kde_results[[yr - 2020]] &lt;- acled_msm_ppp_kde\n}\n\npar(mfrow=c(1,5), mar=c(1,1,1,1))\nyr &lt;- 2020\nfor (res in kde_results) {\n  yr &lt;- yr + 1\n  plot(res, main = as.character(yr))\n}\n\nplot(st_geometry(msm_sf), col = \"lightblue\", main = \"State\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nNotice the initial clusters forming in Mandalay. Subsequently, the clusters within Sagaing expanded towards the border between with Magway, eventually spilling over into Magway. Suggesting a strong influence of neighboring regions on conflict dynamics within Magway.\n\n\n\n\n5.2.3 State Analysis (Magway)\nNext we will delve into the state level, by exploring spatial patterns within Magway’s districts, we can identify areas of high concentration, potential hotspots, and the evolution of conflict over quarter\n\n5.2.3.1 Quarterly KDE (Magway)\nAt a closer look we can observe the events tend to form hotspots closer to the border with Sagaing.\n\nunique_quarters &lt;- unique(acled_sf$quarter) %&gt;% sort()\n\n# Create an empty list to store KDE results\nquart_kde_results &lt;- list()\n\n# Iterate through unique quarters\nq &lt;- 0\nfor (quart in unique_quarters) {\n  q &lt;- q + 1\n  acled_ppp_km &lt;- rescale_ppp_km(acled_sf %&gt;% filter(quarter == quart), magway_sf)\n  acled_ppp_kde &lt;- density(acled_ppp_km, sigma = 15, edge = TRUE, kernel = \"gaussian\")\n  quart_kde_results[[q]] &lt;- acled_ppp_kde\n}\n\n\npar(mfrow=c(4,4), mar=c(1,1,1,1))\n# Create a data frame for plotting\ni &lt;- 0\nfor (res in quart_kde_results) {\n  i &lt;- i + 1\n  r &lt;- ifelse(i %% 4 == 0, 4, i %% 4)\n  plot(res, \n       override.par = F,\n       fix.range = T,\n       main = paste(as.character(2021+as.integer((i-1)/4)), \"Q\", r))\n}\n\n\n\n\n\n\n\n\n\n\n5.2.3.2 Summary by district\nThe following are the summary statistics of the districts in Magway by Year, Event type and Year-Event type. Of all districts the one worst affected is Pakokku\n\nYearlyEvent TypeYearly by Event\n\n\n\n# Group by district, year, and event_type, then count events\nacled_grouped &lt;- acled_sf %&gt;%\n  st_drop_geometry() %&gt;% \n  group_by(district, year) %&gt;%\n  summarize(count = n()) %&gt;%\n  pivot_wider(names_from = year, values_from = count, values_fill = 0)\n\n# Create a data table\ndatatable(acled_grouped)\n\n\n\n\n\n\n\n\n# Group by district, year, and event_type, then count events\nacled_grouped &lt;- acled_sf %&gt;%\n  st_drop_geometry() %&gt;% \n  group_by(district, event_type) %&gt;%\n  summarize(count = n()) %&gt;%\n  pivot_wider(names_from = event_type, values_from = count, values_fill = 0)\n\n# Create a data table\ndatatable(acled_grouped)\n\n\n\n\n\n\n\n\n# Group by district, year, and event_type, then count events\nacled_grouped &lt;- acled_sf %&gt;%\n  st_drop_geometry() %&gt;% \n  group_by(district, year, event_type) %&gt;%\n  summarize(count = n()) %&gt;%\n  pivot_wider(names_from = c(year, event_type), values_from = count, values_fill = 0)\n\n# Create a data table\ndatatable(acled_grouped)\n\n\n\n\n\n\n\n\n\n\n\n5.2.4 District Analysis (Pakokku)\nGiven the severe nature of conflict in Pakokku, we will focus our subsequent analysis on this district. By examining Pakokku in detail, we can gain valuable insights into the factors driving intense conflict.\n\n5.2.4.1 Prepare Pakokku sf\n\n# Filter for \"Pakokku\" in both data frames\nacled_pak_sf &lt;- acled_sf %&gt;%\n  filter(district == \"Pakokku\")\nmagway_pak_sf &lt;- mym_sf %&gt;%\n  filter(DT == \"Pakokku\")\n\n\n\n5.2.4.1 Quadrant Count\nSplitting Pakokku into 10x10, we can start by looking a the Quadrat count of where the events mostly occur, in this case we can obseve higher counts in the center as well as long the eastern boundary.\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% dplyr::select(year, geometry), magway_pak_sf)\nquadrat_counts &lt;- quadratcount(acled_ppp_km, nx=10, ny=10)\n\nplot(quadrat_counts, main = \"Quadrat Counts\")\n\n\n\n\n\n\n\n\n\n\n5.2.4.2 Yearly Event Type KDE (Pakokku)\nHere we compare the event types over the years in Pakokku, each row representing an event type: 1. Protests 2. Explosions/Remote violence 3. Battles 4. Violence against civilians\n\net_kde_results &lt;- list()\nevent_types &lt;- list(\"Protests\", \"Explosions/Remote violence\", \"Battles\", \"Violence against civilians\")\nq &lt;- 0\n\n# Iterate through the list\nfor (et in event_types) {\n  for (yr in 2021:2024) {\n    q &lt;- q + 1\n    acled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == yr & event_type == et), magway_pak_sf)\n    acled_ppp_kde &lt;- density(acled_ppp_km, sigma = 5, edge = TRUE, kernel = \"gaussian\")\n    et_kde_results[[q]] &lt;- acled_ppp_kde\n  }\n}\n\n# TODO: same as above replot\npar(mfrow=c(4,4), mar=c(1,1,1,2))\n# Create a data frame for plotting\ni &lt;- 0\nfor (res in et_kde_results) {\n  i &lt;- i + 1\n  r &lt;- ifelse(i %% 4 == 0, 4, i %% 4)\n  plot(res, main = as.character(2020 + r))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEvent Type Findings\n\n\n\n\nProtests tend to be concentrated in urban areas\nExplosions and battles frequently occur near the outskirts of the city and towns\nViolence against civilians, on the other hand, is primarily concentrated in rural areas outside the city boundaries."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#second-order-analysis",
    "href": "take-home_ex/ex01/th_ex01.html#second-order-analysis",
    "title": "Take-home Exercise 1",
    "section": "5.3 Second Order Analysis",
    "text": "5.3 Second Order Analysis\nTo gain a deeper understanding of the spatial distribution of conflict events within Pakokku, we will conduct a second-order spatial analysis using the Clark-Evans test and Ripley’s K function. Before delving into these analyses, let’s examine the types of events that occurred in Pakokku across different quarters.\n\n# Group by district, year, and event_type, then count events\nacled_pak_grouped &lt;- acled_pak_sf %&gt;%\n  st_drop_geometry() %&gt;% \n  group_by(event_type, quarter) %&gt;%\n  summarize(count = n()) %&gt;%\n  pivot_wider(names_from = quarter, values_from = count, values_fill = 0, names_sort = TRUE)\n\n# Create a data table\ndatatable(acled_pak_grouped)\n\n\n\n\n\n\n5.3.1 Clark Evan Test\nBy employing the Clark-Evans test, we can assess whether the spatial distribution of conflict events within Pakokku deviates from complete spatial randomness. This analysis will help us identify any clustering or dispersion patterns that may exist. - H0: The distribution of events in Pakokku are randomly distributed. - H1: The distribution of events in Pakokku are not randomly distributed. - The 95% confident interval will be used.\n\nProtestsExplosionsBattlesViolence\n\n\n\n# Iterate through the list\nclarkevans.test(rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Protests\"), magway_pak_sf),\n            correction = \"none\",\n            alternative = c(\"clustered\"),\n            nsim = 999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Protests\"), \nR = 0.092082, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nProtests: R &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n# Iterate through the list\nclarkevans.test(rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Explosions/Remote violence\"), magway_pak_sf),\n            correction = \"none\",\n            alternative = c(\"clustered\"),\n            nsim = 999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Explosions/Remote violence\"), \nR = 0.36424, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nExplosions/Remote violence: R &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n# Iterate through the list\nclarkevans.test(rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Battles\"), magway_pak_sf),\n            correction = \"none\",\n            alternative = c(\"clustered\"),\n            nsim = 999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Battles\"), \nR = 0.34248, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nBattles: R &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n# Iterate through the list\nclarkevans.test(rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Violence against civilians\"), magway_pak_sf),\n            correction = \"none\",\n            alternative = c(\"clustered\"),\n            nsim = 999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Violence against civilians\"), \nR = 0.50772, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nViolence against civilians: R &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n\n\n\n\n\n\nUnderstanding High Clustering\n\n\n\n\nIncreased Intensity: Clusters of conflict events often indicate areas of heightened intensity. Concentrated violence can lead to greater casualties, displacement, and destruction of infrastructure.\nStrategic Considerations: Armed groups may strategically target specific areas for tactical advantages or to exert control over key resources.\nSpillover Effects: High clustering in one area can increase the risk of conflict spreading to neighboring regions. This is especially true if the conflict involves armed groups with territorial ambitions.\n\nGiven the observed shift from protests to battles over time, I am particularly interested in exploring the relationship between these two types of events. We will be using this 2 events for our subsequent analysis.\n\n\n\n\n5.3.2 G Function Analysis\nTo better appreciate the clustering we can start by visualizing on G function help us identify any clustering or dispersion patterns that may exist, providing valuable insights into the underlying dynamics of conflict in the region. Subsequently we will also be using the other variants of the Ripley’s K Function to determine spatial auto correlations, here are their uses: - G function: Measures the probability of finding a point within a given distance of another point. - K function: Measures the average number of points within a given distance of a randomly chosen point. - L function: A transformation of the K function that makes it easier to interpret. - F function: Measures the distribution of distances between pairs of points.\n\nBattlesBattles\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Battles\"), magway_pak_sf)\nG.csr &lt;- envelope(acled_ppp_km, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(G.csr, xlab = \"Dist (km)\", ylab = \"G(r)\", main = \"G-Function (Battles)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nThese observations suggest that there is a strong tendency for points to cluster within a distance of 6km. The rapid increase in the G function at shorter distances indicates a high degree of clustering within the first 6km. However, the slower increase beyond 8km suggests that the clustering effect might be weakening at larger distances.\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Protests\"), magway_pak_sf)\nG.csr &lt;- envelope(acled_ppp_km, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(G.csr, xlab = \"Dist (km)\", ylab = \"G(r)\", main = \"G-Function (Protests)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nThe observed G function steadily increasing suggests a clustering pattern for protests. This means that the probability of finding another protest within a given distance of a protest increases as the distance increases. Unlike battles which often involve larger-scale operations that can extend over wider areas, Protests tend to be more localized events, often concentrated in specific areas or near particular targets. This is why the G function for battles might have a larger range, indicating that points (events) can be found at greater distances from each other.\n\n\n\n\n\n5.3.3 K-Function Analysis\nTo ensure our observation is consistent we will use K Function to provide further insights into the spatial distribution of conflict events and help confirm our findings from the G function.\n\nBattlesProtests\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Battles\"), magway_pak_sf)\nK.csr &lt;- envelope(acled_ppp_km, Kest, nsim = 50)\n\nGenerating 50 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, \n50.\n\nDone.\n\nplot(K.csr, xlab = \"Dist (km)\", ylab = \"K(r)\", main = \"K-Function (Battles)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nSimilarly here we can observe the strong tendency for points to cluster on the on start up until 20+ km as it slowly converges with the envelope toward 25 km\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Protests\"), magway_pak_sf)\nK.csr &lt;- envelope(acled_ppp_km, Kest, nsim = 50)\n\nGenerating 50 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, \n50.\n\nDone.\n\nplot(K.csr, xlab = \"Dist (km)\", ylab = \"K(r)\", main = \"K-Function (Protests)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nThe K function for protest potrays even more pronounced clustering pattern for protests. The K function indicates a highly localized and intense concentration of protest events within a small radius.\n\n\n\nFrom the above observation we can confirm that our findings from\n\n\n\n\n\n\nUnderstanding Ripley’s K Function\n\n\n\n\nThe solid line represents the observed K function. - If K(r) is above the envelope, it indicates clustering (points are closer together than expected by chance). - If K(r) is below the envelope, it indicates dispersion (points are farther apart than expected by chance). - If K(r) is within the envelope, it suggests a random pattern.\nEnvelope: The envelope is generated by simulating random point patterns under the assumption of CSR. If the observed K function falls outside the envelope, it suggests a significant deviation from randomness.\nDotted line through the center: This line represents the theoretical K function under complete spatial randomness. It serves as a benchmark for comparison with the observed K function.\n\n\n\n\n\n\n5.3.3 L-Function Analysis\nTo view the K-Function more intuitively we will employ the L function. This transformation of the K function will provide a clearer visualization of the clustering patterns observed in the data.\n\nBattlesProtests\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Battles\"), magway_pak_sf)\nL.csr &lt;- envelope(acled_ppp_km, Lest, nsim = 50)\n\nGenerating 50 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, \n50.\n\nDone.\n\nplot(L.csr , . - r ~ r, xlab=\"Dist (km)\", ylab=\"L(r)-r\", main = \"L-Function (Battles)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Protests\"), magway_pak_sf)\nL.csr &lt;- envelope(acled_ppp_km, Lest, nsim = 50)\n\nGenerating 50 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, \n50.\n\nDone.\n\nplot(L.csr , . - r ~ r, xlab=\"Dist (km)\", ylab=\"L(r)-r\", main = \"L-Function (Protests)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.3.4 F-Function Analysis\nTo further validate our observation, we will employ the F function as complementary analysis. Which measures the distribution of distances between pairs of points.\n\nBattlesProtests\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Battles\"), magway_pak_sf)\nK.csr &lt;- envelope(acled_ppp_km, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(K.csr, xlab = \"Dist (km)\", ylab = \"F(r)\", main = \"F-Function (Battles)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nThis suggests that the observed distances between points are smaller than expected under complete spatial randomness. In other words, there is evidence of clustering in the data. The degree of clustering can be assessed by how far below the dotted line the F function curve lies.\n\n\n\nacled_ppp_km &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(year == 2021 & event_type == \"Protests\"), magway_pak_sf)\nK.csr &lt;- envelope(acled_ppp_km, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(K.csr, xlab = \"Dist (km)\", ylab = \"F(r)\", main = \"F-Function (Protests)\", lwd = 2, cex.axis = 1.2)\n\n\n\n\n\n\n\n\nSimilar observation as with Battles but with a more less steep observation line, indicating more intense clustering."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#overview-by-quarter",
    "href": "take-home_ex/ex01/th_ex01.html#overview-by-quarter",
    "title": "Take-home Exercise 1",
    "section": "6.1 Overview by Quarter",
    "text": "6.1 Overview by Quarter\n\ntm_shape(magway_pak_sf) + tm_polygons() +\n  tm_shape(acled_pak_sf) + tm_dots(size = 0.1, alpha = 0.5, col = \"red\") +\n  tm_facets(by=\"quarter\",\n            free.coords = F,\n            drop.units = T)"
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#compute-st-density-by-event_type",
    "href": "take-home_ex/ex01/th_ex01.html#compute-st-density-by-event_type",
    "title": "Take-home Exercise 1",
    "section": "6.2 Compute ST Density by Event_type",
    "text": "6.2 Compute ST Density by Event_type\nWe start by preparing our sf with our quarter id to be used with the spattemp.density of the sparr for our spatial temporal analysis.\n\nacled_pak_sf &lt;- acled_pak_sf %&gt;%\n  mutate(quarter_id = ((year - 2021) * 4) + ((quarter %% 1) * 10))\n\n\nBattlesProtests\n\n\n\npak_ppp_owin &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Battles\") %&gt;% dplyr::select(quarter_id, geometry), magway_pak_sf)\n\nst_kde &lt;- sparr::spattemp.density(pak_ppp_owin)\nsummary(st_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 8.5989 (spatial)\n  lambda = 0.088 (temporal)\n\nNo. of observations\n  677 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [8.367469, 121.1188] x [2310.08, 2425.057]\n\nTemporal bound\n  [2, 15]\n\nEvaluation\n  128 x 128 x 14 trivariate lattice\n  Density range: [2.248839e-36, 0.0005999062]\n\n\n\ntims &lt;- seq(2, 14)\npar(mfcol = c(4,4), mar = c(2, 2, 2, 2))\nfor(i in tims) {\n  plot(st_kde, i,\n       override.par = F,\n       fix.range = F,\n       main=paste(\"KDE: \",i))\n  }\n\n\n\n\n\n\n\n\nWe can observe over the quarters (less 2021 Q1) the Battles are spread out around the northern sector of Pakokku\n\n\n\npak_ppp_owin &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Protests\") %&gt;% dplyr::select(quarter_id, geometry), magway_pak_sf)\n\nst_kde &lt;- sparr::spattemp.density(pak_ppp_owin)\nsummary(st_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 6.7531 (spatial)\n  lambda = 0.0836 (temporal)\n\nNo. of observations\n  212 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [8.367469, 121.1188] x [2310.08, 2425.057]\n\nTemporal bound\n  [0, 15]\n\nEvaluation\n  128 x 128 x 16 trivariate lattice\n  Density range: [3.261449e-77, 0.004421199]\n\n\n\ntims &lt;- seq(2, 14)\npar(mfcol = c(4,4), mar = c(2, 2, 2, 2))\nfor(i in tims) {\n  plot(st_kde, i,\n       override.par = F,\n       fix.range = F,\n       main=paste(\"KDE: \",i))\n  }\n\n\n\n\n\n\n\n\nWhereas the Protests is observed to remain localized and consistent in towns and cities."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#animating-events-battles",
    "href": "take-home_ex/ex01/th_ex01.html#animating-events-battles",
    "title": "Take-home Exercise 1",
    "section": "6.3 Animating Events (Battles)",
    "text": "6.3 Animating Events (Battles)\nThe Spatial Temporal Diffusion for Battles is animated with the following code, which generates and MP4, subsequently converted into a Gif\n\n#! ouptput: false\n# pak_ppp_owin &lt;- rescale_ppp_km(acled_pak_sf %&gt;% filter(event_type == \"Battles\") %&gt;% dplyr::select(quarter_id, geometry), magway_pak_sf)\n\n# hlam &lt;- LIK.spattemp(pak_ppp_owin)\n# f.breve &lt;- spattemp.density(pak_ppp_owin, h=hlam[1], lambda=hlam[2], tlim=c(1,14))\n# g.tilde &lt;- bivariate.density(pak_ppp_owin, h0=hlam[1])\n# rho.breve &lt;- spattemp.risk(f=f.breve,g=g.tilde, tolerate=TRUE)\n\n# colpal &lt;- spatstat.options(\"image.colfun\")\n# fmdcolours &lt;- colourmap(colpal(128),breaks=c(-80,seq(-7,4,length=128)))\n# mytimes &lt;- 1:14\n# animation::saveVideo(\n#  for(i in 1:length(mytimes)){\n#    plot(rho.breve,tselect=mytimes[i],type=\"conditional\",col=fmdcolours,\n#         tol.args=list(levels=c(0.05,0.0001),lty=2:1,drawlabels=FALSE),\n#         sleep=0,override.par=FALSE)\n#    title(xlab=\"Easting\",ylab=\"Northing\")\n#  },\n#  video.name=\"fmd_protests.mp4\", other.opts = '-b:v 1M -pix_fmt yuv420p', ani.width=640, ani.height=640, interval=1/4)\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe above code chunk is commented to prevent execution as it requires ffmpeg tool for running. Ensure you have the tool installed before running."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#visualizing-conflicts-on-osm",
    "href": "take-home_ex/ex01/th_ex01.html#visualizing-conflicts-on-osm",
    "title": "Take-home Exercise 1",
    "section": "7.1 Visualizing conflicts on OSM",
    "text": "7.1 Visualizing conflicts on OSM\nFor our OSM dimensions we will be working with the places layers which consists of towns and cities as well as the places of worship (POW). The data are retrieved from geofabrik for Myanmmar.\n\n7.1.1 Prepping OSM Data\nOSM data is loaded and crs transformed.\n\nosm_sf = st_read(\"data/geospatial/myanmar-latest-free.shp.zip\", layer=\"gis_osm_places_a_free_1\") %&gt;%\n  st_transform(crs = 32647)\n\nReading layer `gis_osm_places_a_free_1' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/take-home_ex/ex01/data/geospatial/myanmar-latest-free.shp.zip' \n  using driver `ESRI Shapefile'\nSimple feature collection with 10489 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.24155 ymin: 9.606004 xmax: 101.0663 ymax: 28.17021\nGeodetic CRS:  WGS 84\n\nosm_pow_sf = st_read(\"data/geospatial/myanmar-latest-free.shp.zip\", layer=\"gis_osm_pofw_free_1\") %&gt;%\n  st_transform(crs = 32647)\n\nReading layer `gis_osm_pofw_free_1' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/take-home_ex/ex01/data/geospatial/myanmar-latest-free.shp.zip' \n  using driver `ESRI Shapefile'\nSimple feature collection with 12083 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 92.16019 ymin: 9.95157 xmax: 100.9118 ymax: 27.39084\nGeodetic CRS:  WGS 84\n\n\n\n\n7.1.2 Visualizing Area of Study\nIn the following we take a look at the distribution of the places and POW across Magway.\n\nTowns and CityPlaces of Worship\n\n\nBy incorporating places data from OSM, we can identify areas with high population density and analyze their relationship to conflict events. This analysis will help us understand whether population concentration plays a role in shaping the spatial distribution of conflict\n\n# Create the distribution map with title and dots\nosm_mag_sf &lt;- st_intersection(osm_sf, magway_sf)\ntm_shape(magway_sf) +\n  tm_polygons() +\n  tm_shape(osm_mag_sf %&gt;% filter(fclass %in% c(\"town\", \"city\", \"suburb\"))) +\n  tm_bubbles(col = \"fclass\", alpha = 1, size = 0.1) +\n  tm_layout(title = \"Distribution\", title.position = c(\"right\", \"top\"))\n\n\n\n\n\n\n\n\nWithin Magway we can identify the Pakokku in blue, the largest city in the Magway Region of Myanmar. It is situated about 30 km northeast of Bagan on the Irrawaddy River with a population of 322,154.\n\n\nWhile our OSM data does not include ethnicity information, we can explore potential relationships between conflict events and places of worship. By analyzing the spatial proximity between conflict locations and religious sites, we may gain insights into the role of religious identity or affiliation in shaping conflict dynamics.\n\n# Create the distribution map with title and dots\nosm_pow_mag_sf &lt;- st_intersection(osm_pow_sf, magway_sf)\ntm_shape(magway_sf) +\n  tm_polygons() +\n  tm_shape(osm_pow_mag_sf) +\n  tm_bubbles(col = \"fclass\", alpha = 0.5, size = 0.1) +\n  tm_layout(title = \"Distribution\", title.position = c(\"right\", \"top\"))\n\n\n\n\n\n\n\n\nOther than a scatter of other religions in Minbu on the broder with Rakhine in the west the region is mostly dominated by Buddhism.\n\n\n\n\n\n7.1.3 KDE on OSM\nNext we will overlay the OSM points on our density plot to identify their spatial relations.\n\nacled_ppp_pro &lt;- as.ppp(acled_pak_sf %&gt;% filter(event_type == \"Protests\"))\nacled_ppp_bat &lt;- as.ppp(acled_pak_sf %&gt;% filter(event_type == \"Battles\"))\nmagway_owin &lt;- as.owin(magway_pak_sf %&gt;% st_union())\n\n\n7.1.3.1 Protests KDE\n\nacled_ppp_kde &lt;- density(acled_ppp_pro[magway_owin], sigma = 5000, edge = TRUE, kernel = \"gaussian\")\nacled_mag_raster &lt;- kde_to_raster(acled_ppp_kde)\n\npak_kde_raster &lt;- tm_shape(acled_mag_raster) +\n  tm_raster(alpha = 0.8, palette = \"YlOrRd\")\n\n\nTowns and CityPlaces of Worhsip\n\n\n\n# Assuming you have a RasterLayer object named 'my_raster'\nosm_pak_sf &lt;- st_intersection(osm_sf, magway_pak_sf)\ntm_shape(magway_pak_sf) +\n  tm_polygons(col = \"white\") +\n  pak_kde_raster +\n  tm_shape(osm_pak_sf %&gt;% filter(fclass %in% c(\"town\", \"city\"))) +\n  tm_bubbles(col = \"fclass\", alpha = 1, size = 0.2, palette = c(\"aquamarine\", \"cornflowerblue\")) + \n  tm_layout(title = \"Places (Protests)\", title.position = c(\"center\", \"top\")) \n\n\n\n\n\n\n\n\nAs observed the protests are mostly clustered around the city of Pakokku and the township of Myaing.\n\n\n\n# Assuming you have a RasterLayer object named 'my_raster'\nosm_pow_pak_sf &lt;- st_intersection(osm_pow_sf, magway_pak_sf)\ntm_shape(magway_pak_sf) +\n  tm_polygons(col = \"white\") +\n  pak_kde_raster +\n  tm_shape(osm_pow_pak_sf) +\n  tm_bubbles(col = \"fclass\", alpha = 0.3, size = 0.1, palette = c(\"aquamarine\")) +\n  tm_layout(title = \"Places of Worship (Protests)\", title.position = c(\"center\", \"top\"))\n\n\n\n\n\n\n\n\nThere is not much relations to be observed with places of worship since the dominant and registered religion within the district is Buddhist.\n\n\n\n\n\n7.1.3.2 Battles KDE\n\nacled_ppp_kde &lt;- density(acled_ppp_bat[magway_owin], sigma = 5000, edge = TRUE, kernel = \"gaussian\")\nacled_mag_raster &lt;- kde_to_raster(acled_ppp_kde)\n\npak_kde_raster &lt;- tm_shape(acled_mag_raster) +\n  tm_raster(alpha = 0.8, palette = \"YlOrRd\")\n\n\nTowns and CityPlaces of Worhsip\n\n\n\n# Assuming you have a RasterLayer object named 'my_raster'\nosm_pak_sf &lt;- st_intersection(osm_sf, magway_pak_sf)\ntm_shape(magway_pak_sf) +\n  tm_polygons(col = \"white\") +\n  pak_kde_raster +\n  tm_shape(osm_pak_sf %&gt;% filter(fclass %in% c(\"town\", \"city\"))) +\n  tm_bubbles(col = \"fclass\", alpha = 1, size = 0.2, palette = c(\"aquamarine\", \"cornflowerblue\")) + \n  tm_layout(title = \"Places (Battles)\", title.position = c(\"center\", \"top\")) \n\n\n\n\n\n\n\n\nBattles tend to occur in wider radius around towns and cities, while protests are more concentrated in urban centers.\n\n\n\n# Assuming you have a RasterLayer object named 'my_raster'\nosm_pow_pak_sf &lt;- st_intersection(osm_pow_sf, magway_pak_sf)\ntm_shape(magway_pak_sf) +\n  tm_polygons(col = \"white\") +\n  pak_kde_raster +\n  tm_shape(osm_pow_pak_sf) +\n  tm_bubbles(col = \"fclass\", alpha = 0.3, size = 0.1, palette = c(\"aquamarine\")) +\n  tm_layout(title = \"Places of Worship (Battles)\", title.position = c(\"center\", \"top\"))\n\n\n\n\n\n\n\n\nThere is not much relations to be observed with places of worship since the dominant and registered religion within the district is Buddhist."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#analysis-of-timeline",
    "href": "take-home_ex/ex01/th_ex01.html#analysis-of-timeline",
    "title": "Take-home Exercise 1",
    "section": "7.2 Analysis of Timeline",
    "text": "7.2 Analysis of Timeline\nFinally lets discuss the event type and its changes over the course of the conflict.\n\n# Filter for the desired event types\ngrouped_data &lt;- acled_pak_sf %&gt;%\n  filter(event_type %in% c(\"Protests\", \"Battles\")) %&gt;%\n  mutate(year_quarter = year + (quarter %% 1) * 2.5) %&gt;% \n  group_by(event_type, year_quarter) %&gt;%\n  summarize(count = n())\n\n# Create the line plot\nggplot(grouped_data, aes(x = year_quarter, y = count, color = event_type)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Event Type Counts Over Time\",\n       x = \"Quarter\",\n       y = \"Count\") +\n  scale_color_manual(values = c(\"Protests\" = \"red\", \"Battles\" = \"blue\")) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nOur analysis reveals a distinct temporal pattern in conflict events. Protests were prevalent in the early stages of the conflict in 2021, but their frequency gradually declined over time. On the other hand, battles have become more frequent, suggesting a shift in the tactics or strategies employed by the conflicting parties.\nSeveral factors may contribute to this trend. The increasing presence of security forces and the implementation of restrictive measures could have suppressed protest activity. Additionally, the evolving dynamics of the conflict, such as changes in leadership or alliances, may have influenced the shift towards more violent confrontations."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#key-policy-and-mitigation-strategies",
    "href": "take-home_ex/ex01/th_ex01.html#key-policy-and-mitigation-strategies",
    "title": "Take-home Exercise 1",
    "section": "7.3 Key Policy and Mitigation Strategies",
    "text": "7.3 Key Policy and Mitigation Strategies\n\nPromote Dialogue and Reconciliation: To foster peace and stability, it is essential to facilitate inclusive dialogue among all relevant stakeholders. Neutral mediation and trust-building measures can support this process, creating a conducive environment for negotiation and agreement.\nAddress Root Causes: Addressing the underlying grievances and social injustices that fuel the conflict is crucial for long-term peace. This involves promoting socioeconomic development, ensuring human rights protection, and fostering inter-ethnic reconciliation.\nSecurity Sector Reform: Reforming the security sector is essential for creating a more accountable, professional, and human rights-respecting force. This includes measures such as demilitarization, civilian control, and support for disarmament, demobilization, and reintegration programs."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#technically",
    "href": "take-home_ex/ex01/th_ex01.html#technically",
    "title": "Take-home Exercise 1",
    "section": "8.1 Technically",
    "text": "8.1 Technically\nI’ve learned how to use spatial analysis tools effectively, especially for first-order, second-order and spatial temporal analyses. The spatstat and sparr packages were invaluable for this. The EDA with ggplot was also tremendously helpful for my subsequent."
  },
  {
    "objectID": "take-home_ex/ex01/th_ex01.html#conflict-related",
    "href": "take-home_ex/ex01/th_ex01.html#conflict-related",
    "title": "Take-home Exercise 1",
    "section": "8.2 Conflict-Related",
    "text": "8.2 Conflict-Related\nI gained insights into the spatial distribution of conflict events, identified hotspots, and understood temporal patterns. I also explored the relationships between conflict and geographic factors such as places and POW. These findings also made me delve into ways of mitigating such conflicts as well as peacbuilding effots."
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html",
    "href": "hands-on_ex/ex05/ho_ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "Spatial weights matrices are fundamental tools in spatial analysis. They quantify the spatial relationships between geographic features, such as points, lines, or polygons. These relationships can be based on distance, contiguity, or other spatial criteria."
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#loading-packages",
    "href": "hands-on_ex/ex05/ho_ex05.html#loading-packages",
    "title": "Hands-on Exercise 5",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nWe will be using the spdep package which is used for the creation and manipulation of spatial weights matrices. These spatial weights matrices are essential for tasks like spatial autocorrelation analysis, spatial regression modeling, and understanding the spatial distribution of phenomena.\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#importing-data",
    "href": "hands-on_ex/ex05/ho_ex05.html#importing-data",
    "title": "Hands-on Exercise 5",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/hands-on_ex/ex05/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#relational-join",
    "href": "hands-on_ex/ex05/ho_ex05.html#relational-join",
    "title": "Hands-on Exercise 5",
    "section": "2.3 Relational Join",
    "text": "2.3 Relational Join\nNext we update the attribute table of hunan joined based by county.\n\nhunan &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#visualising-regional-development-indicator",
    "href": "hands-on_ex/ex05/ho_ex05.html#visualising-regional-development-indicator",
    "title": "Hands-on Exercise 5",
    "section": "2.4 Visualising Regional Development Indicator",
    "text": "2.4 Visualising Regional Development Indicator\nNext we take a look at the GDPPC across hunan and their individual country.\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#queen-contiguity-based-neighbours",
    "href": "hands-on_ex/ex05/ho_ex05.html#queen-contiguity-based-neighbours",
    "title": "Hands-on Exercise 5",
    "section": "3.1 QUEEN Contiguity Based Neighbours",
    "text": "3.1 QUEEN Contiguity Based Neighbours\nUsing poly2nb we can find the number of neighbours for each county, with the max being 11 in all direction, and 2 with just 1 neighbour.\n\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nTo get the neighbours for the first area unit 1, which have 5 units. The first county being Anxing\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\nTo get for all it’s 5 neighbours, and their respective GDPPC.\n\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\nnb1 &lt;- hunan$GDPPC[wm_q[[1]]]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nWeight Matrix\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"snap\")= num 9e-08\n - attr(*, \"sym\")= logi TRUE\n - attr(*, \"ncomp\")=List of 2\n  ..$ nc     : int 1\n  ..$ comp.id: int [1:88] 1 1 1 1 1 1 1 1 1 1 ..."
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#rook-contiguity-based-neighbours",
    "href": "hands-on_ex/ex05/ho_ex05.html#rook-contiguity-based-neighbours",
    "title": "Hands-on Exercise 5",
    "section": "3.2 ROOK Contiguity Based Neighbours",
    "text": "3.2 ROOK Contiguity Based Neighbours\nNotice how now with rook we have lesser max link at county taoyuan (85), from 10 to 11. Lets try to visualize this in the next section.\n\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#visualising-contiguity-weights",
    "href": "hands-on_ex/ex05/ho_ex05.html#visualising-contiguity-weights",
    "title": "Hands-on Exercise 5",
    "section": "3.3 Visualising Contiguity Weights",
    "text": "3.3 Visualising Contiguity Weights\nTo do so we need the centroids of each polygon to plot there relations, we start by extracting the long and lat of each country and combine the coordinates\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\n3.3.1 Plotting QUEEN Map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\n\n\n\n\n3.3.2 Plotting ROOK Map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\n\n\n3.3.3 Side by Side Comparison\nNotice how Taoyuan was able to connect with the diagonal county touching at just a point, sandwich between 2 other counties with the QUEEN?\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#determining-cut-off-distance",
    "href": "hands-on_ex/ex05/ho_ex05.html#determining-cut-off-distance",
    "title": "Hands-on Exercise 5",
    "section": "4.1 Determining cut-off distance",
    "text": "4.1 Determining cut-off distance\nStart with knearneigh by getting the points belonging to set of k nearest neighbours of each other then convert it into nb class with knn2nb\nUsing nbdists to get the length of neighbour relationship edges. Returns coordinate pairs if projected\n\nk1 &lt;- knn2nb(knearneigh(coords))\nsummary(k1)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 88 \nPercentage nonzero weights: 1.136364 \nAverage number of links: 1 \n25 disjoint connected subgraphs\nNon-symmetric neighbours list\nLink number distribution:\n\n 1 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 1 link\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 1 link\n\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#computing-fixed-distance-weight-matrix",
    "href": "hands-on_ex/ex05/ho_ex05.html#computing-fixed-distance-weight-matrix",
    "title": "Hands-on Exercise 5",
    "section": "4.2 Computing fixed distance weight matrix",
    "text": "4.2 Computing fixed distance weight matrix\nFrom the previous summary we could tell the largest first nearest neighbour distance is 61.79km, so using an upper limit can guarantee that we will at least have 1 neighbour.\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nsummary(wm_d62)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\n\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n - attr(*, \"ncomp\")=List of 2\n  ..$ nc     : int 1\n  ..$ comp.id: int [1:88] 1 1 1 1 1 1 1 1 1 1 ...\n\n\nFor a formatted output we can use table() and card().\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#visualising-distance-weights",
    "href": "hands-on_ex/ex05/ho_ex05.html#visualising-distance-weights",
    "title": "Hands-on Exercise 5",
    "section": "4.3 Visualising Distance Weights",
    "text": "4.3 Visualising Distance Weights\nFollowing a plot of the nearest neighbour plot and the distance based neighbours we have computed\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(hunan$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#adaptive-distance-weight-matrix",
    "href": "hands-on_ex/ex05/ho_ex05.html#adaptive-distance-weight-matrix",
    "title": "Hands-on Exercise 5",
    "section": "4.4 Adaptive distance weight matrix",
    "text": "4.4 Adaptive distance weight matrix\nNow lets pick the no. of nearest neighbours to be 6.\n\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nsummary(knn6)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\nLink number distribution:\n\n 6 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 6 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 6 links\n\n\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"ncomp\")=List of 2\n  ..$ nc     : int 1\n  ..$ comp.id: int [1:88] 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n4.4.1 Side by Side Comparison\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, pch = 19, cex = 0.6, add=TRUE, col=\"red\" )\nplot(hunan$geometry, border=\"lightgrey\", main=\"6 nearest neighbours\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#spatial-lag-with-row-standardized-weights",
    "href": "hands-on_ex/ex05/ho_ex05.html#spatial-lag-with-row-standardized-weights",
    "title": "Hands-on Exercise 5",
    "section": "7.1 Spatial lag with row-standardized weights",
    "text": "7.1 Spatial lag with row-standardized weights\nWe compute the average neighbour GDPPC value for our lagged values.\n\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\nGDPPC for the 1st polygon’s 5 neighbours\n\nnb1 &lt;- hunan$GDPPC[wm_q[[1]]]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nAppend lagged values to the sf dataframe\n\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan,lag.res)\n\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\nComparison of GDPPC vs GDPPC spatial lag (GDDPC vs RSW)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#spatial-lag-as-a-sum-of-neighbouring-values",
    "href": "hands-on_ex/ex05/ho_ex05.html#spatial-lag-as-a-sum-of-neighbouring-values",
    "title": "Hands-on Exercise 5",
    "section": "7.2 Spatial lag as a sum of neighbouring values",
    "text": "7.2 Spatial lag as a sum of neighbouring values\nThis method will assign 1 per neighbour of the polygon.\n\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nAppend lagged value to sf dataframe\n\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\nhunan &lt;- left_join(hunan, lag.res)\n\nComparison of GDPPC vs GDPPC spatial lag value (GDDPC vs SNV)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#spatial-window-average",
    "href": "hands-on_ex/ex05/ho_ex05.html#spatial-window-average",
    "title": "Hands-on Exercise 5",
    "section": "7.3 Spatial Window Average",
    "text": "7.3 Spatial Window Average\nIn this method we add a diagonal element to neighbour, the polygon itself is added too\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\nRe-compute the weights with nb2listw\n\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\nCompute the lag variable from the weights\n\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nAppend lagged value to sf dataframe\n\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag_w_avg_gpdpc)\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\nWe can also use kable from knitr to compare lagged value and spatial window average values.\n\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nComparison of GDPPC vs GDPPC spatial lag value (RSW vs SWA)\n\nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#spatial-window-sum",
    "href": "hands-on_ex/ex05/ho_ex05.html#spatial-window-sum",
    "title": "Hands-on Exercise 5",
    "section": "7.4 Spatial Window Sum",
    "text": "7.4 Spatial Window Sum\nSimilar to window average but without using row-standardised weights. Assign binary weights to neighbour structure which includes the diagonal element.\n\n# Add the diagonal again\nwm_qs &lt;- include.self(wm_q)\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\nUsing nb2listw and glist we assign weight values.\n\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nCompute the lag variable from the weights\n\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\nAppend lagged value to sf dataframe\n\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\nCompare lagged value and spatial window sum values.\n\nhunan %&gt;%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nComparison of GDPPC vs GDPPC spatial lag value (SNV vs SWS)\n\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex05/ho_ex05.html#comparison-of-all-4",
    "href": "hands-on_ex/ex05/ho_ex05.html#comparison-of-all-4",
    "title": "Hands-on Exercise 5",
    "section": "7.5 Comparison of all 4",
    "text": "7.5 Comparison of all 4\n\ntmap_arrange(lag_gdppc, lag_sum_gdppc, w_avg_gdppc, w_sum_gdppc, asp=1, nrow =2 , ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html",
    "href": "hands-on_ex/ex03/ho_ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "1st Order Spatial Point Pattern Analysis focuses on the overall distribution of points in a study area. It examines questions such as:\n\nIs the distribution of points random, clustered, or dispersed?\nWhat is the average intensity of points (density)?\n\n\n\nIn this hands-on we will be working with 3 new packages, spatstat used for point pattern analysis, raster which reads/writes and manipulates gridded spatial data (raster) and maptools which provides a set of tools for manipulating geographic data (used to convert Spatial object to ppp format of spatstat)\n\n# We have to ensure maptools is installed because it is not available in our version of R\n#| eval: false\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\nThe downloaded binary packages are in\n    /var/folders/77/9zlh5tts65gbm3hvrbnyxrzh0000gn/T//RtmpOHjGi8/downloaded_packages\n\npacman::p_load(tmap, sf, raster, spatstat, maptools, sp, tidyverse)\n\n\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz_sf &lt;- st_set_crs(mpsz_sf, 3414)\n\nsg_sf &lt;- st_read(dsn = \"data\", layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\nsg_sf &lt;- st_set_crs(sg_sf, 3414)\n\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform( crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data/child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nchildcare_sf &lt;- st_set_crs(childcare_sf, 3414)\n\n# Plot map \ntm_shape(sg_sf) + tm_fill() + \n  tm_shape(mpsz_sf) + tm_polygons() + \n  tm_shape(childcare_sf) + tm_dots()\n\n\n\n\n\n\n\n\nUse the view mode to get an interactive map\n\n#tmap_mode('view')\n#tm_shape(childcare_sf) + tm_dots()\n# Rem to chagne the mode\ntmap_mode('plot')\n\n\n\n\nWhile Simple Feature Data Frames (SF) are a more modern and efficient way to represent spatial data in R that adheres to modern standards and providing a consistent interface, SP Spatial classes have also been a staple in R’s geospatial ecosystem, we shall next see how to convert the data to sp’s spatial classes\n\n\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;08F73931F4A691F4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;RAFFLES KIDZ @ PUNGGOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;379D017BF244B0FA&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\n\n\n\nA generic sp object is a more general term that refers to any object that belongs to the sp package and has spatial attributes. This could be a specific Spatial class or a more complex object that combines multiple spatial components. This step is necessary an as intermediate state before converting into ppp object for spatstat\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\n\nFinally we can convert into a the ppp format (Conversion: sf df -&gt; sp spatial -&gt; sp generic -&gt; ppp). ppp is a specialized format within the spatstat package that is optimized for analyzing spatial point patterns using ppp().\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\nNote the summary of the object indicates there are duplicate points in the data\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n\nWe can run the duplicated() to firstly check for any duplicates\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nNext we can use multiplicity() to view the co-incidence poitns\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\nNext we calculate which how many points in our data have &gt;1 co-incidence points. In this case 128 duplicate points\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 128\n\n\nLets use the interactive map to view the location of these duplicated points, by giving the points some transparency we can view the overlap of some points which appears to be darker\n\n#tmap_mode('view')\n#tm_shape(childcare) + tm_dots(alpha = 0.4, size = 0.05)\ntmap_mode('plot')\n\nTo resolve duplicates we can employ any of the following 3 ways: 1. Deleting the duplicates, however we might end up deleting useful points 2. Use Jittering to jitter the points such that the duplicate point does not occupy the same space 3. Attach the patterns to the duplicates as marks, subsequently handled by analytical techniques that into account the marks\nIn this case we will be using jittering to handle the duplicates\n\nchildcare_ppp &lt;- rjitter(childcare_ppp,\n                         retry = TRUE,\n                         nsimm = 1,\n                         drop = TRUE)\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\nAs can be seen above the duplicates have now been dealt with.\n\n\n\nIt is good practice to confine area of analysis such as the Singapore Boundary, as such we can create objects called owin to represent this region of confinement\n\nsg_owin &lt;- as.owin(sg_sf)\n\nplot(sg_owin)\n\n\n\n\n\n\n\n\nThe owin basically contains a list of polygon that defines the boundary.\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\nNext to combine the point and owin objects we will extract childcare event points located within the owin object. In the output the point and polygon are combined into a single ppp object.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1544 points\nAverage intensity 2.128551e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\nplot(childcareSG_ppp)\n\n\n\n\n\n\n\n\n\n\n\n\nUsing spatstat we will be working on the following SPPA\n\nderiving kernel density estimation (KDE) layer for visualising and exploring the intensity of point processes\nperforming Confirmatory Spatial Point Patterns Analysis by using Nearest Neighbour statistics\n\n\n\n\n\nUsing density() we can compute the kernal density of the points event. diggle() is used for automatic bandwith selection for computing kernel density\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp, sigma = bw.diggle, edge = TRUE, kernel = \"gaussian\")\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nThe desnsity output range of 0 to 0.000035 is too small to comprehend as the svy21 uses meter for measurement, but before that we can also use the diggle() to compute to compute the kde layer\n\nbw &lt;- bw.diggle(childcareSG_ppp)\n\nbw\n\n   sigma \n472.4817 \n\n\n\n\n\nUsing the rescale() we can convert our unit of measurement to use kilometer instead of meter, the legend should now show density in km instead\n\nchildcareSG_ppp_km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp_km, sigma = bw.diggle, edge = TRUE, kernel = \"gaussian\")\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\n\n\nspatstat offers 3 other methods aside from diggle()\n\n\n\nbw.CvL(childcareSG_ppp_km)\n\n   sigma \n4.606555 \n\n\n\n\n\n\nbw.scott(childcareSG_ppp_km)\n\n sigma.x  sigma.y \n2.225122 1.450411 \n\n\n\n\n\n\nbw.ppl(childcareSG_ppp_km)\n\n    sigma \n0.4024939 \n\n\n\n\n\nThe ppl() algorithm is recommended because it seems to produce more appropriate values when the patttern consist of tight clusters\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(kde_childcareSG_bw, main = \"diggle\")\nplot(density(childcareSG_ppp_km, sigma =  bw.ppl, edge = TRUE, kernel = \"gaussian\"), main = \"ppl\")\nplot(density(childcareSG_ppp_km, sigma =  bw.CvL, edge = TRUE, kernel = \"gaussian\"), main = \"CvL\")\nplot(density(childcareSG_ppp_km, sigma =  bw.scott, edge = TRUE, kernel = \"gaussian\"), main = \"scott\")\n\n\n\n\n\n\n\n\n\n\n\nThe default kernel method for ppp() used is the gaussian, here are some other options\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"gaussian\"), main = \"Gaussian\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"epanechnikov\"), main = \"Epanechnikov\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"quartic\"), main = \"Quartic\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"disc\"), main = \"Disc\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can also compute with a specified bandwidth, in our case of 600m we will use a sigma value of 0.6 as childcare_ppp_km uses kilometers.\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp_km, sigma = 0.6, edge = TRUE, kernel = \"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n\n\nGiven that fixed bandwidth are sensitive to highly skew distribution of spatial point patterns over geographical units (e.g. urban versus rural), adaptive bandwidth can be used to resolve this.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp_km, method=\"kernel\")\n\npar(mfrow = c(1,2), mar = c(1,1,1,2))\nplot(kde_childcareSG_600, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\nThe results are the same, we are just converting for mapping\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG_bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nNext we convert the gridded output into a raster layer\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.816077e-15, 20.53237  (min, max)\n\n\nThe CRS property is NA, to add our CRS\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -8.816077e-15, 20.53237  (min, max)\n\n\n\n\n\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\", palette=\"viridis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\nStart by extracting the Punggol, Tampines, Choa Chu Kang and Jurong West planning areas\n\npg &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\nPlottng of the target areas\n\npar(mfrow=c(2,2))\n\nplot(pg, main = \"Punggol\")\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\n\n\n\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\nFirst convert them to owin objects\n\npg_owin &lt;- as.owin(pg)\ntm_owin &lt;- as.owin(tm)\nck_owin &lt;- as.owin(ck)\njw_owin &lt;- as.owin(jw)\n\nExtract out the childcare points from their respective owin\n\nchildcare_pg_ppp = childcare_ppp[pg_owin]\nchildcare_tm_ppp = childcare_ppp[tm_owin]\nchildcare_ck_ppp = childcare_ppp[ck_owin]\nchildcare_jw_ppp = childcare_ppp[jw_owin]\n\nRescale from meters to kilometers\n\nchildcare_pg_ppp_km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp_km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp_km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp_km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nComparing childcare at the target areas\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(childcare_pg_ppp_km, main=\"Punggol\")\nplot(childcare_tm_ppp_km, main=\"Tampines\")\nplot(childcare_ck_ppp_km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp_km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\nNext we compute the kde with diggle()\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcare_pg_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\nUsing a fixed bandwidth of 250m\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcare_pg_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo perform the Clark-Evans test of aggregation using the clarkevans.test(), the test hypotheses are:\n\nHo = The distribution of childcare services are randomly distributed.\nH1 = The distribution of childcare services are not randomly distributed.\nThe 95% confident interval will be used.\n\n\n\nR: Measures the degree of clustering or dispersion in the spatial distribution of childcare services. - If R = 1, there is complete randomness. - If R &lt; 1, there is clustering (points are closer together than expected by chance). - If R &gt; 1, there is dispersion (points are farther apart than expected by chance).\np-value: This is the probability of observing a test statistic (R) as extreme or more extreme than the observed one, assuming the null hypothesis (Ho) is true. - A p-value less than the significance level (usually 0.05) indicates that the observed data is unlikely to occur under the null hypothesis, leading to rejection of Ho.\n\nclarkevans.test(childcareSG_ppp,\n                correction = \"none\",\n                clipregion = \"sg_owin\",\n                alternative = c(\"clustered\"),\n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.56076, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n\nclarkevans.test(childcare_ck_ppp,\n                correction = \"none\",\n                clipregion = NULL,\n                alternative = c(\"clustered\"),\n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.91197, p-value = 0.09421\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &gt; 0.05, H0 cannot be rejected.\n\n\n\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.79477, p-value = 0.0001062\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected."
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#getting-started",
    "href": "hands-on_ex/ex03/ho_ex03.html#getting-started",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "In this hands-on we will be working with 3 new packages, spatstat used for point pattern analysis, raster which reads/writes and manipulates gridded spatial data (raster) and maptools which provides a set of tools for manipulating geographic data (used to convert Spatial object to ppp format of spatstat)\n\n# We have to ensure maptools is installed because it is not available in our version of R\n#| eval: false\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\nThe downloaded binary packages are in\n    /var/folders/77/9zlh5tts65gbm3hvrbnyxrzh0000gn/T//RtmpOHjGi8/downloaded_packages\n\npacman::p_load(tmap, sf, raster, spatstat, maptools, sp, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#importing-data",
    "href": "hands-on_ex/ex03/ho_ex03.html#importing-data",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "mpsz_sf &lt;- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz_sf &lt;- st_set_crs(mpsz_sf, 3414)\n\nsg_sf &lt;- st_read(dsn = \"data\", layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\nsg_sf &lt;- st_set_crs(sg_sf, 3414)\n\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform( crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex03/data/child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nchildcare_sf &lt;- st_set_crs(childcare_sf, 3414)\n\n# Plot map \ntm_shape(sg_sf) + tm_fill() + \n  tm_shape(mpsz_sf) + tm_polygons() + \n  tm_shape(childcare_sf) + tm_dots()\n\n\n\n\n\n\n\n\nUse the view mode to get an interactive map\n\n#tmap_mode('view')\n#tm_shape(childcare_sf) + tm_dots()\n# Rem to chagne the mode\ntmap_mode('plot')"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#data-wrangling",
    "href": "hands-on_ex/ex03/ho_ex03.html#data-wrangling",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "While Simple Feature Data Frames (SF) are a more modern and efficient way to represent spatial data in R that adheres to modern standards and providing a consistent interface, SP Spatial classes have also been a staple in R’s geospatial ecosystem, we shall next see how to convert the data to sp’s spatial classes\n\n\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;08F73931F4A691F4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;RAFFLES KIDZ @ PUNGGOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;379D017BF244B0FA&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\n\n\n\nA generic sp object is a more general term that refers to any object that belongs to the sp package and has spatial attributes. This could be a specific Spatial class or a more complex object that combines multiple spatial components. This step is necessary an as intermediate state before converting into ppp object for spatstat\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\n\nFinally we can convert into a the ppp format (Conversion: sf df -&gt; sp spatial -&gt; sp generic -&gt; ppp). ppp is a specialized format within the spatstat package that is optimized for analyzing spatial point patterns using ppp().\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\nNote the summary of the object indicates there are duplicate points in the data\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n\nWe can run the duplicated() to firstly check for any duplicates\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nNext we can use multiplicity() to view the co-incidence poitns\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\nNext we calculate which how many points in our data have &gt;1 co-incidence points. In this case 128 duplicate points\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 128\n\n\nLets use the interactive map to view the location of these duplicated points, by giving the points some transparency we can view the overlap of some points which appears to be darker\n\n#tmap_mode('view')\n#tm_shape(childcare) + tm_dots(alpha = 0.4, size = 0.05)\ntmap_mode('plot')\n\nTo resolve duplicates we can employ any of the following 3 ways: 1. Deleting the duplicates, however we might end up deleting useful points 2. Use Jittering to jitter the points such that the duplicate point does not occupy the same space 3. Attach the patterns to the duplicates as marks, subsequently handled by analytical techniques that into account the marks\nIn this case we will be using jittering to handle the duplicates\n\nchildcare_ppp &lt;- rjitter(childcare_ppp,\n                         retry = TRUE,\n                         nsimm = 1,\n                         drop = TRUE)\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\nAs can be seen above the duplicates have now been dealt with.\n\n\n\nIt is good practice to confine area of analysis such as the Singapore Boundary, as such we can create objects called owin to represent this region of confinement\n\nsg_owin &lt;- as.owin(sg_sf)\n\nplot(sg_owin)\n\n\n\n\n\n\n\n\nThe owin basically contains a list of polygon that defines the boundary.\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\nNext to combine the point and owin objects we will extract childcare event points located within the owin object. In the output the point and polygon are combined into a single ppp object.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1544 points\nAverage intensity 2.128551e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#st-order-spatial-point-patterns-analysis",
    "href": "hands-on_ex/ex03/ho_ex03.html#st-order-spatial-point-patterns-analysis",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Using spatstat we will be working on the following SPPA\n\nderiving kernel density estimation (KDE) layer for visualising and exploring the intensity of point processes\nperforming Confirmatory Spatial Point Patterns Analysis by using Nearest Neighbour statistics\n\n\n\n\n\nUsing density() we can compute the kernal density of the points event. diggle() is used for automatic bandwith selection for computing kernel density\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp, sigma = bw.diggle, edge = TRUE, kernel = \"gaussian\")\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nThe desnsity output range of 0 to 0.000035 is too small to comprehend as the svy21 uses meter for measurement, but before that we can also use the diggle() to compute to compute the kde layer\n\nbw &lt;- bw.diggle(childcareSG_ppp)\n\nbw\n\n   sigma \n472.4817 \n\n\n\n\n\nUsing the rescale() we can convert our unit of measurement to use kilometer instead of meter, the legend should now show density in km instead\n\nchildcareSG_ppp_km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp_km, sigma = bw.diggle, edge = TRUE, kernel = \"gaussian\")\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\n\n\nspatstat offers 3 other methods aside from diggle()\n\n\n\nbw.CvL(childcareSG_ppp_km)\n\n   sigma \n4.606555 \n\n\n\n\n\n\nbw.scott(childcareSG_ppp_km)\n\n sigma.x  sigma.y \n2.225122 1.450411 \n\n\n\n\n\n\nbw.ppl(childcareSG_ppp_km)\n\n    sigma \n0.4024939 \n\n\n\n\n\nThe ppl() algorithm is recommended because it seems to produce more appropriate values when the patttern consist of tight clusters\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(kde_childcareSG_bw, main = \"diggle\")\nplot(density(childcareSG_ppp_km, sigma =  bw.ppl, edge = TRUE, kernel = \"gaussian\"), main = \"ppl\")\nplot(density(childcareSG_ppp_km, sigma =  bw.CvL, edge = TRUE, kernel = \"gaussian\"), main = \"CvL\")\nplot(density(childcareSG_ppp_km, sigma =  bw.scott, edge = TRUE, kernel = \"gaussian\"), main = \"scott\")\n\n\n\n\n\n\n\n\n\n\n\nThe default kernel method for ppp() used is the gaussian, here are some other options\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"gaussian\"), main = \"Gaussian\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"epanechnikov\"), main = \"Epanechnikov\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"quartic\"), main = \"Quartic\")\nplot(density(childcareSG_ppp_km, sigma = bw.ppl, edge = TRUE, kernel = \"disc\"), main = \"Disc\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can also compute with a specified bandwidth, in our case of 600m we will use a sigma value of 0.6 as childcare_ppp_km uses kilometers.\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp_km, sigma = 0.6, edge = TRUE, kernel = \"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n\n\nGiven that fixed bandwidth are sensitive to highly skew distribution of spatial point patterns over geographical units (e.g. urban versus rural), adaptive bandwidth can be used to resolve this.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp_km, method=\"kernel\")\n\npar(mfrow = c(1,2), mar = c(1,1,1,2))\nplot(kde_childcareSG_600, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\nThe results are the same, we are just converting for mapping\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG_bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nNext we convert the gridded output into a raster layer\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.816077e-15, 20.53237  (min, max)\n\n\nThe CRS property is NA, to add our CRS\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -8.816077e-15, 20.53237  (min, max)\n\n\n\n\n\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\", palette=\"viridis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\nStart by extracting the Punggol, Tampines, Choa Chu Kang and Jurong West planning areas\n\npg &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\nPlottng of the target areas\n\npar(mfrow=c(2,2))\n\nplot(pg, main = \"Punggol\")\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\n\n\n\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\nFirst convert them to owin objects\n\npg_owin &lt;- as.owin(pg)\ntm_owin &lt;- as.owin(tm)\nck_owin &lt;- as.owin(ck)\njw_owin &lt;- as.owin(jw)\n\nExtract out the childcare points from their respective owin\n\nchildcare_pg_ppp = childcare_ppp[pg_owin]\nchildcare_tm_ppp = childcare_ppp[tm_owin]\nchildcare_ck_ppp = childcare_ppp[ck_owin]\nchildcare_jw_ppp = childcare_ppp[jw_owin]\n\nRescale from meters to kilometers\n\nchildcare_pg_ppp_km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp_km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp_km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp_km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nComparing childcare at the target areas\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(childcare_pg_ppp_km, main=\"Punggol\")\nplot(childcare_tm_ppp_km, main=\"Tampines\")\nplot(childcare_ck_ppp_km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp_km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\nNext we compute the kde with diggle()\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcare_pg_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\nUsing a fixed bandwidth of 250m\n\npar(mfrow=c(2,2), mar=c(1,1,1,2))\n\nplot(density(childcare_pg_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo perform the Clark-Evans test of aggregation using the clarkevans.test(), the test hypotheses are:\n\nHo = The distribution of childcare services are randomly distributed.\nH1 = The distribution of childcare services are not randomly distributed.\nThe 95% confident interval will be used.\n\n\n\nR: Measures the degree of clustering or dispersion in the spatial distribution of childcare services. - If R = 1, there is complete randomness. - If R &lt; 1, there is clustering (points are closer together than expected by chance). - If R &gt; 1, there is dispersion (points are farther apart than expected by chance).\np-value: This is the probability of observing a test statistic (R) as extreme or more extreme than the observed one, assuming the null hypothesis (Ho) is true. - A p-value less than the significance level (usually 0.05) indicates that the observed data is unlikely to occur under the null hypothesis, leading to rejection of Ho.\n\nclarkevans.test(childcareSG_ppp,\n                correction = \"none\",\n                clipregion = \"sg_owin\",\n                alternative = c(\"clustered\"),\n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.56076, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected.\n\n\n\n\nclarkevans.test(childcare_ck_ppp,\n                correction = \"none\",\n                clipregion = NULL,\n                alternative = c(\"clustered\"),\n                nsim = 99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.91197, p-value = 0.09421\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &gt; 0.05, H0 cannot be rejected.\n\n\n\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.79477, p-value = 0.0001062\nalternative hypothesis: clustered (R &lt; 1)\n\n\nR &lt; 1 which suggest clustering. p-value &lt; 0.05, H0 can be rejected."
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-with-g-function",
    "href": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-with-g-function",
    "title": "Hands-on Exercise 3",
    "section": "2.1 Analysing Spatial Point Process with G-Function",
    "text": "2.1 Analysing Spatial Point Process with G-Function\nG function measures the distribution of the distances from an arbitrary even to its nearest event\n\n2.1.1 Choa Chu Kang Planning Area\nUsing Gest() we can compute the G-function\n\nG_CK &lt;- Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nH0: The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1: The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\nMonte Carlo test with the envelope()\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(G_CK.csr)\n\n\n\n\n\n\n\n\n\n\n2.1.2 Tampines Planning Area\nPerforming Complete Spatial Randomness Test\n\nH0: The distribution of childcare services at Tampines are randomly distributed.\nH1: The distribution of childcare services at Tampines are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nG_tm.csr &lt;- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-with-the-f-function",
    "href": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-with-the-f-function",
    "title": "Hands-on Exercise 3",
    "section": "2.2 Analysing Spatial Point Process with the F-Function",
    "text": "2.2 Analysing Spatial Point Process with the F-Function\nF function estimates the empty space function F(r) or its hazard rate h(r) from a point pattern in a window of arbitrary shape.\n\n2.2.1 Choa Chu Kang Planning Area\n\nF_CK &lt;- Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1: The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(F_CK.csr)\n\n\n\n\n\n\n\n\n\n\n2.2.2 Tampines Planning Area\n\nF_tm &lt;- Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Tampines are randomly distributed.\nH1: The distribution of childcare services at Tampines are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-using-k-function",
    "href": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-using-k-function",
    "title": "Hands-on Exercise 3",
    "section": "2.3 Analysing Spatial Point Process Using K-Function",
    "text": "2.3 Analysing Spatial Point Process Using K-Function\nK-function measures the number of events found up to a given distance of any particular event. We will be using the Kest() function from spatstat.\n\n2.3.1 Choa Chu Kang Planning Area\n\nK_ck &lt;- Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1: The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nK_ck.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\n\n\n2.3.2 Tampines Planning Area\n\nK_tm &lt;- Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Tampines are randomly distributed.\nH1: The distribution of childcare services at Tampines are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nK_tm.csr &lt;- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-using-l-function",
    "href": "hands-on_ex/ex03/ho_ex03.html#analysing-spatial-point-process-using-l-function",
    "title": "Hands-on Exercise 3",
    "section": "2.4 Analysing Spatial Point Process Using L-Function",
    "text": "2.4 Analysing Spatial Point Process Using L-Function\nL function is a transformation of the K function, designed to help in identifying clustering or regularity in spatial point patterns\n\n2.4.1 Choa Chu Kang Planning Area\n\nL_ck &lt;- Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1: The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nL_ck.csr &lt;- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nPlotting result of the MCT\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\n\n\n2.4.2 Tampines Planning Area\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nHo: The distribution of childcare services at Tampines are randomly distributed.\nH1: The distribution of childcare services at Tampines are not randomly distributed.\nH0 will be rejected if p &lt; 0.001.\n\n\nL_tm.csr &lt;- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html",
    "href": "hands-on_ex/ex01/ho_ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The following code chunk uses p_load() to install and load the sf and tidyverse packages.\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#assign-epsg-code",
    "href": "hands-on_ex/ex01/ho_ex01.html#assign-epsg-code",
    "title": "Hands-on Exercise 1",
    "section": "5.1 Assign EPSG Code",
    "text": "5.1 Assign EPSG Code\nIn the case of mpsz it is projected in SVY 21 with EPSG code 3414, using st_crs() we can see that the data is projected with EPSG code 9001 instead.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nIn order to update EPSG code to 3414 we can set the crs using the st_set_crs()\n\n mpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nThe crs for the mpsz data should now be assigned appropriately\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#re-project-crs",
    "href": "hands-on_ex/ex01/ho_ex01.html#re-project-crs",
    "title": "Hands-on Exercise 1",
    "section": "5.2 Re-Project CRS",
    "text": "5.2 Re-Project CRS\nIn the case of the Preschool data, it is initially projected in WGS 84\n\nst_geometry(preschool)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nIn order to reproject the CRS from WGS 84 to SVY 21 we have to use st_transform() function instead\n\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)\n\nThe crs for the preschool data should now be assigned appropriately as well\n\nst_geometry(preschool3414)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#importing-data-1",
    "href": "hands-on_ex/ex01/ho_ex01.html#importing-data-1",
    "title": "Hands-on Exercise 1",
    "section": "6.1 Importing data",
    "text": "6.1 Importing data\nAirBnb data is a listing and should be loaded with read_csv()\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nUsing list() we can view the listings\n\nlist(listings)\n\n[[1]]\n# A tibble: 3,540 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Ensuite …  367042 Belinda   East Region         Tampines          1.35\n 2  71896 B&B  Roo…  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Room 2-n…  367042 Belinda   East Region         Tampines          1.35\n 4 275343 10min wa… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 15 mins … 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Booking …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 5 mins w… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Comforta… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Relaxing… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 344803 Budget s…  367042 Belinda   East Region         Tampines          1.35\n# ℹ 3,530 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\nWe assume the data uses the wgs84 Geographic Coordinate System"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#aspatial-data-to-sf-data-frame",
    "href": "hands-on_ex/ex01/ho_ex01.html#aspatial-data-to-sf-data-frame",
    "title": "Hands-on Exercise 1",
    "section": "6.2 Aspatial data to sf Data Frame",
    "text": "6.2 Aspatial data to sf Data Frame\nThe aspatial data will first be converted into an sf data frame and re-projected into the SVY 21 crs.\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nThe created data frame shows that geometry has been added while longitude and latitude have been dropped\n\nglimpse(listings_sf)\n\nRows: 3,540\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           &lt;chr&gt; \"Ensuite Room (Room 1 & 2) near EXPO\", …\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; NA, 80, 80, 50, 50, NA, 85, 65, 45, 54,…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 180, 180, 92, 92, 180, 180,…\n$ number_of_reviews              &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 131, 17, 5, 60,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.12, 0.15, 0.29, 0.15, 0.11, 0.08, 0.8…\n$ calculated_host_listings_count &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49, 49, 6, 7, 7,…\n$ availability_365               &lt;dbl&gt; 89, 148, 90, 62, 0, 88, 365, 0, 0, 365,…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 2, 0, 0, 1, 1, 1, 0, 0, 0, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#buffering",
    "href": "hands-on_ex/ex01/ho_ex01.html#buffering",
    "title": "Hands-on Exercise 1",
    "section": "7.1 Buffering",
    "text": "7.1 Buffering\nScenario: The authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the current cycling path. You are tasked to determine the extend of the land need to be acquired and their total area.\nUsing the st_buffer() we can first compute the 5-meter buffer around paths of the cycling data\n\nbuffer_cycling &lt;- st_buffer(cyclingpath,\n                              dist=5, nQuadSegs = 30)\n\nThen the area is calculated\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\n\nFinally the sum() is used to derive the total land involved\n\nsum(buffer_cycling$AREA)\n\n2218855 [m^2]"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#point-in-polygon-count",
    "href": "hands-on_ex/ex01/ho_ex01.html#point-in-polygon-count",
    "title": "Hands-on Exercise 1",
    "section": "7.2 Point-in-polygon count",
    "text": "7.2 Point-in-polygon count\nScenario: A pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.\nUsing st_intersects() we could locate the preschool in each planning subzone from the master plan, and using the length() we can calculate the number of school in their respective subzone.\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n\nUse summary() to get the summarised statistics of the PreSch Count field\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nThen, to list the planning subzone with the most number of pre-schools we could use top_n()\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\nNext, using the st_aera() we can calculate the area of preschool by subzone\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\n\nNext, using mutate() to compute the density by dividing the PreSch Count over the calculated Area field\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html",
    "href": "hands-on_ex/ex06/ho_ex06.html",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "This hands-on exercise introduces you to the spdep package for spatial autocorrelation analysis. You’ll learn how to import geospatial data using sf, CSV data using readr, and perform relational joins using dplyr. You’ll then explore the computation of Global Spatial Autocorrelation (GSA) statistics, including Moran’s I, using spdep. The exercise concludes with plotting Moran scatterplots and correlograms to visualize spatial autocorrelation patterns and interpret the statistical results."
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#loading-packages",
    "href": "hands-on_ex/ex06/ho_ex06.html#loading-packages",
    "title": "Hands-on Exercise 6",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nThis week we will be using the spdep package to compute spatial weights, global and local spatial autocorrelation statistic.\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#importing-data",
    "href": "hands-on_ex/ex06/ho_ex06.html#importing-data",
    "title": "Hands-on Exercise 6",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/hands-on_ex/ex06/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#data-wrangling",
    "href": "hands-on_ex/ex06/ho_ex06.html#data-wrangling",
    "title": "Hands-on Exercise 6",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\n\nhunan_join &lt;- left_join(hunan, hunan2012) %&gt;%\n  dplyr::select(1:4, 7, 15)"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#visualize",
    "href": "hands-on_ex/ex06/ho_ex06.html#visualize",
    "title": "Hands-on Exercise 6",
    "section": "2.4 Visualize",
    "text": "2.4 Visualize\nHere is what a glimpse of the GDPPC 2012 looks like on the Cholorpeth\n\nequal &lt;- tm_shape(hunan_join) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan_join) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#computing-contiguity-spatial-weights",
    "href": "hands-on_ex/ex06/ho_ex06.html#computing-contiguity-spatial-weights",
    "title": "Hands-on Exercise 6",
    "section": "3.1 Computing Contiguity Spatial Weights",
    "text": "3.1 Computing Contiguity Spatial Weights\nIn the following code, we utilize the poly2nb()function from the spdep package to create a contiguity weights matrix. This matrix defines neighboring relationships based on regions that share common boundaries. By default, poly2nb() uses the “Queen” criterion, which considers both shared edges and vertices as neighbors. However, you can specify queen = FALSE to use the “Rook” criterion, which only considers shared edges.\n\nwm_q &lt;- poly2nb(hunan_join, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#computing-row-standardised-weights-matrix",
    "href": "hands-on_ex/ex06/ho_ex06.html#computing-row-standardised-weights-matrix",
    "title": "Hands-on Exercise 6",
    "section": "3.2 Computing Row-standardised weights matrix",
    "text": "3.2 Computing Row-standardised weights matrix\nWe will assign equal weights to each neighboring polygon using style = \"W\", meaning each neighbor gets a weight of 1/(# of neighbors), and the weighted income values are summed. This method is straightforward but may skew results for polygons at the edges of the study area, as they have fewer neighbors. For simplicity, we’ll use style = \"W\", though more robust options, like style = \"B\", are available.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\n\n\n\nNote\n\n\n\nTake note\n\nThe style parameter can take the values “W”, “B”, “C”, “U”, “minmax”, and “S”. “B” is basic binary coding, “W” is row-standardized (sums over all links to n), “C” is globally standardized (sums over all links), “U” is equal to “C” divided by the number of neighbors, and “S” is a variance-stabilizing scheme proposed by Tiefelsdorf et al. (1999).\nIf zero policy is TRUE, regions with no neighbors will get a zero-length weights vector, resulting in a lagged value of zero. This may or may not be appropriate depending on the analysis."
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#marons-i-spatial-autocorrelation",
    "href": "hands-on_ex/ex06/ho_ex06.html#marons-i-spatial-autocorrelation",
    "title": "Hands-on Exercise 6",
    "section": "3.3 Maron’s I Spatial Autocorrelation",
    "text": "3.3 Maron’s I Spatial Autocorrelation\nRange: -1 to 1 Interpretation: - Positive values indicate positive spatial autocorrelation (clustering). - Negative values indicate negative spatial autocorrelation (dispersion). - Values close to 0 indicate no spatial autocorrelation. Sensitivity: More sensitive to linear relationships between neighboring values.\n\n3.3.1 Maron’s I Test\n\nmoran.test(hunan_join$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan_join$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nA positive Moran’s I value suggests that areas with similar GDPPC values tend to cluster together. A very small p-value indicates that this clustering is unlikely to be due to chance. Hence int thise case there is positive spatial autocorrelation in GDPPC across the Province.\n\n\n3.3.2 Maron’s I Monte Carlo\nNext we perform permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan_join$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan_join$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nThis result supports our previous observation above.\n\n\n3.3.3 Visualization\nBy plotting the distribution of the statistical values as a histogram we can examine the simulated Moran’s I test statistics in greater detail.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")\n\n\n\n\n\n\n\n\nAlt: ggplot2 to plot our histogram\n\nlibrary(ggplot2)\n\n# Assuming bperm$res contains the simulated Moran's I values\nsimulated_values &lt;- bperm$res\n\n# Create a data frame for ggplot2\ndf &lt;- data.frame(simulated_values)\n\n# Plot the histogram using ggplot2\nggplot(df, aes(x = simulated_values)) +\n  geom_histogram(binwidth = 0.02, fill = \"grey\", color = \"black\", alpha = 0.8) +\n  geom_vline(xintercept = 0, color = \"red\") +\n  labs(title = \"Simulated Moran's I\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nAs the observed Moran’s I value of 0.30075 is higher than the majority of the simulated values it suggests spatial correlation."
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#gearys-c-spatial-autocorrelation",
    "href": "hands-on_ex/ex06/ho_ex06.html#gearys-c-spatial-autocorrelation",
    "title": "Hands-on Exercise 6",
    "section": "3.4 Geary’s C Spatial Autocorrelation",
    "text": "3.4 Geary’s C Spatial Autocorrelation\nRange: 0 to infinity Interpretation: - Values close to 0 indicate positive spatial autocorrelation (clustering). - Values close to 1 indicate no spatial autocorrelation. - Values greater than 1 indicate negative spatial autocorrelation (dispersion). Sensitivity: Less sensitive to linear relationships and can detect more complex spatial patterns.\n\n3.4.1 Geary’s C Test\n\ngeary.test(hunan_join$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan_join$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\nA value of &lt;1 suggests that similar values are clustered together\n\n\n3.4.2 Geary’s C Monte Carlo\nNext we perform permutation test for Geary’s C statistic by using geary.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm=geary.mc(hunan_join$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan_join$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\nThe findings confirm the initial hypothesis, indicating that areas with similar economic development tend to be clustered together geographically.\n\n\n3.4.3 Visualization\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")\n\nabline(v=bperm$statistic, col=\"blue\", lwd=2)\n\n\n\n\n\n\n\n\nFrom the historgram we can assume clustering within our data."
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#spatial-correlogram",
    "href": "hands-on_ex/ex06/ho_ex06.html#spatial-correlogram",
    "title": "Hands-on Exercise 6",
    "section": "3.5 Spatial Correlogram",
    "text": "3.5 Spatial Correlogram\nCorrelograms are useful for visualizing and understanding spatial autocorrelation patterns. They plot the relationship between distance and autocorrelation index. While less foundational than variograms, correlograms offer richer exploratory insights.\n\n3.5.1 Moran’s I correlogram\nUsing sp.correlogram() of spdep to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan_join$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan_join$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThe plot suggests a strong positive spatial correlation between nearby areas, indicating that regions with similar GDP per capita values tend to be clustered. However, at greater distances, a negative correlation emerges, suggesting that areas farther apart are more likely to have differing economic development levels.\n\n\n3.5.2 Geary’s C correlogram\nSimilarly, using sp.correlogram() we compute the 6-lag spatial correlogram of GDPPC, with method C instead.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan_join$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan_join$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#morans-i-spatial-autocorrelation",
    "href": "hands-on_ex/ex06/ho_ex06.html#morans-i-spatial-autocorrelation",
    "title": "Hands-on Exercise 6",
    "section": "4.1 Moran’s I Spatial Autocorrelation",
    "text": "4.1 Moran’s I Spatial Autocorrelation\n\n4.1.1 Moran’s I Test\nUsing localmoran() function of spdep, we computes Ii values, given a set of zi values and a listw object providing neighbour weighting information for the polygon associated with the zi values.\n\nfips &lt;- order(hunan_join$County)\nlocalMI &lt;- localmoran(hunan_join$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n\n4.1.2 Visualization\n\nhunan.localMI &lt;- cbind(hunan_join,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n4.1.2.1 Moran’s I Values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.1.2.2 Moran’s I p-values\nThe choropleth shows there is evidence for both positive and negative Ii values. However, it is useful to consider the p-values for each of these values, as consider above.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.1.2.3 Comparing Both\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#lisa-cluster-map",
    "href": "hands-on_ex/ex06/ho_ex06.html#lisa-cluster-map",
    "title": "Hands-on Exercise 6",
    "section": "4.2 LISA Cluster Map",
    "text": "4.2 LISA Cluster Map\nThe LISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\n\n4.2.1 Moran Scatterplot\nUsing the moran.plot(), the Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\n\nnci &lt;- moran.plot(hunan_join$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n\n\n\n\n\n4.2.2 Moran scatterplot with standardised variable\nUsing the scale() to center and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations. Subsequently using as.vector() added to the end is to make sure that the data type we get out of this is a vector, that map neatly into out dataframe.\n\nhunan$Z.GDPPC &lt;- scale(hunan_join$GDPPC) %&gt;% \n  as.vector \n\n\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n\n\n\n\n4.2.3 Preparing LISA Map Classes\nWe start by deriving the spatially lagged variable of interest (i.e. GDPPC) and centers the spatially lagged variable around its mean.\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan_join$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\nWe get the local Moran’s around the mean\n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\n\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\nWe set the stat significance level to for the local Moran\n\nsignif &lt;- 0.05    \nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n\n4.2.4 Plotting LISA map\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\n\n\nTo better intepret, plot both the local Moran’s I values map and its corresponding p-values map next to each other.\n\ngdppc &lt;- qtm(hunan_join, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\nprint(LISAmap)\n\n\n\n\n\n\n\ntmap_arrange(gdppc, LISAmap, localMI.map, pvalue.map,\n             asp=1, ncol=2, nrow = 2)\n\n\n\n\n\n\n\n\nThe LISA map reveals distinct patterns of economic inequality in Hunan Province. Clusters of high GDP per capita are concentrated in the east, while areas with low GDP per capita tend to cluster in the west. This visualization underscores the uneven distribution of economic development across the province."
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#hot-spot-and-cold-spot-area-analysis",
    "href": "hands-on_ex/ex06/ho_ex06.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-on Exercise 6",
    "section": "4.3 Hot Spot and Cold Spot Area Analysis",
    "text": "4.3 Hot Spot and Cold Spot Area Analysis\nBeside detecting cluster and outliers, localised spatial statistics can be also used to detect hot spot and/or cold spot areas.\n\n4.3.1 Getis and Ord’s G-Statistics\nAn alternative spatial statistics to detect spatial anomalies is the Getis and Ord’s G-statistics (Getis and Ord, 1972; Ord and Getis, 1995). It looks at neighbours within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too. The analysis consists of 3 steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics\n\n\n4.3.1.1 Deriving the centroid\nFirstly we need to define our set of neigbours, for Getis-Ord we are defining neighbours based on distance. To create our connectivity graph, we need to associate points with each polygon. This is more complex than just using st_centroid() on the us.bound sf object. We need to extract the coordinates into a separate data frame. To do this, we’ll use a mapping function that applies st_centroid() to each element in the geometry column of us.bound.\nWe get the long and lat from the geometry column\n\nlongitude &lt;- map_dbl(hunan_join$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan_join$geometry, ~st_centroid(.x)[[2]])\n\nThen we bind them together as coords\n\ncoords &lt;- cbind(longitude, latitude)\n\n\n\n4.3.1.2 Determine the cut-off distance\nNext we determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nWe can tell the largest first nearest neighbour distance is 61.79 km, all units will have at least 1 neighbour.\n\n\n4.3.1.3 Computing fixed distance weight matrix\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nThen using nb2listw() we convert the nb object into spatial weights object.\n\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n4.3.1.4 Computing adaptive distance weight matrix\nFixed distance weight matrices assign weights based on the distance between geographic units. Densely populated areas tend to have more neighbors, while rural areas may have fewer. This can influence the smoothing effect of the spatial weights. You can directly control the number of neighbors using k-nearest neighbors, allowing for asymmetric neighbors or enforcing symmetry.\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "hands-on_ex/ex06/ho_ex06.html#computing-gi-statistics",
    "href": "hands-on_ex/ex06/ho_ex06.html#computing-gi-statistics",
    "title": "Hands-on Exercise 6",
    "section": "4.4 Computing Gi Statistics",
    "text": "4.4 Computing Gi Statistics\n\n4.4.1 Gi statistics using fixed distance\n\nfips &lt;- order(hunan_join$County)\ngi.fixed &lt;- localG(hunan_join$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan_join$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe output of localG() is a vector of G or Gstar values, with attributes “gstari” set to TRUE or FALSE, “call” set to the function call, and class “localG”. The Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNow we will join the Gi values to their corresponding hunan sf data frame, it will perform the followin; First, it convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename().\n\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\n4.4.1.1 Visualization\n\ngdppc &lt;- qtm(hunan_join, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\nThe dark red areas on the map highlight clusters of high GDPPC, while the blue areas indicate clusters of low GDPPC. These findings supports our previous observation of uneven economic development across the Province.\n\n\n\n4.4.2 Adaptive Distance\n\nfips &lt;- order(hunan_join$County)\ngi.adaptive &lt;- localG(hunan_join$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n4.4.2.1 Visualization\n\ngdppc&lt;- qtm(hunan_join, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n\n\nSimilar finding as above with a even darker blue areas which indicates strong negative spatial autocorrelation."
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html",
    "href": "hands-on_ex/ex02/ho_ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "The following code chunk uses p_load() to install and load the sf, tidyverse and tmap packages.\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#data-wrangling",
    "href": "hands-on_ex/ex02/ho_ex02.html#data-wrangling",
    "title": "Hands-on Exercise 2",
    "section": "3.1 Data Wrangling",
    "text": "3.1 Data Wrangling\n\n# Filter data to 2020, groupby and sum the population\npopdata2020grouped &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`))\n\n# Pivot wider by age \npopdata2020pivot &lt;- popdata2020grouped %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, values_from=POP)\n\n# Sum into age groups\npopdata2020 &lt;- popdata2020pivot %&gt;%\n  mutate(`YOUNG` = rowSums(.[3:6]) + rowSums(.[14])) %&gt;%\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+rowSums(.[15])) %&gt;%\n  mutate(`AGED` = rowSums(.[16:21])) %&gt;%\n  mutate(`TOTAL` = rowSums(.[3:21])) %&gt;%\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\n# View popdata\nhead(popdata2020, n=5)\n\n# A tibble: 5 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  &lt;chr&gt;      &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 Ang Mo Kio Ang Mo Kio Town Cent…  1290             2760   760  4810      0.743\n2 Ang Mo Kio Cheng San              5640            16460  6050 28150      0.710\n3 Ang Mo Kio Chong Boon             5100            15000  6470 26570      0.771\n4 Ang Mo Kio Kebun Bahru            4620            13010  5120 22750      0.749\n5 Ang Mo Kio Sembawang Hills        1880             3630  1310  6820      0.879\n\n\nConvert PA and SZ fields to uppercase\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nhead(popdata2020)\n\n# A tibble: 6 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  &lt;chr&gt;      &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 ANG MO KIO ANG MO KIO TOWN CENT…  1290             2760   760  4810      0.743\n2 ANG MO KIO CHENG SAN              5640            16460  6050 28150      0.710\n3 ANG MO KIO CHONG BOON             5100            15000  6470 26570      0.771\n4 ANG MO KIO KEBUN BAHRU            4620            13010  5120 22750      0.749\n5 ANG MO KIO SEMBAWANG HILLS        1880             3630  1310  6820      0.879\n6 ANG MO KIO SHANGRI-LA             3330             9050  3610 15990      0.767"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#joining-the-attribute-data",
    "href": "hands-on_ex/ex02/ho_ex02.html#joining-the-attribute-data",
    "title": "Hands-on Exercise 2",
    "section": "3.2 Joining the attribute data",
    "text": "3.2 Joining the attribute data\nNext we will join the geographical data with the attribute table using the SZ as common identifier using the dplyr package.\n\nmpsz_popdata2020 &lt;- left_join(mpsz, popdata2020, by = c(\"SUBZONE_N\" = \"SZ\"))\n\nhead(mpsz_popdata2020)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area              PA YOUNG ECONOMY ACTIVE AGED\n1 29220.19   5267.381  1630379.3            &lt;NA&gt;    NA             NA   NA\n2 29782.05   3506.107   559816.2          OUTRAM   930           3130 2120\n3 29974.66   1740.926   160807.5 SINGAPORE RIVER     0             40   10\n4 29933.77   3313.625   595428.9     BUKIT MERAH  2600           7450 3320\n5 30005.70   2825.594   387429.4     BUKIT MERAH  2760           6160 1740\n6 29991.38   4428.913  1030378.8     BUKIT MERAH  2800           7340 3420\n  TOTAL DEPENDENCY                       geometry\n1    NA         NA MULTIPOLYGON (((31495.56 30...\n2  6180  0.9744409 MULTIPOLYGON (((29092.28 30...\n3    50  0.2500000 MULTIPOLYGON (((29932.33 29...\n4 13370  0.7946309 MULTIPOLYGON (((27131.28 30...\n5 10660  0.7305195 MULTIPOLYGON (((26451.03 30...\n6 13560  0.8474114 MULTIPOLYGON (((25899.7 297...\n\n\nIn order to store the current state of the data frame we can export as an rds file to be reused later\n\nwrite_rds(mpsz_popdata2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#plotting-using-tmaps-element",
    "href": "hands-on_ex/ex02/ho_ex02.html#plotting-using-tmaps-element",
    "title": "Hands-on Exercise 2",
    "section": "4.2 Plotting using tmap’s element",
    "text": "4.2 Plotting using tmap’s element\nFor a more customized plot use tmap elements instead\n\ntm_shape(mpsz_popdata2020) + \n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Blues\", title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\", \n            main.title.position = \"center\",main.title.size = 1.2, legend.height = 0.45, legend.width = 0.35, frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n4.2.1 Drawing a basemap\nThe basic building of tmap is tm_shape() followed by one or more layer of elements such as tm_fill() or tm_polygons(). In the following the tm_shape() is used with tm_polygons() to draw the subzones.\n\ntm_shape(mpsz_popdata2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\n4.2.1 Using tm_fill and tm_border\nNext the DEPENDENCY attribute is included into the fill and polygon plot. Note that tm_polygons() is a wrapper for the tm_fill() which shades the polygons using the default color scheme and uses tm_borders() to add the borders of the shapefile\n\nfill_map &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", title = \"Fill\")\n\n# Note that the borders are plotted\npolygon_map &lt;- tm_shape(mpsz_popdata2020) + tm_polygons(\"DEPENDENCY\", title = \"Polygon\")\n\n# tm_fill with tm_borders added\nfill_border_map &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", title = \"Fill + Border\") + tm_borders(lwd = 0.5, lty = \"solid\", alpha = 1, col = \"Black\" )\n\ntmap_arrange(fill_map, polygon_map, fill_border_map, asp=0, ncol=3)\n\n\n\n\n\n\n\n\n\nThe default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by tmap\nThe default color scheme used is YlOrRd of ColorBrewer. By default, Missing value will be shaded in grey."
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#plotting-with-classification-methods",
    "href": "hands-on_ex/ex02/ho_ex02.html#plotting-with-classification-methods",
    "title": "Hands-on Exercise 2",
    "section": "4.3 Plotting with Classification methods",
    "text": "4.3 Plotting with Classification methods\nMost plots requires some form of data classification to group a large number of observation into meaninful ranges or classes. tmap provides a total of ten classification methods; fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks. All of which can be defined with the style argument of tm_fill() or tm_polygons()\n\n4.3.1 Comparing Classification Styles\n\n# Comparing the different classification styles\nsd_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"sd\", title = \"sd\") + tm_borders(alpha = 0.5)\nkmeans_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"kmeans\", title = \"kmeans\") + tm_borders(alpha = 0.5)\nquantile_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"quantile\", title = \"quantile\") + tm_borders(alpha = 0.5)\njenks_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"jenks\", title = \"jenks\") + tm_borders(alpha = 0.5)\n\ntmap_arrange(sd_plot, kmeans_plot, quantile_plot, jenks_plot, asp=0, ncol=4)\n\n\n\n\n\n\n\n\nWith the side by side comparison of the different styles, we could observe: - Quantile seems to have an even spread of colors BUT not in values, hence may not necessary be a good representation - sd is the least illustrative of the 4 BUT also the most equal in terms of value distribution\n\n\n4.3.2 Plotting with Custom break\nIn order to override the default breaks computed internally we can set it explicitly with the break argument in tm_fill()\nStart by taking a look at the summary to get some descriptive statistics of the data we are working with.\n\nsummary(mpsz_popdata2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\n\nWith the above reference we can set our breaks in the following\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) + \n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#color-scheme",
    "href": "hands-on_ex/ex02/ho_ex02.html#color-scheme",
    "title": "Hands-on Exercise 2",
    "section": "4.4 Color Scheme",
    "text": "4.4 Color Scheme\nThe color ramp can also be change based on RColorBrewer package.\n\n\n4.4.1 Changing color ramp\nTo change the color ramp simply assign the palette argument in tm_fill()\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", n = 6, style = \"quantile\", palette = \"BuPu\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.4.2 Reverse color ramp\nTo reverse the color ramp add a - to the palette\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", n = 6, style = \"quantile\", palette = \"-BuPu\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#map-layouts",
    "href": "hands-on_ex/ex02/ho_ex02.html#map-layouts",
    "title": "Hands-on Exercise 2",
    "section": "4.5 Map Layouts",
    "text": "4.5 Map Layouts\nFor a comprehensive plot several map elements are required, such as the scale bar, compass, title etc.\n\n4.5.1 Map Legend\nIn the following we made out legend a histogram among other customization to it.\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", style = \"fisher\", palette = \"BuGn\", legend.hist = TRUE, legend.is.portrait = FALSE, legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Fisher classification)\",\n            main.title.position = \"center\", main.title.size = 1, legend.height = 0.45, legend.width = 0.35, legend.outside = FALSE, legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.5.2 Map Style\nTo simplify styling we can also use existing tmap styles\n\ntm_shape(mpsz_popdata2020)+\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"cobalt\")\n\n\n\n\n\n\n\n\n\n\n4.5.2 Cartographic Elements\nCartographic furnitures can also be added such compass, scale bar and grid lines using the tm_compass(), tm_scale_bar() and tm_grid() respectively\n\ntm_shape(mpsz_popdata2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"4star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\")) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\nTo reset tmap style to default simply run tmap_style(\"white\")"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#portraying-multiple-maps",
    "href": "hands-on_ex/ex02/ho_ex02.html#portraying-multiple-maps",
    "title": "Hands-on Exercise 2",
    "section": "4.6 Portraying Multiple Maps",
    "text": "4.6 Portraying Multiple Maps\nSmall maps aka facet maps can be arrange vertically or horizontally to help visualise relations between changes in variables. Such maps can be plotted in 3 ways: 1. By assigning multiple values to at least one of the aesthetic arguments, 2. by defining a group-by variable in tm_facets(), and 3. By creating multiple stand-alone maps with tmap_arrange().\n\n4.6.1 Defining with Aesthetic Arguments\nIn the following the values are assigned to ncols\n\ntm_shape(mpsz_popdata2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"), style = \"quantile\", palette = list(\"Blues\", \"Reds\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\n\n\n4.6.2 Defining with tm_facets()\nChoropleth created using tm_facets() based on the REGION_N\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Blues\", thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", free.coords=TRUE, drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE, title.position = c(\"center\", \"center\"),title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.6.3 Defining with tmap_arrange()\nAs seen previously tmap_arrange() can be used to render individual maps\n\nyoungmap &lt;- tm_shape(mpsz_popdata2020) + \n  tm_polygons(\"YOUNG\", style = \"quantile\", palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_popdata2020) + \n  tm_polygons(\"AGED\", style = \"quantile\", palette = \"Reds\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#mapping-with-selection-criterion",
    "href": "hands-on_ex/ex02/ho_ex02.html#mapping-with-selection-criterion",
    "title": "Hands-on Exercise 2",
    "section": "4.7 Mapping with Selection Criterion",
    "text": "4.7 Mapping with Selection Criterion\nInstead of mapping the entire data frame we can also map just parts of it by filtering the data frame\n\ntm_shape(mpsz_popdata2020[mpsz_popdata2020$REGION_N==\"NORTH-EAST REGION\", ]) +\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"YlGnBu\", legend.hist = TRUE, legend.is.portrait = TRUE,legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE, legend.outside.size = 0.2, legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Geospatial Analytics and Applications - IS415",
    "section": "",
    "text": "The following documents my GIS explorations:\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 6\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with Spatial Autocorrelation\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 2\n\n\n\nTake-home\n\n\n\nIn this exercise, we will be analyzing drug use offence in Thailand from 2017 - 2022, using spatial autocorrelation techniques to identify clusters, outliers and hotspots of…\n\n\n\nJeffery Lau\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 6\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver the Global and Local Spatial Autocorrelation Analysis Methods\n\n\n\nJeffery Lau\n\n\nSep 21, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 5\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with GWmodel\n\n\n\nJeffery Lau\n\n\nSep 16, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 5\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver the 1st and 2nd Order Spatial Point Patterns Analysis Methods\n\n\n\nJeffery Lau\n\n\nSep 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 4\n\n\n\nIn-class\n\n\n\nIn this exercise we learn how to work with sparr to perform spatial temporal analysis on our data\n\n\n\nJeffery Lau\n\n\nSep 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 4\n\n\n\nHands-on\n\n\n\nHands-on on Spatial-Temporal Analysis covered in In-class exercise 4\n\n\n\nJeffery Lau\n\n\nSep 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 1\n\n\n\nTake-home\n\n\n\nIn this exercise, We will be analyzing armed conflict data in Myanmar, using spatial point pattern analysis to understand the distribution and relationships between conflict…\n\n\n\nJeffery Lau\n\n\nSep 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 3\n\n\n\nIn-class\n\n\n\nIn this exercise we revisted on how to do proper CRS projection and transformations. Note: Last modified to update title only.\n\n\n\nJeffery Lau\n\n\nSep 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 3\n\n\n\nHands-on\n\n\n\nIn this exercise we discorver the 1st and 2nd Order Spatial Point Patterns Analysis Methods\n\n\n\nJeffery Lau\n\n\nAug 30, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 2\n\n\n\nIn-class\n\n\n\nIn this exercise we learn to handle corrupted data, transforming CRS as well as some geoprocessing and joining of geospatial and aspatial data. Note: Last modified to update…\n\n\n\nJeffery Lau\n\n\nAug 26, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 2\n\n\n\nHands-on\n\n\n\nIn this exercise we work with themeatic mapping using tmap package to visualize our data\n\n\n\nJeffery Lau\n\n\nAug 19, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 1\n\n\n\nIn-class\n\n\n\nFirst lesson, learnt how to setup quatro doc. Note: Last modified to update title only.\n\n\n\nJeffery Lau\n\n\nAug 19, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 1\n\n\n\nHands-on\n\n\n\nIn this exercise we get our first hands-on with geoprocessing and basic plotting with R\n\n\n\nJeffery Lau\n\n\nAug 17, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html",
    "href": "take-home_ex/ex02/th_ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Drug abuse is a significant global health issue with far-reaching consequences, including negative health outcomes, financial burdens, and social problems. Despite efforts to combat it, illicit drug consumption remains prevalent and continues to grow. In 2021, an estimated 296 million people aged 15–64 worldwide had used a drug in the past 12 months.\nThailand, situated near the Golden Triangle - the largest drug production site in Asia - has become a market and transit route for drug trafficking due to its geographic location and infrastructure development. This has made drug abuse a major social issue within the country.\nYouth are particularly vulnerable to drug abuse, with approximately 2.7 million Thai youths using drugs. Among 15-19-year-olds, around 300,000 require drug treatment. Vocational-school students are disproportionately affected, with nearly double the number of drug users compared to secondary-school students.\n\n\n\n\nDetermine if drug abuse indicator are spatially dependent\nIdentify clusters, outliers and hotspots of drug abuse\nIdentify emerging hot and cold spots"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#context",
    "href": "take-home_ex/ex02/th_ex02.html#context",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Drug abuse is a significant global health issue with far-reaching consequences, including negative health outcomes, financial burdens, and social problems. Despite efforts to combat it, illicit drug consumption remains prevalent and continues to grow. In 2021, an estimated 296 million people aged 15–64 worldwide had used a drug in the past 12 months.\nThailand, situated near the Golden Triangle - the largest drug production site in Asia - has become a market and transit route for drug trafficking due to its geographic location and infrastructure development. This has made drug abuse a major social issue within the country.\nYouth are particularly vulnerable to drug abuse, with approximately 2.7 million Thai youths using drugs. Among 15-19-year-olds, around 300,000 require drug treatment. Vocational-school students are disproportionately affected, with nearly double the number of drug users compared to secondary-school students."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#objectives",
    "href": "take-home_ex/ex02/th_ex02.html#objectives",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Determine if drug abuse indicator are spatially dependent\nIdentify clusters, outliers and hotspots of drug abuse\nIdentify emerging hot and cold spots"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#loading-packages",
    "href": "take-home_ex/ex02/th_ex02.html#loading-packages",
    "title": "Take-home Exercise 2",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\nIn this project we will be using the following packages:\n\ntmap: A package for creating thematic maps in R. It provides a simple and flexible interface for customizing maps and exporting them in various formats.\nsf: A package for simple feature data, which is a modern standard for representing geographic features. It provides efficient data structures and functions for spatial operations.\nsfdep: A package specifically designed for spatial dependence analysis. It provides functions for calculating spatial weights matrices, conducting global and local spatial autocorrelation tests (e.g., Moran’s I, Geary’s C), and performing spatial regression analysis.\ntidyverse: A collection of R packages designed for data manipulation, visualization, and analysis. It includes packages like dplyr, ggplot2, and tidyr, which are commonly used in data science workflows.\nkendall: A package used for performing Kendall’s rank correlation test. This test is often used to assess the degree of association between two variables when the data is ordinal or continuous but not normally distributed.\n\n\npacman::p_load(sf, sfdep, tmap, tidyverse, ggplot2, gridExtra, kendall)"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#loading-data",
    "href": "take-home_ex/ex02/th_ex02.html#loading-data",
    "title": "Take-home Exercise 2",
    "section": "2.2 Loading Data",
    "text": "2.2 Loading Data\nThis dataset presents statistics related to different types of drug offenses in Thailand, categorized by fiscal year. The data provides insights into the prevalence of various drug-related cases and their distribution across different provinces.\n\noff_sf &lt;- read_csv(\"data/aspatial/thai_drug_offenses_2017_2022.csv\")\n\nHere we will be loading Thailand’s administrative 1 (province) boundaries, in accordance with the drug offense dataset.\n\nprov_sf &lt;- st_read(dsn = \"data/geospatial/tha_adm_rtsd_itos_20210121_shp\", layer = \"tha_admbnda_adm1_rtsd_20220121\") %&gt;%\n              st_transform(crs = 24047)\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/IS415-GAA/take-home_ex/ex02/data/geospatial/tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#examining-data",
    "href": "take-home_ex/ex02/th_ex02.html#examining-data",
    "title": "Take-home Exercise 2",
    "section": "3.1 Examining Data",
    "text": "3.1 Examining Data\nBefore performing the join we need to identify if the column we are joining is clear for joining (ie. share the same spelling).\n\nprov_diff &lt;- function(off_sf_provinces, prov_sf_provinces) {\n  # Check if all provinces from off_sf are in prov_sf\n  all_off_sf_in_prov_sf &lt;- all(off_sf_provinces %in% prov_sf_provinces)\n  \n  # Check if all provinces from prov_sf are in off_sf\n  all_prov_sf_in_off_sf &lt;- all(prov_sf_provinces %in% off_sf_provinces)\n  \n  # Check if the sets are equal\n  sets_are_equal &lt;- all_off_sf_in_prov_sf && all_prov_sf_in_off_sf\n  \n  if (sets_are_equal) {\n    cat(\"All province names match.\\n\")\n  } else {\n    cat(\"There are mismatches in province names.\\n\")\n  \n    # Find the differences\n    cat(\"Missing in prov_sf:\", paste(setdiff(off_sf_provinces, prov_sf_provinces), collapse = \", \"), \"\\n\")\n    cat(\"Missing in off_sf:\", paste(setdiff(prov_sf_provinces, off_sf_provinces), collapse = \", \"), \"\\n\")\n  }\n}\n\nprov_diff(unique(off_sf$province_en), unique(prov_sf$ADM1_EN))\n\nThere are mismatches in province names.\nMissing in prov_sf: Loburi, buogkan \nMissing in off_sf: Lop Buri, Bueng Kan \n\n\n\n\n\n\n\n\nProvinces to Update\n\n\n\nNotice in the above when we compare the unique set from both SF there is 2 misspellings, where we will be renaming the province in off_sf:\n\nLoburi -&gt; Lop Buri\nBuogkan -&gt; Bueng Kan"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#updaing-mixmatched-province",
    "href": "take-home_ex/ex02/th_ex02.html#updaing-mixmatched-province",
    "title": "Take-home Exercise 2",
    "section": "3.2 Updaing Mixmatched Province",
    "text": "3.2 Updaing Mixmatched Province\nWe will perform the suggested naming and check if the provinces matches.\n\noff_sf &lt;- off_sf %&gt;%\n  mutate(province_en = case_when(\n    province_en == \"Loburi\" ~ \"Lop Buri\",\n    TRUE ~ province_en\n  ))\noff_sf &lt;- off_sf %&gt;%\n  mutate(province_en = case_when(\n    province_en == \"buogkan\" ~ \"Bueng Kan\",\n    TRUE ~ province_en\n  ))\n\nprov_diff(unique(off_sf$province_en), unique(prov_sf$ADM1_EN))\n\nAll province names match."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#joining-sf-on-province",
    "href": "take-home_ex/ex02/th_ex02.html#joining-sf-on-province",
    "title": "Take-home Exercise 2",
    "section": "3.3 Joining sf on Province",
    "text": "3.3 Joining sf on Province\nNow we can join the province and drug offense dataframe, left join on province since it is the sf df.\n\ndu_sf &lt;- left_join(prov_sf, off_sf, by = c(\"ADM1_EN\" = \"province_en\"))\nhead(du_sf)\n\nSimple feature collection with 6 features and 20 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 644049.1 ymin: 1491784 xmax: 710059.2 ymax: 1543010\nProjected CRS: Indian 1975 / UTM zone 47N\n  Shape_Leng Shape_Area ADM1_EN      ADM1_TH ADM1_PCODE ADM1_REF ADM1ALT1EN\n1   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n2   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n3   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n4   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n5   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n6   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     &lt;NA&gt;       &lt;NA&gt;\n  ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH ADM0_PCODE       date\n1       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n2       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n3       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n4       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n5       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n6       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย         TH 2019-02-18\n     validOn validTo fiscal_year types_of_drug_offenses no_cases  province_th\n1 2022-01-22    &lt;NA&gt;        2017         drug_use_cases    11871 กรุงเทพมหานคร\n2 2022-01-22    &lt;NA&gt;        2018         drug_use_cases    16480 กรุงเทพมหานคร\n3 2022-01-22    &lt;NA&gt;        2019         drug_use_cases    15067 กรุงเทพมหานคร\n4 2022-01-22    &lt;NA&gt;        2020         drug_use_cases     9724 กรุงเทพมหานคร\n5 2022-01-22    &lt;NA&gt;        2021         drug_use_cases     9625 กรุงเทพมหานคร\n6 2022-01-22    &lt;NA&gt;        2022         drug_use_cases     2755 กรุงเทพมหานคร\n                        geometry\n1 MULTIPOLYGON (((674854.6 15...\n2 MULTIPOLYGON (((674854.6 15...\n3 MULTIPOLYGON (((674854.6 15...\n4 MULTIPOLYGON (((674854.6 15...\n5 MULTIPOLYGON (((674854.6 15...\n6 MULTIPOLYGON (((674854.6 15..."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#filtering-to-just-drug-use",
    "href": "take-home_ex/ex02/th_ex02.html#filtering-to-just-drug-use",
    "title": "Take-home Exercise 2",
    "section": "3.4 Filtering to just Drug Use",
    "text": "3.4 Filtering to just Drug Use\nThe following are the types of drug related use cases captured within the data, for this particular project we will be scoping down the data for analysis to just drug_use_cases.\n\nunique(du_sf$types_of_drug_offenses)\n\n [1] \"drug_use_cases\"                                        \n [2] \"suspects_in_drug_use_cases\"                            \n [3] \"possession_cases\"                                      \n [4] \"suspects_in_possession_cases\"                          \n [5] \"possession_with_intent_to_distribute_cases\"            \n [6] \"suspects_in_possession_with_intent_to_distribute_cases\"\n [7] \"trafficking_cases\"                                     \n [8] \"suspects_in_trafficking_cases\"                         \n [9] \"production_cases\"                                      \n[10] \"suspects_in_production_cases\"                          \n[11] \"import_cases\"                                          \n[12] \"suspects_in_import_cases\"                              \n[13] \"export_cases\"                                          \n[14] \"suspects_in_export_cases\"                              \n[15] \"conspiracy_cases\"                                      \n[16] \"suspects_in_conspiracy_cases\"                          \n\n\nSince we will be predominately working with drug use offense, we will filter by drug_use_cases and remove columns that are not involved in analysis.\n\ndu_sf &lt;- du_sf %&gt;%\n  select(fiscal_year, types_of_drug_offenses, no_cases, ADM1_EN, geometry) %&gt;%\n  filter(types_of_drug_offenses == \"drug_use_cases\") %&gt;%\n  rename(year = fiscal_year,\n         cases = no_cases,\n         province = ADM1_EN) %&gt;%\n  select(-types_of_drug_offenses)\n\nhead(du_sf)\n\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 644049.1 ymin: 1491784 xmax: 710059.2 ymax: 1543010\nProjected CRS: Indian 1975 / UTM zone 47N\n  year cases province                       geometry\n1 2017 11871  Bangkok MULTIPOLYGON (((674854.6 15...\n2 2018 16480  Bangkok MULTIPOLYGON (((674854.6 15...\n3 2019 15067  Bangkok MULTIPOLYGON (((674854.6 15...\n4 2020  9724  Bangkok MULTIPOLYGON (((674854.6 15...\n5 2021  9625  Bangkok MULTIPOLYGON (((674854.6 15...\n6 2022  2755  Bangkok MULTIPOLYGON (((674854.6 15...\n\n\n\n3.5 Saving Dataframe\nWe will save the filtered province and joined sf df for reuse later\n\nprov_sf &lt;- prov_sf %&gt;%\n  select(ADM1_EN, geometry) %&gt;%\n  rename(province = ADM1_EN)\nwrite_rds(prov_sf, \"data/rds/province.rds\")\n\n\nwrite_rds(du_sf, \"data/rds/drug_use.rds\")\n\nLoad the province and joined df and create a drug use df without geometry for EDA\n\nprov_sf &lt;- read_rds(\"data/rds/province.rds\")\ndu_sf &lt;- read_rds(\"data/rds/drug_use.rds\")\ndu_df &lt;- du_sf %&gt;%\n  select(year, cases, province) %&gt;%\n  st_drop_geometry()"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#drug-use-cases-2017-2022",
    "href": "take-home_ex/ex02/th_ex02.html#drug-use-cases-2017-2022",
    "title": "Take-home Exercise 2",
    "section": "4.1 Drug Use Cases (2017-2022)",
    "text": "4.1 Drug Use Cases (2017-2022)\nThe data provided with the dataset is yearly record of the number of drug cases, let’s start by observing the trend of drug use in the past few years.\n\n# Aggregate cases by year\naggregated_data &lt;- du_df %&gt;%\n  group_by(year) %&gt;%\n  summarize(total_cases = sum(cases))\n\n# Create the line chart with a curved line and a centered title\nggplot(aggregated_data, aes(x = year, y = total_cases)) +\n  geom_smooth(method = \"loess\", se = FALSE, color = \"red\") +\n  geom_text(aes(label = total_cases), vjust = -0.5) + \n  labs(title = \"Total Cases Over Time\",\n       x = \"Year\",\n       y = \"Total Cases\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\nWe can see that the drug use cases spiked in 2021 doubling the number of cases in 2017."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#top-10-province",
    "href": "take-home_ex/ex02/th_ex02.html#top-10-province",
    "title": "Take-home Exercise 2",
    "section": "4.2 Top 10 Province",
    "text": "4.2 Top 10 Province\n\n# Create a function to generate the pie chart for a given year\ncreate_pie_chart &lt;- function(yr) {\n  # Group the data by province and sum the cases\n  province_data &lt;- du_df %&gt;%\n    filter(year == yr) %&gt;%\n    group_by(province) %&gt;%\n    summarize(total_cases = sum(cases))\n\n  # Sort the data by total_cases in descending order\n  province_data &lt;- province_data[order(-province_data$total_cases), ]\n\n  # Select the top 10 provinces\n  top_10_provinces &lt;- province_data[1:10, ]\n\n  # Create the pie chart with labels, smaller legend, text, and title\n  ggplot(top_10_provinces, aes(x = \"\", y = total_cases, fill = province)) +\n    geom_bar(stat = \"identity\", color = \"white\") +\n    coord_polar(theta = \"y\") +\n    geom_text(aes(label = total_cases), position = position_stack(vjust = 0.5), size = 2) +  # Smaller text size\n    labs(title = yr, size = 3) +  # Smaller title size\n    scale_fill_brewer(palette = \"YlOrRd\") +  # Use RdYlGn palette\n    theme_void() +\n    theme(legend.text = element_text(size = 3),\n          legend.key.size = unit(0.3, \"cm\"))  # Smaller legend text size\n}\n\n# Create a list of pie charts for each year\npie_charts &lt;- list()\nfor (year in 2017:2022) {\n  pie_charts[[year-2016]] &lt;- create_pie_chart(year)\n}\n\n# Arrange the charts in a 2x2 grid\ngrid.arrange(grobs = pie_charts, ncol = 3, nrow = 2)\n\n\n\n\n\n\n\n\nFrom the above pie charts the we can observe Bangkok, Chang Mai, Chon Buri have consistently remained at the top. It is also interesting to note Bangkok was off the list in 2022."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#spatial-distrbution-of-drug-use",
    "href": "take-home_ex/ex02/th_ex02.html#spatial-distrbution-of-drug-use",
    "title": "Take-home Exercise 2",
    "section": "4.3 Spatial Distrbution of Drug Use",
    "text": "4.3 Spatial Distrbution of Drug Use\n\nDistributionProvince\n\n\n\nmin_cases &lt;- min(du_sf$cases)\nmax_cases &lt;- max(du_sf$cases)\n\ntm_shape(du_sf) +\n    tm_fill(\"cases\",\n            breaks = seq(min_cases, max_cases, length.out = 6),\n            palette = \"YlOrRd\") +\n    tm_borders(alpha = 0.5) +\n    tm_layout(legend.outside = TRUE,\n              legend.outside.position = \"right\") +\n    tm_facets(by=\"year\",\n              free.coords = F,\n              drop.units = T)\n\n\n\n\n\n\n\n\nFrom the choropleth plot we can observe that there seemed to be more cases of drug use 2021.\n\n\n\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYear Selection\n\n\n\nGiven the recency and the spike in cases during 2021, we shall work on the 3 years of 2020 - 2022 to narrow our focus and gather deeper insights from these years."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#examine-contiguity",
    "href": "take-home_ex/ex02/th_ex02.html#examine-contiguity",
    "title": "Take-home Exercise 2",
    "section": "5.1 Examine Contiguity",
    "text": "5.1 Examine Contiguity\n\n5.1.1 Computing Contiguity\nHere we will be computing the contiguity of our provinces, where we use the queen contiguity by default\n\n# Calculate contiguity neighbors\nnb &lt;- st_contiguity(prov_sf$geometry)\n\nThe st_contiguity analysis reveals that there are 77 contiguous regions in the data. The majority of regions have between 3 and 5 neighbors, indicating a moderate level of spatial connectivity. However, there are also some regions with fewer neighbors, including one region that has no neighbors at all. This region might be an outlier or an island that is not connected to any other regions in the data.\n\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n\n\nRegion 67 is indicated to have no links and it is identified to be Phuket which happens to be an island on it’s own.\n\nprov_sf$province[[67]]\n\n[1] \"Phuket\"\n\n\n\n\n\n\n\n\nLand link\n\n\n\nDespite Phuket being an island there is actually a land link between Phuket and Phang Nga. \n\n\n\n\n5.1.2 Fixing Contiguity\nTo ensure we account for the landlink we will be adding Phang Nga as part of Phuket’s neighbor for the sake of our subsequent analysis.\n\nwhich(unique(prov_sf$province) == \"Phangnga\")\n\n[1] 66\n\n\n\n# Adding into each others link\nnb[[67]] &lt;- as.integer(c(66))\nnb[[66]] &lt;- c(nb[[66]], as.integer(67))\n\n\n\n5.1.3 Visualizing Contiguity\nThe following plot portrays the connectivity between the provinces using the queens contiguity, note that Phuket is also now linked with Phang Nga. With the nb we can proceed with perform the Spatial Autocorrelation analysis\n\n# Visualize the contiguity\nplot(st_geometry(prov_sf), border = 'lightgrey')\nplot(nb, st_geometry(prov_sf), pch = 19, cex = 0.6, col = 'red', add = TRUE)"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#morans-i",
    "href": "take-home_ex/ex02/th_ex02.html#morans-i",
    "title": "Take-home Exercise 2",
    "section": "5.2 Moran’s I",
    "text": "5.2 Moran’s I\nTo identify general clustering and dispersion of drug use across provinces we shall employ Moran’s I test.\n\n5.2.1 Moran’s I Test\nWe will begin by computing the the weight matrix across the years 2020 - 2022.\n\n# Storing our weights into a list\ndu_wm &lt;- list()\nfor (yr in 2020:2022) {\n  du_wm[[yr-2019]] &lt;- du_sf %&gt;%\n    filter(year == yr) %&gt;%\n    mutate(nb = nb, wt = st_weights(nb, style = \"W\"), .before = 1)\n}\n\nhead(du_wm[[1]])\n\nSimple feature collection with 6 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n                      nb\n1    2, 3, 4, 15, 59, 60\n2                  1, 15\n3            1, 4, 5, 59\n4    1, 3, 5, 10, 15, 17\n5 3, 4, 6, 7, 10, 58, 59\n6            5, 7, 8, 58\n                                                                           wt\n1            0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n2                                                                    0.5, 0.5\n3                                                      0.25, 0.25, 0.25, 0.25\n4            0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n5 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n6                                                      0.25, 0.25, 0.25, 0.25\n  year cases                 province                       geometry\n1 2020  9724                  Bangkok MULTIPOLYGON (((674854.6 15...\n2 2020  1816             Samut Prakan MULTIPOLYGON (((687654.3 15...\n3 2020   937               Nonthaburi MULTIPOLYGON (((645332.7 15...\n4 2020  1192             Pathum Thani MULTIPOLYGON (((704600.8 15...\n5 2020  1745 Phra Nakhon Si Ayutthaya MULTIPOLYGON (((663456.7 16...\n6 2020   423                Ang Thong MULTIPOLYGON (((643988 1636...\n\n\n\n202020212022\n\n\n\nglimpse(global_moran(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt))\n\nList of 2\n $ I: num 0.0876\n $ K: num 10.4\n\nglobal_moran_test(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 1.3777, p-value = 0.08414\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.087572782      -0.013157895       0.005345516 \n\n\nBased on these results, there is some evidence of positive spatial autocorrelation in drug use in 2020 (I: 0.0876). However, the observed clustering is not statistically significant where p-value &gt; 0.05. This suggests that while there might be a tendency for drug use to cluster geographically, the observed pattern could be due to chance.\n\n\n\nglimpse(global_moran(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt))\n\nList of 2\n $ I: num 0.201\n $ K: num 4.71\n\nglobal_moran_test(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.808, p-value = 0.002493\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.201001723      -0.013157895       0.005816956 \n\n\nBased on these results, there is strong evidence of positive spatial autocorrelation in drug use in 2021 (I: 0.201). The observed clustering is statistically significant where p-value &lt; 0.05, suggesting that the pattern is unlikely to be due to chance. This indicates a more pronounced tendency for drug use to cluster geographically in 2021 compared to 2020.\n\n\n\nglimpse(global_moran(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt))\n\nList of 2\n $ I: num 0.216\n $ K: num 3.88\n\nglobal_moran_test(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.9826, p-value = 0.001429\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.21564943       -0.01315789        0.00588501 \n\n\nBased on these results, similar to 2021, there is strong evidence of positive spatial autocorrelation in drug use in 2022 (I: 0.216). The observed clustering is statistically significant where p-value &lt; 0.05, suggesting that the pattern is unlikely to be due to chance.\n\n\n\n\n\n5.2.2 Moran I Perm Test\nGiven that we are running simulations, we start by setting the seed to ensure subsequent reproducibility.\n\nset.seed(888)\n\n\n202020212022\n\n\n\ndu_mi_perm_20 &lt;- global_moran_perm(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt, nsim = 99)\ndu_mi_perm_20\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.087573, observed rank = 92, p-value = 0.16\nalternative hypothesis: two.sided\n\nsummary(du_mi_perm_20$res)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.13071 -0.05919 -0.02025 -0.01037  0.03147  0.25448 \n\n\nBased on the observed Moran’s I statistic of 0.087573 has a rank of 93 out of 100 simulations, resulting in a p-value of 0.16. This suggests a weak positive spatial autocorrelation, however the observed spatial autocorrelation is not statistically significant at a 5% level.\n\nhist(du_mi_perm_20$res, freq=TRUE, breaks=20, xlab=\"Simulated Moran's I\", main=\"Histogram of Simulated Moran's I (2020, sims = 99)\")\nabline(v=0, col=\"red\")\n\n\n\n\n\n\n\n\n\n\n\ndu_mi_perm_21 &lt;- global_moran_perm(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt, nsim = 99)\ndu_mi_perm_21\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.201, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\nsummary(du_mi_perm_21$res)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.17864 -0.06450 -0.01222 -0.01162  0.03652  0.20100 \n\n\nBased on the observed Moran’s I statistic of 0.201 has a rank of 99 out of 100 simulations, resulting in a p-value of 0.02. This suggests a positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level, as the p-value is less than 0.05.\n\nhist(du_mi_perm_21$res, freq=TRUE, breaks=20, xlab=\"Simulated Moran's I\", main=\"Histogram of Simulated Moran's I (2021, sims = 99)\")\nabline(v=0, col=\"red\")\n\n\n\n\n\n\n\n\n\n\n\ndu_mi_perm_22 &lt;- global_moran_perm(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt, nsim = 99)\ndu_mi_perm_22\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.21565, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\nsummary(du_mi_perm_22$res)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.24803 -0.07494 -0.02639 -0.01746  0.03541  0.21565 \n\n\nBased on the observed Moran’s I statistic of 0.21565 has a rank of 100 out of 100 simulations, resulting in a p-value of 2.2e-16. This suggests a positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level, as the p-value is less than 0.05.\n\nhist(du_mi_perm_22$res, freq=TRUE, breaks=20, xlab=\"Simulated Moran's I\", main=\"Histogram of Simulated Moran's I (2022, sims = 99)\")\nabline(v=0, col=\"red\")"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#geary-c",
    "href": "take-home_ex/ex02/th_ex02.html#geary-c",
    "title": "Take-home Exercise 2",
    "section": "5.3 Geary C",
    "text": "5.3 Geary C\nNext we shall further understand and verify if our findings with Moran’s I is consistent with the Geary’s C test.\n\n5.2.1 Geary C Test\n\n202020212022\n\n\n\nglimpse(global_c(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt))\n\nList of 2\n $ C: num 0.952\n $ K: num 10.4\n\nglobal_c_test(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt)\n\n\n    Geary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 0.47287, p-value = 0.3182\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       0.95158530        1.00000000        0.01048272 \n\n\nBased on these results, there is weak evidence of spatial clustering in drug use in 2020. The Geary’s C statistic of 0.9516 is close to the expected value of 1, and the p-value of 0.3182 is not statistically significant. This suggests that the observed pattern of drug use is not significantly dispersed across space.\n\n\n\nglimpse(global_c(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt))\n\nList of 2\n $ C: num 0.847\n $ K: num 4.71\n\nglobal_c_test(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt)\n\n\n    Geary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 1.7358, p-value = 0.0413\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.847281286       1.000000000       0.007741081 \n\n\nBased on these results, there is some evidence of spatial clustering in drug use in 2021. The Geary’s C statistic of 0.847281286 is lower than the expected value of 1, and the p-value of 0.0413 is statistically significant. Suggesting a tendency for provinces with high drug use rates to be surrounded by provinces with low drug use rates (dispersion).\n\n\n\nglimpse(global_c(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt))\n\nList of 2\n $ C: num 0.836\n $ K: num 3.88\n\nglobal_c_test(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt)\n\n\n    Geary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 1.9173, p-value = 0.0276\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.835677203       1.000000000       0.007345315 \n\n\nBased on these results, similar to 2021 there is some evidence of spatial clustering in drug use in 2022. The Geary’s C statistic of 0.835677203 is lower than the expected value of 1, and the p-value of 0.0276 is statistically significant. Suggesting a tendency for provinces with high drug use rates to be surrounded by provinces with low drug use rates (dispersion).\n\n\n\n\n\n5.2.2 Geary C Perm Test\n\n202020212022\n\n\n\ndu_gc_perm_20 &lt;- global_c_perm(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt, nsim = 99)\ndu_gc_perm_20\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.95159, observed rank = 31, p-value = 0.31\nalternative hypothesis: greater\n\nsummary(du_gc_perm_20$res)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7866  0.9359  1.0073  1.0061  1.0732  1.2449 \n\n\nBased on the observed Geary C statistic of 0.95159 has a rank of 29 out of 100 simulations, resulting in a p-value of 0.29. This suggests a weak positive spatial autocorrelation in the data and that the observed spatial dispersion is not statistically significant at a 5% level.\n\nhist(du_gc_perm_20$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\", main=\"Histogram of Simulated Geary's c (2020, sims = 99)\")\nabline(v=1, col=\"red\")\nabline(v=du_gc_perm_20$statistic, col=\"blue\", lwd=2)\n\n\n\n\n\n\n\n\n\n\n\ndu_gc_perm_21 &lt;- global_c_perm(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt, nsim = 99)\ndu_gc_perm_21\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.84728, observed rank = 4, p-value = 0.04\nalternative hypothesis: greater\n\nsummary(du_gc_perm_21$res)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7609  0.9299  1.0052  0.9994  1.0581  1.3582 \n\n\nBased on the observed Geary C statistic of 0.84728 has a rank of 8 out of 100 simulations, resulting in a p-value of 0.08. This suggests a weak positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level.\n\nhist(du_gc_perm_21$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\", main=\"Histogram of Simulated Geary's c (2021, sims = 99)\")\nabline(v=1, col=\"red\")\nabline(v=du_gc_perm_21$statistic, col=\"blue\", lwd=2)\n\n\n\n\n\n\n\n\n\n\n\ndu_gc_perm_22 &lt;- global_c_perm(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt, nsim = 99)\ndu_gc_perm_22\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.83568, observed rank = 5, p-value = 0.05\nalternative hypothesis: greater\n\nsummary(du_gc_perm_22$res)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7756  0.9421  0.9924  0.9927  1.0448  1.2929 \n\n\nBased on the observed Geary C statistic of 0.83568 has a rank of 2 out of 100 simulations, resulting in a p-value of 0.02. This suggests a weak positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level.\n\nhist(du_gc_perm_22$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\", main=\"Histogram of Simulated Geary's c (2022, sims = 99)\")\nabline(v=1, col=\"red\")\nabline(v=du_gc_perm_22$statistic, col=\"blue\", lwd=2)"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#moran-i",
    "href": "take-home_ex/ex02/th_ex02.html#moran-i",
    "title": "Take-home Exercise 2",
    "section": "6.1 Moran I",
    "text": "6.1 Moran I\n\n6.1.1 Computing Local Moran I\nWe start by computing the local Moran’s I for each year.\n\n202020212022\n\n\n\ndu_lm_20 &lt;- du_wm[[1]] %&gt;%\n  mutate(local_moran = local_moran(cases, nb, wt, nsim = 99), .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(du_lm_20)\n\nSimple feature collection with 6 features and 17 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 18\n       ii       eii    var_ii   z_ii     p_ii p_ii_sim p_folded_sim skewness\n    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1 -0.904  -0.466    1.74      -0.332 0.740        0.84         0.42    0.699\n2 -0.0335 -0.000444 0.0000866 -3.55  0.000386     0.02         0.01   -1.36 \n3 -0.556  -0.00112  0.0698    -2.10  0.0358       0.08         0.04   -1.16 \n4 -0.217   0.00130  0.0240    -1.40  0.160        0.22         0.11   -1.23 \n5  0.0223 -0.00293  0.000508   1.12  0.264        0.18         0.09   -1.03 \n6  0.317  -0.00215  0.190      0.731 0.465        0.34         0.17   -1.54 \n# ℹ 10 more variables: kurtosis &lt;dbl&gt;, mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;,\n#   nb &lt;nb&gt;, wt &lt;list&gt;, year &lt;dbl&gt;, cases &lt;dbl&gt;, province &lt;chr&gt;,\n#   geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\ndu_lm_21 &lt;- du_wm[[2]] %&gt;%\n  mutate(local_moran = local_moran(cases, nb, wt, nsim = 99), .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(du_lm_21)\n\nSimple feature collection with 6 features and 17 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 18\n       ii      eii  var_ii   z_ii   p_ii p_ii_sim p_folded_sim skewness kurtosis\n    &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 -0.906   3.43e-3 1.48    -0.747 0.455      0.56         0.28    0.729    0.456\n2 -0.321  -2.07e-3 0.0195  -2.29  0.0221     0.06         0.03   -0.708   -0.255\n3  0.0221 -4.44e-4 0.00137  0.610 0.542      0.5          0.25    0.711    0.297\n4 -0.150   1.33e-3 0.0436  -0.727 0.467      0.5          0.25   -0.411   -0.399\n5  0.294   3.71e-2 0.0352   1.37  0.171      0.12         0.06   -0.428   -0.671\n6  0.635   1.25e-2 0.198    1.40  0.162      0.12         0.06   -0.455   -0.472\n# ℹ 9 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, year &lt;dbl&gt;, cases &lt;dbl&gt;, province &lt;chr&gt;,\n#   geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\ndu_lm_22 &lt;- du_wm[[3]] %&gt;%\n  mutate(local_moran = local_moran(cases, nb, wt, nsim = 99), .before = 1) %&gt;%\n  unnest(local_moran)\n\nhead(du_lm_22)\n\nSimple feature collection with 6 features and 17 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 18\n       ii      eii   var_ii   z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 -0.285   0.0358  0.170    -0.779 0.436     0.44         0.22    0.242   -0.501\n2  0.111  -0.00160 0.0396    0.567 0.571     0.58         0.29    0.927    1.50 \n3 -0.165   0.00604 0.143    -0.451 0.652     0.56         0.28   -0.692    0.559\n4  0.0112  0.00209 0.000393  0.459 0.646     0.7          0.35   -0.274   -0.349\n5  0.132  -0.00189 0.0156    1.07  0.284     0.2          0.1    -0.539    0.344\n6  0.436  -0.0287  0.161     1.16  0.246     0.26         0.13   -0.157   -0.894\n# ℹ 9 more variables: mean &lt;fct&gt;, median &lt;fct&gt;, pysal &lt;fct&gt;, nb &lt;nb&gt;,\n#   wt &lt;list&gt;, year &lt;dbl&gt;, cases &lt;dbl&gt;, province &lt;chr&gt;,\n#   geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\n\n\n\n\n\n\nIntepretation of Attributes\n\n\n\nii: local moran i p_ii: p-value with base method p_ii_sim: Based on simulation\nmean: Cluster type Labels median: Similar to mean (Better option if there are significant skewness in data)\n\n\n\n\n6.1.2 Visualizing I Values\n\n202020212022Province\n\n\n\npii_m &lt;- tm_shape(du_lm_20) +\n  tm_fill(\"p_ii_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value (2020)\", main.title.size = 1)\n\nii_m &lt;- tm_shape(du_lm_20) +\n  tm_fill(\"ii\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I (2020)\", main.title.size = 1)\n\ntmap_arrange(ii_m, pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, we observed clusters of higher drug use in central provinces like Chon Buri and Rayong, while Mae Hong Son appeared as an outlier with significantly different drug use patterns (low) as compared to it’s neighbors. The low p-values associated with these clusters indicate a high likelihood of statistically significant spatial autocorrelation, suggesting that the observed patterns may likely not be due to chance.\n\n\n\npii_m &lt;- tm_shape(du_lm_21) +\n  tm_fill(\"p_ii_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value (2021)\", main.title.size = 1)\n\nii_m &lt;- tm_shape(du_lm_21) +\n  tm_fill(\"ii\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I (2021)\", main.title.size = 1)\n\ntmap_arrange(ii_m, pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, we observed clusters of higher drug use increased across Thailand. Besides the central provinces like Chon Buri and Rayong, the southern province of Surat Thani and Nakhon as well as the eastern province of Ubon all experienced higher drug and clustering patterns, while Mae Hong Son remains as an outlier as compared to it’s neighbors. The p-values however seems to be mixed, indicating a varied likelihood of statistically significant spatial autocorrelation.\n\n\n\npii_m &lt;- tm_shape(du_lm_22) +\n  tm_fill(\"p_ii_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value (2022)\", main.title.size = 1)\n\nii_m &lt;- tm_shape(du_lm_22) +\n  tm_fill(\"ii\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I (2022)\", main.title.size = 1)\n\ntmap_arrange(ii_m, pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, we observed a general decrease in drug use across Thailand. However we observe strong clustering patterns in central provinces of Udon, Kalasin and Khon Kaen, while Mae Hong Son remains as an outlier as compared to it’s neighbors. The p-values associated with the central province seems to be low, indicating a high likelihood of statistically significant spatial autocorrelation.\n\n\n\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.1.3 LISA Cluster Map\nNext we will examining the significant locations color coded by type of spatial autocorrelation.\n\n202020212022\n\n\n\nlisa_sig &lt;- du_lm_20 %&gt;%\n  filter(p_ii_sim &lt; 0.1) \n\ntm_shape(du_lm_20) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, we observed a high-high cluster of drug use in the central provinces surrounding Bangkok. This suggests that areas with high drug use rates are clustered together in this region. Additionally, several low-high outliers were identified, indicating areas with high drug use rates surrounded by areas with low drug use rates. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n\n\nlisa_sig &lt;- du_lm_21 %&gt;%\n  filter(p_ii_sim &lt; 0.1) \n\ntm_shape(du_lm_21) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, we observed a low-low cluster of drug use in the western provinces. Additionally, we can observe several smaller high-high clusters scattered around. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n\n\nlisa_sig &lt;- du_lm_22 %&gt;%\n  filter(p_ii_sim &lt; 0.1) \n\ntm_shape(du_lm_22) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, similar to 2021 we observed a low-low cluster of drug use in the western provinces. Additionally, we can observe large high-high clusters in the northen-central provinces of Kalasin and Udon Thani. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#hotspot-and-coldspot-analysis",
    "href": "take-home_ex/ex02/th_ex02.html#hotspot-and-coldspot-analysis",
    "title": "Take-home Exercise 2",
    "section": "6.2 Hotspot and Coldspot Analysis",
    "text": "6.2 Hotspot and Coldspot Analysis\nTo further analyze the spatial distribution of drug use, we can employ the Getis-Ord Gi* statistic to identify local hotspots and coldspots. This analysis will help pinpoint specific areas with significantly high or low concentrations of drug use, providing valuable insights into the spatial patterns of the phenomenon. Before we start we will need to get the inverse weight matrix for Gi* statistics to work.\n\n# Storing our weights into a list\ndu_iwm &lt;- list()\nfor (yr in 2020:2022) {\n  du_iwm[[yr-2019]] &lt;- du_sf %&gt;%\n    filter(year == yr) %&gt;%\n    mutate(nb = nb,\n           wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1),\n           .before = 1)\n}\n\nhead(du_iwm[[1]])\n\nSimple feature collection with 6 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n                      nb\n1    2, 3, 4, 15, 59, 60\n2                  1, 15\n3            1, 4, 5, 59\n4    1, 3, 5, 10, 15, 17\n5 3, 4, 6, 7, 10, 58, 59\n6            5, 7, 8, 58\n                                                                                               wts\n1               5.330037e-05, 2.809414e-05, 2.416100e-05, 9.504299e-06, 1.709074e-05, 2.216785e-05\n2                                                                       5.330037e-05, 1.095141e-05\n3                                           2.809414e-05, 3.315966e-05, 1.995419e-05, 3.180094e-05\n4               2.416100e-05, 3.315966e-05, 2.932427e-05, 1.431406e-05, 8.594233e-06, 1.667747e-05\n5 1.995419e-05, 2.932427e-05, 3.095582e-05, 9.832177e-06, 1.967158e-05, 1.638466e-05, 1.407828e-05\n6                                           3.095582e-05, 1.069042e-05, 2.974675e-05, 2.628824e-05\n  year cases                 province                       geometry\n1 2020  9724                  Bangkok MULTIPOLYGON (((674854.6 15...\n2 2020  1816             Samut Prakan MULTIPOLYGON (((687654.3 15...\n3 2020   937               Nonthaburi MULTIPOLYGON (((645332.7 15...\n4 2020  1192             Pathum Thani MULTIPOLYGON (((704600.8 15...\n5 2020  1745 Phra Nakhon Si Ayutthaya MULTIPOLYGON (((663456.7 16...\n6 2020   423                Ang Thong MULTIPOLYGON (((643988 1636...\n\n\n\n6.2.1 Computing Local Gi*\n\n202020212022\n\n\n\nhcsa_20 &lt;- du_iwm[[1]] %&gt;%\n  mutate(local_Gi = local_gstar_perm(cases, nb, wts, nsim = 99), .before = 1) %&gt;%\n  unnest(local_Gi) \n\nhead(hcsa_20)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 16\n  gi_star cluster   e_gi    var_gi std_dev  p_value p_sim p_folded_sim skewness\n    &lt;dbl&gt; &lt;fct&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1    1.34 High    0.0208 0.0000132  -0.513 0.608     0.72         0.36    0.518\n2    2.98 Low     0.0133 0.0000353   3.42  0.000635  0.04         0.02    1.93 \n3    1.71 Low     0.0120 0.0000207   2.21  0.0271    0.12         0.06    1.02 \n4    1.21 Low     0.0123 0.0000173   1.45  0.146     0.18         0.09    1.72 \n5   -1.08 Low     0.0130 0.0000205  -0.995 0.320     0.18         0.09    0.983\n6   -1.09 Low     0.0101 0.0000187  -0.668 0.504     0.58         0.29    1.41 \n# ℹ 7 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, year &lt;dbl&gt;,\n#   cases &lt;dbl&gt;, province &lt;chr&gt;, geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\nhcsa_21 &lt;- du_iwm[[2]] %&gt;%\n  mutate(local_Gi = local_gstar_perm(cases, nb, wts, nsim = 99), .before = 1) %&gt;%\n  unnest(local_Gi) \n\nhead(hcsa_21)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 16\n  gi_star cluster   e_gi    var_gi std_dev p_value p_sim p_folded_sim skewness\n    &lt;dbl&gt; &lt;fct&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1   0.289 High    0.0163 0.0000116  -0.661  0.509   0.56         0.28   0.520 \n2   1.74  Low     0.0122 0.0000287   2.09   0.0370  0.1          0.05   1.01  \n3   0.538 High    0.0126 0.0000162   0.712  0.476   0.5          0.25   0.714 \n4   0.482 Low     0.0124 0.0000199   0.542  0.588   0.44         0.22   1.23  \n5  -1.68  Low     0.0120 0.0000119  -1.44   0.151   0.18         0.09   0.495 \n6  -1.68  Low     0.0107 0.0000128  -1.52   0.129   0.12         0.06   0.0274\n# ℹ 7 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, year &lt;dbl&gt;,\n#   cases &lt;dbl&gt;, province &lt;chr&gt;, geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\nhcsa_22 &lt;- du_iwm[[3]] %&gt;%\n  mutate(local_Gi = local_gstar_perm(cases, nb, wts, nsim = 99), .before = 1) %&gt;%\n  unnest(local_Gi) \n\nhead(hcsa_22)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 16\n  gi_star cluster   e_gi    var_gi std_dev p_value p_sim p_folded_sim skewness\n    &lt;dbl&gt; &lt;fct&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1 -0.308  High    0.0140 0.0000105  -0.609   0.543  0.58         0.29    0.326\n2  0.647  High    0.0144 0.0000188   0.435   0.664  0.62         0.31    0.625\n3  0.0640 Low     0.0116 0.0000150   0.430   0.667  0.54         0.27    0.828\n4 -0.575  Low     0.0127 0.0000118  -0.452   0.651  0.78         0.39    0.366\n5 -1.21   Low     0.0125 0.0000105  -0.979   0.327  0.38         0.19    0.237\n6 -1.40   Low     0.0113 0.0000150  -0.965   0.335  0.24         0.12    0.921\n# ℹ 7 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, year &lt;dbl&gt;,\n#   cases &lt;dbl&gt;, province &lt;chr&gt;, geometry &lt;MULTIPOLYGON [m]&gt;\n\n\n\n\n\n\n\n6.2.2 Visualizing Gi* Values\n\n202020212022Province\n\n\n\nh_pii_m &lt;- tm_shape(hcsa_20) +\n  tm_fill(\"p_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value (2020)\", main.title.size = 1)\n\nh_ii_m &lt;- tm_shape(hcsa_20) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I (2020)\", main.title.size = 1)\n\ntmap_arrange(h_ii_m, h_pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, similar to Moran’s I plot we observed a cluster of hotspots in central provinces, slightly north around Nakhon Sawan we observe a cluster of coldspot. The generally low p-values associated with these clusters indicate a high likelihood of statistically significant hotspot and coldspot.\n\n\n\nh_pii_m &lt;- tm_shape(hcsa_21) +\n  tm_fill(\"p_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value (2021)\", main.title.size = 1)\n\nh_ii_m &lt;- tm_shape(hcsa_21) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I (2021)\", main.title.size = 1)\n\ntmap_arrange(h_ii_m, h_pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, we observed a cluster of hotspots in eastern provinces, and similar to Moran’s I analysis a cluster of coldspot to the western provinces. The mixed p-values associated with these clusters indicate a varying likelihood of statistically significant hotspot and coldspot.\n\n\n\nh_pii_m &lt;- tm_shape(hcsa_22) +\n  tm_fill(\"p_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value (2022)\", main.title.size = 1)\n\nh_ii_m &lt;- tm_shape(hcsa_22) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I (2022)\", main.title.size = 1)\n\ntmap_arrange(h_ii_m, h_pii_m, ncol = 2)\n\n\n\n\n\n\n\n\nBased on the plot, we observed a cluster of hotspots in north-central province, and similary a cluster of coldspot to the western provinces. The relatively low p-values associated with these clusters indicate a highly likelihood of statistically significant hotspot and coldspot.\n\n\n\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.1.3 HCSA LISA Map\n\n202020212022\n\n\n\nHCSA_sig &lt;- hcsa_20 %&gt;%\n  filter(p_sim &lt; 0.1) \n\ntm_shape(hcsa_20) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, we observed a hotspot in the central near Chantha Buri, and a couple of coldspots in the proximity of Nakhon Sawan. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n\n\nHCSA_sig &lt;- hcsa_21 %&gt;%\n  filter(p_sim &lt; 0.1) \n\ntm_shape(hcsa_21) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, we observe a cluster of coldspots in the western provinces and several hotspots to the east. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n\n\nHCSA_sig &lt;- hcsa_22 %&gt;%\n  filter(p_sim &lt; 0.1) \n\ntm_shape(hcsa_22) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nBased on the LISA map, similar to 2021 we observe a cluster of coldspots in the western provinces although not as significant. Additionally we also the development of a cluster of hotspots in and around the northern province of Kalasin in 2022. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#computing-bos",
    "href": "take-home_ex/ex02/th_ex02.html#computing-bos",
    "title": "Take-home Exercise 2",
    "section": "7.1 Computing BOS",
    "text": "7.1 Computing BOS\nWe start by calculating the spacetime object with the drug use df and the province sf df.\n\nbos &lt;- spacetime(du_df, prov_sf,\n                 .loc_col = \"province\",\n                 .time_col = \"year\")\n\nNext we compute the neighbor and weights for the spacetime object.\n\nbos_nb &lt;- bos %&gt;% \n  activate(\"geometry\") %&gt;%\n  mutate(\n    nb = include_self(st_contiguity(geometry)),\n    wt = st_weights(nb)\n  ) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")"
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#emerging-hotspot-analysis-1",
    "href": "take-home_ex/ex02/th_ex02.html#emerging-hotspot-analysis-1",
    "title": "Take-home Exercise 2",
    "section": "7.2 Emerging Hotspot Analysis",
    "text": "7.2 Emerging Hotspot Analysis\nEmerging Hot Spot Analysis identifies trends in spatial clustering over a period of time. Emerging hot spot analysis combines the Getis-Ord Gi* statistic with the Mann-Kendall trend test to determine if there is a temporal trend associated with local clustering of hot and cold spots.\n\nehsa &lt;- emerging_hotspot_analysis(\n  x = bos_nb,\n  .var = \"cases\",\n  k = 1,\n  nsim = 99,\n  nb_col = \"nb\",\n  wt_col = \"wt\"\n)\nhead(ehsa)\n\n                  location        tau   p_value      classification\n1                  Bangkok  0.3333333 0.4523704 no pattern detected\n2             Samut Prakan -0.3333333 0.4523704   sporadic coldspot\n3               Nonthaburi  0.2000000 0.7071142    sporadic hotspot\n4             Pathum Thani  0.3333333 0.4523704 no pattern detected\n5 Phra Nakhon Si Ayutthaya  0.3333333 0.4523704         new hotspot\n6                Ang Thong  0.3333333 0.4523704    sporadic hotspot\n\n\n\n\n\n\n\n\nEHSA Intepretation\n\n\n\ntau: The tau value represents the Kendall’s tau coefficient, which measures the strength and direction of the monotonic trend in the Gi* values over time. tau &gt; 0: Indicates a positive trend, suggesting that the location is becoming a hotspot (increasing Gi* values). tau &lt; 0: Indicates a negative trend, suggesting that the location is becoming a coldspot (decreasing Gi* values). tau ≈ 0: Indicates no significant trend.\n\n\nWe will be joining the ehsa df with the province sf df for the spatial attribute.\n\nehsa_sf &lt;- left_join(prov_sf, ehsa, by = c(\"province\" = \"location\"))\nhead(ehsa_sf)\n\nSimple feature collection with 6 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n                  province        tau   p_value      classification\n1                  Bangkok  0.3333333 0.4523704 no pattern detected\n2             Samut Prakan -0.3333333 0.4523704   sporadic coldspot\n3               Nonthaburi  0.2000000 0.7071142    sporadic hotspot\n4             Pathum Thani  0.3333333 0.4523704 no pattern detected\n5 Phra Nakhon Si Ayutthaya  0.3333333 0.4523704         new hotspot\n6                Ang Thong  0.3333333 0.4523704    sporadic hotspot\n                        geometry\n1 MULTIPOLYGON (((674854.6 15...\n2 MULTIPOLYGON (((687654.3 15...\n3 MULTIPOLYGON (((645332.7 15...\n4 MULTIPOLYGON (((704600.8 15...\n5 MULTIPOLYGON (((663456.7 16...\n6 MULTIPOLYGON (((643988 1636..."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#visualizing-ehca",
    "href": "take-home_ex/ex02/th_ex02.html#visualizing-ehca",
    "title": "Take-home Exercise 2",
    "section": "7.3 Visualizing EHCA",
    "text": "7.3 Visualizing EHCA\n\n7.3.1 Tau, Classification and p-value\n\ne_p_m &lt;- tm_shape(ehsa_sf) +\n  tm_fill(\"p_value\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"EHSA p-value\", main.title.size = 1)\n\ne_c_m &lt;- tm_shape(ehsa_sf) +\n  tm_fill(\"classification\", palette = \"Spectral\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"EHSA Classification\", main.title.size = 1)\n\ne_t_m &lt;- tm_shape(ehsa_sf) +\n  tm_fill(\"tau\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"EHSA tau-value\", main.title.size = 1)\n\ntmap_arrange(e_t_m, e_c_m, e_p_m, ncol = 3)\n\n\n\n\n\n\n\n\nWe can observe a scatter of emerging hot and cold spots within our tau plot while the classification plot further points out several new hotspots. However the p-value is highly mixed which results in varying statistically significance. To help narrow down our analysis we can filter by p-value in a EHSA LISA map for further analysis.\n\n\n7.2.3 EHSA LISA Map (85% Confidence)\n\nEHSA_sig &lt;- ehsa_sf %&gt;%\n  filter(p_value &lt; 0.15) \n\ne_tp_m &lt;- tm_shape(ehsa_sf) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(EHSA_sig) +\n  tm_fill(\"tau\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"EHSA tau (&gt;85%)\", main.title.size = 1)\n\ne_cp_m &lt;- tm_shape(ehsa_sf) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(EHSA_sig) +\n  tm_fill(\"classification\", palette = \"Spectral\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"EHSA Classification (&gt;85%)\", main.title.size = 1)\n\np_m &lt;- tm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n\ntmap_arrange(e_tp_m, e_cp_m, p_m, ncol = 3)\n\n\n\n\n\n\n\n\nBased on the LISA map, we can confirm the emergence of several hotspots in Chon Buri as a sporadic hotspot and Nakhon Nayok as a new emerging hotspot. Additionally we can also identify several emerging hotspots in the northern provinces such as Chang mai, with sporadic coldspots. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#overall-trend",
    "href": "take-home_ex/ex02/th_ex02.html#overall-trend",
    "title": "Take-home Exercise 2",
    "section": "8.1 Overall Trend",
    "text": "8.1 Overall Trend\nThe analysis reveals a significant spike in drug use cases between 2017 and 2021, with the number of cases doubling during this period. Bangkok, Chiang Mai, and Chon Buri consistently ranked among the top provinces with the highest drug use rates, although Bangkok was not among the top 10 in 2022."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#breakdown",
    "href": "take-home_ex/ex02/th_ex02.html#breakdown",
    "title": "Take-home Exercise 2",
    "section": "8.2 Breakdown",
    "text": "8.2 Breakdown\n\n8.2.1 Global Spatial Autocorrelation\n\n2020: Weak evidence of positive spatial autocorrelation, suggesting a slight tendency for drug use to cluster geographically.\n2021: Strong evidence of positive spatial autocorrelation, indicating a pronounced clustering pattern.\n2022: Similar to 2021, strong evidence of positive spatial autocorrelation.\n\n\n\n8.2.2 Global Spatial Autocorrelation\n\n2020: Clusters identified in central provinces (Chon Buri, Rayong) and an outlier in Mae Hong Son.\n2021: Increased clustering observed in central and southern provinces, with Mae Hong Son remaining an outlier.\n2022: Decreased overall drug use, but persistent clustering in central provinces (Udon, Kalasin, Khon Kaen) and continued outlier status for Mae Hong Son.\n\n\n\n8.2.3 Global Spatial Autocorrelation\n\nSporadic emerging hotspots: Identified in various regions, including Chon Buri, Nakhon Nayok, and northern provinces.\nVarying statistical significance: The significance of emerging hotspots varies, indicating the need for further analysis."
  },
  {
    "objectID": "take-home_ex/ex02/th_ex02.html#key-findings",
    "href": "take-home_ex/ex02/th_ex02.html#key-findings",
    "title": "Take-home Exercise 2",
    "section": "8.3 Key Findings",
    "text": "8.3 Key Findings\n\nSpatial clustering: Some evidence of spatial autocorrelation suggests that drug use is clustered geographically.\nPersistent hotspots: Certain regions (e.g., central provinces) consistently exhibit higher drug use rates.\nOutlier regions: Mae Hong Son consistently stands out as an outlier with different drug use patterns."
  },
  {
    "objectID": "in-class_ex/ex03/ic_ex03.html",
    "href": "in-class_ex/ex03/ic_ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "1. Getting Started\nThe following code chunk uses p_load() to install and load the sf and tidyverse packages.\n\npacman::p_load(tmap, sf, raster, spatstat, maptools, sp, tidyverse)\n\n\n\n2. Importing data\nThe following code chunk will import the Master Plan data in ESRI shapefile and kml file format into R.\n\nmpsz_sf &lt;- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz_sf &lt;- st_set_crs(mpsz_sf, 3414)\n\nsg_sf &lt;- st_read(dsn = \"data\", layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\nsg_sf &lt;- st_set_crs(sg_sf, 3414)\n\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform( crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/S0methingSimple/IS415-GAA/in-class_ex/ex03/data/child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nchildcare_sf &lt;- st_set_crs(childcare_sf, 3414)\n\n# st_union used to derive coastal outline sf data frame\nsg_sf &lt;- mpsz_sf %&gt;% st_union()\ntm_shape(sg_sf) + tm_borders()\n\n\n\n\n\n\n\n\nUpdated way of conversion is to use as_owin() and as_ppp() to convert sp dataframe Convert to Raster: spatstat use as(kd_childcareSG_adaptive, “SpatialGridDataFrame”) if maptools:: is not installed\n\nacled_sf &lt;- read_csv(\"./data/ACLED_Myanmar.csv\") %&gt;%\n  st_as_sf(coords= c(\"longitude\", \"latitude\"), crs=4326) %&gt;%\n  st_transform(crs = 32647) %&gt;%\n  mutate(event_date = dmy(event_date))\n\nqtm(acled_sf)"
  },
  {
    "objectID": "in-class_ex/ex05/ic_ex05.html",
    "href": "in-class_ex/ex05/ic_ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:3,7,15,16,31,32)\n\n\nwrite_rds(hunan, \"data/rds/hunan.rds\")\n\n\nhunan_sp &lt;- hunan %&gt;%\n  as_Spatial()\n\n\n# Geographically weighted summary statistics with adaptive bandwidth\nbw_AIC &lt;- bw.gwr(GDPPC ~ 1,\n                 data = hunan_sp,\n                 approach=\"AIC\",\n                 adaptive = TRUE,\n                 kernel = \"bisquare\",\n                 longlat = T)\n\nAdaptive bandwidth (number of nearest neighbours): 62 AICc value: 1923.156 \nAdaptive bandwidth (number of nearest neighbours): 46 AICc value: 1920.469 \nAdaptive bandwidth (number of nearest neighbours): 36 AICc value: 1917.324 \nAdaptive bandwidth (number of nearest neighbours): 29 AICc value: 1916.661 \nAdaptive bandwidth (number of nearest neighbours): 26 AICc value: 1914.897 \nAdaptive bandwidth (number of nearest neighbours): 22 AICc value: 1914.045 \nAdaptive bandwidth (number of nearest neighbours): 22 AICc value: 1914.045 \n\n\n\nbw_CV &lt;- bw.gwr(GDPPC ~ 1,\n                 data = hunan_sp,\n                 approach=\"CV\",\n                 adaptive = TRUE,\n                 kernel = \"bisquare\",\n                 longlat = T)\n\nAdaptive bandwidth: 62 CV score: 15515442343 \nAdaptive bandwidth: 46 CV score: 14937956887 \nAdaptive bandwidth: 36 CV score: 14408561608 \nAdaptive bandwidth: 29 CV score: 14198527496 \nAdaptive bandwidth: 26 CV score: 13898800611 \nAdaptive bandwidth: 22 CV score: 13662299974 \nAdaptive bandwidth: 22 CV score: 13662299974 \n\n\n\nbw_CV_fixed &lt;- bw.gwr(GDPPC ~ 1,\n                 data = hunan_sp,\n                 approach=\"CV\",\n                 adaptive = FALSE,\n                 kernel = \"bisquare\",\n                 longlat = T)\n\nFixed bandwidth: 357.4897 CV score: 16265191728 \nFixed bandwidth: 220.985 CV score: 14954930931 \nFixed bandwidth: 136.6204 CV score: 14134185837 \nFixed bandwidth: 84.48025 CV score: 13693362460 \nFixed bandwidth: 52.25585 CV score: Inf \nFixed bandwidth: 104.396 CV score: 13891052305 \nFixed bandwidth: 72.17162 CV score: 13577893677 \nFixed bandwidth: 64.56447 CV score: 14681160609 \nFixed bandwidth: 76.8731 CV score: 13444716890 \nFixed bandwidth: 79.77877 CV score: 13503296834 \nFixed bandwidth: 75.07729 CV score: 13452450771 \nFixed bandwidth: 77.98296 CV score: 13457916138 \nFixed bandwidth: 76.18716 CV score: 13442911302 \nFixed bandwidth: 75.76323 CV score: 13444600639 \nFixed bandwidth: 76.44916 CV score: 13442994078 \nFixed bandwidth: 76.02523 CV score: 13443285248 \nFixed bandwidth: 76.28724 CV score: 13442844774 \nFixed bandwidth: 76.34909 CV score: 13442864995 \nFixed bandwidth: 76.24901 CV score: 13442855596 \nFixed bandwidth: 76.31086 CV score: 13442847019 \nFixed bandwidth: 76.27264 CV score: 13442846793 \nFixed bandwidth: 76.29626 CV score: 13442844829 \nFixed bandwidth: 76.28166 CV score: 13442845238 \nFixed bandwidth: 76.29068 CV score: 13442844678 \nFixed bandwidth: 76.29281 CV score: 13442844691 \nFixed bandwidth: 76.28937 CV score: 13442844698 \nFixed bandwidth: 76.2915 CV score: 13442844676 \nFixed bandwidth: 76.292 CV score: 13442844679 \nFixed bandwidth: 76.29119 CV score: 13442844676 \nFixed bandwidth: 76.29099 CV score: 13442844676 \nFixed bandwidth: 76.29131 CV score: 13442844676 \nFixed bandwidth: 76.29138 CV score: 13442844676 \nFixed bandwidth: 76.29126 CV score: 13442844676 \nFixed bandwidth: 76.29123 CV score: 13442844676 \n\n\n\nbw_AIC_fixed &lt;- bw.gwr(GDPPC ~ 1,\n                 data = hunan_sp,\n                 approach=\"AIC\",\n                 adaptive = FALSE,\n                 kernel = \"bisquare\",\n                 longlat = T)\n\nFixed bandwidth: 357.4897 AICc value: 1927.631 \nFixed bandwidth: 220.985 AICc value: 1921.547 \nFixed bandwidth: 136.6204 AICc value: 1919.993 \nFixed bandwidth: 84.48025 AICc value: 1940.603 \nFixed bandwidth: 168.8448 AICc value: 1919.457 \nFixed bandwidth: 188.7606 AICc value: 1920.007 \nFixed bandwidth: 156.5362 AICc value: 1919.41 \nFixed bandwidth: 148.929 AICc value: 1919.527 \nFixed bandwidth: 161.2377 AICc value: 1919.392 \nFixed bandwidth: 164.1433 AICc value: 1919.403 \nFixed bandwidth: 159.4419 AICc value: 1919.393 \nFixed bandwidth: 162.3475 AICc value: 1919.394 \nFixed bandwidth: 160.5517 AICc value: 1919.391 \n\n\nComputing geographically weighted summary statistics\n\ngwstat &lt;- gwss(data= hunan_sp,\n               vars = \"GDPPC\",\n               bw = bw_AIC,\n               kernel = \"bisquare\",\n               adaptive = TRUE,\n               longlat = T)\n\nPrepare the output data\n\ngwstat_df &lt;- as.data.frame(gwstat$SDF)\n\n\nhunan_gstat &lt;- cbind(hunan, gwstat_df)\n\n\ntm_shape(hunan_gstat) +\n  tm_fill(\"GDPPC_LM\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Distributation of geographically weighted mean\",\n            main.title.position = \"center\",\n            main.title.size = 2.0,\n            legend.text.size = 1.2,\n            legend.height = 1.5,\n            legend.width = 1.5,\n            frame= TRUE)"
  }
]