[
  {
    "objectID": "listings.html",
    "href": "listings.html",
    "title": "Listings",
    "section": "",
    "text": "Hands-on Exercise 1\n\n\n\n\n\nIn this exercise we get our first hands-on with geoprocessing and basic plotting with R \n\n\n\n\n\nAug 17, 2024\n\n\nJeffery Lau\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 2\n\n\n\n\n\nIn this exercise we work with themeatic mapping using tmap package to visualize our data \n\n\n\n\n\nAug 19, 2024\n\n\nJeffery Lau\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 02\n\n\n\n\n\nIn this exercise we learn to handle corrupted data, transforming CRS as well as some geoprocessing and joining of geospatial and aspatial data \n\n\n\n\n\nAug 26, 2024\n\n\nJeffery Lau\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "in-class_ex/ex02/ic_ex02.html",
    "href": "in-class_ex/ex02/ic_ex02.html",
    "title": "In-class Exercise 02",
    "section": "",
    "text": "The following code chunk uses p_load() to install and load the sf and tidyverse packages.\n\npacman::p_load(sf, tidyverse, DT)"
  },
  {
    "objectID": "in-class_ex/ex02/ic_ex02.html#fixing-data-files",
    "href": "in-class_ex/ex02/ic_ex02.html#fixing-data-files",
    "title": "In-class Exercise 02",
    "section": "2.1 Fixing data files",
    "text": "2.1 Fixing data files\nNotice how much less tidy the kml file data is as compared to the shp file\n\nmpsz19_shp = st_read(dsn=\"data/MPSZ-2019\", layer=\"MPSZ-2019\") \n\nReading layer `MPSZ-2019' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/in-class_ex/ex02/data/MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz19_kml = st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/in-class_ex/ex02/data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nNotice that the CRS is also wrong, it is in GCS instead of PCS\n\n# Check CRS\nst_crs(mpsz19_shp)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n# Look up epsg code https://epsg.io/?q=3414\nmpsz19_shp &lt;- st_transform(mpsz19_shp, crs = 3414)\n\n# Check CRS again\nst_crs(mpsz19_shp)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "in-class_ex/ex02/ic_ex02.html#load-aspatial-data",
    "href": "in-class_ex/ex02/ic_ex02.html#load-aspatial-data",
    "title": "In-class Exercise 02",
    "section": "2.2 Load Aspatial Data",
    "text": "2.2 Load Aspatial Data\n\npopdata &lt;- read_csv(\"data/respopagesextod2023/respopagesextod2023.csv\")\n\nhead(popdata)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  &lt;chr&gt;      &lt;chr&gt;                  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;dbl&gt;\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2023\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats        0  2023\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2023\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2023\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2023\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    40  2023"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html",
    "href": "hands-on_ex/ex02/ho_ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "The following code chunk uses p_load() to install and load the sf, tidyverse and tmap packages.\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#data-wrangling",
    "href": "hands-on_ex/ex02/ho_ex02.html#data-wrangling",
    "title": "Hands-on Exercise 2",
    "section": "3.1 Data Wrangling",
    "text": "3.1 Data Wrangling\n\n# Filter data to 2020, groupby and sum the population\npopdata2020grouped &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`))\n\n# Pivot wider by age \npopdata2020pivot &lt;- popdata2020grouped %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, values_from=POP)\n\n# Sum into age groups\npopdata2020 &lt;- popdata2020pivot %&gt;%\n  mutate(`YOUNG` = rowSums(.[3:6]) + rowSums(.[14])) %&gt;%\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+rowSums(.[15])) %&gt;%\n  mutate(`AGED` = rowSums(.[16:21])) %&gt;%\n  mutate(`TOTAL` = rowSums(.[3:21])) %&gt;%\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\n# View popdata\nhead(popdata2020, n=5)\n\n# A tibble: 5 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  &lt;chr&gt;      &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 Ang Mo Kio Ang Mo Kio Town Cent…  1290             2760   760  4810      0.743\n2 Ang Mo Kio Cheng San              5640            16460  6050 28150      0.710\n3 Ang Mo Kio Chong Boon             5100            15000  6470 26570      0.771\n4 Ang Mo Kio Kebun Bahru            4620            13010  5120 22750      0.749\n5 Ang Mo Kio Sembawang Hills        1880             3630  1310  6820      0.879\n\n\nConvert PA and SZ fields to uppercase\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nhead(popdata2020)\n\n# A tibble: 6 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  &lt;chr&gt;      &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 ANG MO KIO ANG MO KIO TOWN CENT…  1290             2760   760  4810      0.743\n2 ANG MO KIO CHENG SAN              5640            16460  6050 28150      0.710\n3 ANG MO KIO CHONG BOON             5100            15000  6470 26570      0.771\n4 ANG MO KIO KEBUN BAHRU            4620            13010  5120 22750      0.749\n5 ANG MO KIO SEMBAWANG HILLS        1880             3630  1310  6820      0.879\n6 ANG MO KIO SHANGRI-LA             3330             9050  3610 15990      0.767"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#joining-the-attribute-data",
    "href": "hands-on_ex/ex02/ho_ex02.html#joining-the-attribute-data",
    "title": "Hands-on Exercise 2",
    "section": "3.2 Joining the attribute data",
    "text": "3.2 Joining the attribute data\nNext we will join the geographical data with the attribute table using the SZ as common identifier using the dplyr package.\n\nmpsz_popdata2020 &lt;- left_join(mpsz, popdata2020, by = c(\"SUBZONE_N\" = \"SZ\"))\n\nhead(mpsz_popdata2020)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area              PA YOUNG ECONOMY ACTIVE AGED\n1 29220.19   5267.381  1630379.3            &lt;NA&gt;    NA             NA   NA\n2 29782.05   3506.107   559816.2          OUTRAM   930           3130 2120\n3 29974.66   1740.926   160807.5 SINGAPORE RIVER     0             40   10\n4 29933.77   3313.625   595428.9     BUKIT MERAH  2600           7450 3320\n5 30005.70   2825.594   387429.4     BUKIT MERAH  2760           6160 1740\n6 29991.38   4428.913  1030378.8     BUKIT MERAH  2800           7340 3420\n  TOTAL DEPENDENCY                       geometry\n1    NA         NA MULTIPOLYGON (((31495.56 30...\n2  6180  0.9744409 MULTIPOLYGON (((29092.28 30...\n3    50  0.2500000 MULTIPOLYGON (((29932.33 29...\n4 13370  0.7946309 MULTIPOLYGON (((27131.28 30...\n5 10660  0.7305195 MULTIPOLYGON (((26451.03 30...\n6 13560  0.8474114 MULTIPOLYGON (((25899.7 297...\n\n\nIn order to store the current state of the data frame we can export as an rds file to be reused later\n\nwrite_rds(mpsz_popdata2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#plotting-using-tmaps-element",
    "href": "hands-on_ex/ex02/ho_ex02.html#plotting-using-tmaps-element",
    "title": "Hands-on Exercise 2",
    "section": "4.2 Plotting using tmap’s element",
    "text": "4.2 Plotting using tmap’s element\nFor a more customized plot use tmap elements instead\n\ntm_shape(mpsz_popdata2020) + \n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Blues\", title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\", \n            main.title.position = \"center\",main.title.size = 1.2, legend.height = 0.45, legend.width = 0.35, frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n4.2.1 Drawing a basemap\nThe basic building of tmap is tm_shape() followed by one or more layer of elements such as tm_fill() or tm_polygons(). In the following the tm_shape() is used with tm_polygons() to draw the subzones.\n\ntm_shape(mpsz_popdata2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\n4.2.1 Using tm_fill and tm_border\nNext the DEPENDENCY attribute is included into the fill and polygon plot. Note that tm_polygons() is a wrapper for the tm_fill() which shades the polygons using the default color scheme and uses tm_borders() to add the borders of the shapefile\n\nfill_map &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", title = \"Fill\")\n\n# Note that the borders are plotted\npolygon_map &lt;- tm_shape(mpsz_popdata2020) + tm_polygons(\"DEPENDENCY\", title = \"Polygon\")\n\n# tm_fill with tm_borders added\nfill_border_map &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", title = \"Fill + Border\") + tm_borders(lwd = 0.5, lty = \"solid\", alpha = 1, col = \"Black\" )\n\ntmap_arrange(fill_map, polygon_map, fill_border_map, asp=0, ncol=3)\n\n\n\n\n\n\n\n\n\nThe default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by tmap\nThe default color scheme used is YlOrRd of ColorBrewer. By default, Missing value will be shaded in grey."
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#plotting-with-classification-methods",
    "href": "hands-on_ex/ex02/ho_ex02.html#plotting-with-classification-methods",
    "title": "Hands-on Exercise 2",
    "section": "4.3 Plotting with Classification methods",
    "text": "4.3 Plotting with Classification methods\nMost plots requires some form of data classification to group a large number of observation into meaninful ranges or classes. tmap provides a total of ten classification methods; fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks. All of which can be defined with the style argument of tm_fill() or tm_polygons()\n\n4.3.1 Comparing Classification Styles\n\n# Comparing the different classification styles\nsd_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"sd\", title = \"sd\") + tm_borders(alpha = 0.5)\nkmeans_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"kmeans\", title = \"kmeans\") + tm_borders(alpha = 0.5)\nquantile_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"quantile\", title = \"quantile\") + tm_borders(alpha = 0.5)\njenks_plot &lt;- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"jenks\", title = \"jenks\") + tm_borders(alpha = 0.5)\n\ntmap_arrange(sd_plot, kmeans_plot, quantile_plot, jenks_plot, asp=0, ncol=4)\n\n\n\n\n\n\n\n\nWith the side by side comparison of the different styles, we could observe: - Quantile seems to have an even spread of colors BUT not in values, hence may not necessary be a good representation - sd is the least illustrative of the 4 BUT also the most equal in terms of value distribution\n\n\n4.3.2 Plotting with Custom break\nIn order to override the default breaks computed internally we can set it explicitly with the break argument in tm_fill()\nStart by taking a look at the summary to get some descriptive statistics of the data we are working with.\n\nsummary(mpsz_popdata2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\n\nWith the above reference we can set our breaks in the following\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) + \n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#color-scheme",
    "href": "hands-on_ex/ex02/ho_ex02.html#color-scheme",
    "title": "Hands-on Exercise 2",
    "section": "4.4 Color Scheme",
    "text": "4.4 Color Scheme\nThe color ramp can also be change based on RColorBrewer package.\n\n\n4.4.1 Changing color ramp\nTo change the color ramp simply assign the palette argument in tm_fill()\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", n = 6, style = \"quantile\", palette = \"BuPu\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.4.2 Reverse color ramp\nTo reverse the color ramp add a - to the palette\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", n = 6, style = \"quantile\", palette = \"-BuPu\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#map-layouts",
    "href": "hands-on_ex/ex02/ho_ex02.html#map-layouts",
    "title": "Hands-on Exercise 2",
    "section": "4.5 Map Layouts",
    "text": "4.5 Map Layouts\nFor a comprehensive plot several map elements are required, such as the scale bar, compass, title etc.\n\n4.5.1 Map Legend\nIn the following we made out legend a histogram among other customization to it.\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", style = \"fisher\", palette = \"BuGn\", legend.hist = TRUE, legend.is.portrait = FALSE, legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Fisher classification)\",\n            main.title.position = \"center\", main.title.size = 1, legend.height = 0.45, legend.width = 0.35, legend.outside = FALSE, legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.5.2 Map Style\nTo simplify styling we can also use existing tmap styles\n\ntm_shape(mpsz_popdata2020)+\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"cobalt\")\n\n\n\n\n\n\n\n\n\n\n4.5.2 Cartographic Elements\nCartographic furnitures can also be added such compass, scale bar and grid lines using the tm_compass(), tm_scale_bar() and tm_grid() respectively\n\ntm_shape(mpsz_popdata2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"4star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\")) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\nTo reset tmap style to default simply run tmap_style(\"white\")"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#portraying-multiple-maps",
    "href": "hands-on_ex/ex02/ho_ex02.html#portraying-multiple-maps",
    "title": "Hands-on Exercise 2",
    "section": "4.6 Portraying Multiple Maps",
    "text": "4.6 Portraying Multiple Maps\nSmall maps aka facet maps can be arrange vertically or horizontally to help visualise relations between changes in variables. Such maps can be plotted in 3 ways: 1. By assigning multiple values to at least one of the aesthetic arguments, 2. by defining a group-by variable in tm_facets(), and 3. By creating multiple stand-alone maps with tmap_arrange().\n\n4.6.1 Defining with Aesthetic Arguments\nIn the following the values are assigned to ncols\n\ntm_shape(mpsz_popdata2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"), style = \"quantile\", palette = list(\"Blues\", \"Reds\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\n\n\n4.6.2 Defining with tm_facets()\nChoropleth created using tm_facets() based on the REGION_N\n\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Blues\", thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", free.coords=TRUE, drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE, title.position = c(\"center\", \"center\"),title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.6.3 Defining with tmap_arrange()\nAs seen previously tmap_arrange() can be used to render individual maps\n\nyoungmap &lt;- tm_shape(mpsz_popdata2020) + \n  tm_polygons(\"YOUNG\", style = \"quantile\", palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_popdata2020) + \n  tm_polygons(\"AGED\", style = \"quantile\", palette = \"Reds\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on_ex/ex02/ho_ex02.html#mapping-with-selection-criterion",
    "href": "hands-on_ex/ex02/ho_ex02.html#mapping-with-selection-criterion",
    "title": "Hands-on Exercise 2",
    "section": "4.7 Mapping with Selection Criterion",
    "text": "4.7 Mapping with Selection Criterion\nInstead of mapping the entire data frame we can also map just parts of it by filtering the data frame\n\ntm_shape(mpsz_popdata2020[mpsz_popdata2020$REGION_N==\"NORTH-EAST REGION\", ]) +\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"YlGnBu\", legend.hist = TRUE, legend.is.portrait = TRUE,legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE, legend.outside.size = 0.2, legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html",
    "href": "hands-on_ex/ex01/ho_ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The following code chunk uses p_load() to install and load the sf and tidyverse packages.\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#assign-epsg-code",
    "href": "hands-on_ex/ex01/ho_ex01.html#assign-epsg-code",
    "title": "Hands-on Exercise 1",
    "section": "5.1 Assign EPSG Code",
    "text": "5.1 Assign EPSG Code\nIn the case of mpsz it is projected in SVY 21 with EPSG code 3414, using st_crs() we can see that the data is projected with EPSG code 9001 instead.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nIn order to update EPSG code to 3414 we can set the crs using the st_set_crs()\n\n mpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nThe crs for the mpsz data should now be assigned appropriately\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#re-project-crs",
    "href": "hands-on_ex/ex01/ho_ex01.html#re-project-crs",
    "title": "Hands-on Exercise 1",
    "section": "5.2 Re-Project CRS",
    "text": "5.2 Re-Project CRS\nIn the case of the Preschool data, it is initially projected in WGS 84\n\nst_geometry(preschool)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nIn order to reproject the CRS from WGS 84 to SVY 21 we have to use st_transform() function instead\n\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)\n\nThe crs for the preschool data should now be assigned appropriately as well\n\nst_geometry(preschool3414)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#importing-data-1",
    "href": "hands-on_ex/ex01/ho_ex01.html#importing-data-1",
    "title": "Hands-on Exercise 1",
    "section": "6.1 Importing data",
    "text": "6.1 Importing data\nAirBnb data is a listing and should be loaded with read_csv()\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nUsing list() we can view the listings\n\nlist(listings)\n\n[[1]]\n# A tibble: 3,540 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Ensuite …  367042 Belinda   East Region         Tampines          1.35\n 2  71896 B&B  Roo…  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Room 2-n…  367042 Belinda   East Region         Tampines          1.35\n 4 275343 10min wa… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 15 mins … 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Booking …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 5 mins w… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Comforta… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Relaxing… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 344803 Budget s…  367042 Belinda   East Region         Tampines          1.35\n# ℹ 3,530 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\nWe assume the data uses the wgs84 Geographic Coordinate System"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#aspatial-data-to-sf-data-frame",
    "href": "hands-on_ex/ex01/ho_ex01.html#aspatial-data-to-sf-data-frame",
    "title": "Hands-on Exercise 1",
    "section": "6.2 Aspatial data to sf Data Frame",
    "text": "6.2 Aspatial data to sf Data Frame\nThe aspatial data will first be converted into an sf data frame and re-projected into the SVY 21 crs.\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nThe created data frame shows that geometry has been added while longitude and latitude have been dropped\n\nglimpse(listings_sf)\n\nRows: 3,540\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           &lt;chr&gt; \"Ensuite Room (Room 1 & 2) near EXPO\", …\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; NA, 80, 80, 50, 50, NA, 85, 65, 45, 54,…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 180, 180, 92, 92, 180, 180,…\n$ number_of_reviews              &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 131, 17, 5, 60,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.12, 0.15, 0.29, 0.15, 0.11, 0.08, 0.8…\n$ calculated_host_listings_count &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49, 49, 6, 7, 7,…\n$ availability_365               &lt;dbl&gt; 89, 148, 90, 62, 0, 88, 365, 0, 0, 365,…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 2, 0, 0, 1, 1, 1, 0, 0, 0, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#buffering",
    "href": "hands-on_ex/ex01/ho_ex01.html#buffering",
    "title": "Hands-on Exercise 1",
    "section": "7.1 Buffering",
    "text": "7.1 Buffering\nScenario: The authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the current cycling path. You are tasked to determine the extend of the land need to be acquired and their total area.\nUsing the st_buffer() we can first compute the 5-meter buffer around paths of the cycling data\n\nbuffer_cycling &lt;- st_buffer(cyclingpath,\n                              dist=5, nQuadSegs = 30)\n\nThen the area is calculated\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\n\nFinally the sum() is used to derive the total land involved\n\nsum(buffer_cycling$AREA)\n\n2218855 [m^2]"
  },
  {
    "objectID": "hands-on_ex/ex01/ho_ex01.html#point-in-polygon-count",
    "href": "hands-on_ex/ex01/ho_ex01.html#point-in-polygon-count",
    "title": "Hands-on Exercise 1",
    "section": "7.2 Point-in-polygon count",
    "text": "7.2 Point-in-polygon count\nScenario: A pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.\nUsing st_intersects() we could locate the preschool in each planning subzone from the master plan, and using the length() we can calculate the number of school in their respective subzone.\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n\nUse summary() to get the summarised statistics of the PreSch Count field\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nThen, to list the planning subzone with the most number of pre-schools we could use top_n()\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\nNext, using the st_aera() we can calculate the area of preschool by subzone\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\n\nNext, using mutate() to compute the density by dividing the PreSch Count over the calculated Area field\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA | Jeffery Lau",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Applications. This website documents my coursework for this course."
  },
  {
    "objectID": "in-class_ex/ex02/data/MPSZ-2019/MPSZ-2019.html",
    "href": "in-class_ex/ex02/data/MPSZ-2019/MPSZ-2019.html",
    "title": "Jeff's 🗺 Adventures",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  }
]