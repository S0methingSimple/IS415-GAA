---
title: "Take-home Exercise 3"
author: "Jeffery Lau"
date: 10-13-2024
date-modified: "last-modified"
description: |
  In this exercise, we will be looking prototyping for my team's Geospatial Analytics Shiny Application. I am responsible for 
categories:
  - Take-home
format:
  html:
    toc: true
execute: 
  eval: true
  echo: true
  warning: false
  freeze: false
---

# 1. Introduction

## 1.1 Responsibility

## 1.2 Motivation

## 1.3 Objectives


# 2. Packages and Data

## 2.1 Packages Required

```{r}
pacman::p_load(sf, st, tidyverse, raster, tmap, tmaptools, ggplot2, spatstat, sfdep, ClustGeo, 
               ggpubr, cluster, factoextra, NbClust,
               heatmaply, corrplot, psych, tidyverse, GGally)
```

## 2.2 Data Required

## 2.2.1 Datasets being used

There are two datasets being used in this exercise.

-   [Malaysia â€“ Crime by District and Crime Type](https://data.gov.my/data-catalogue/crime_district) from data.gov.my in csv format.

-   [Malaysia - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-mys) with included administrative regions in shapefile format.

We first import the crime rate csv file into R.

```{r}
crime_df <- read_csv("data/aspatial/crime_district.csv")
```

Next, we import the administrative regions of Malaysia.

```{r}
mys_sf <- read_sf(dsn = "data/geospatial/mys_adm_unhcr_20210211_shp", 
                 layer = "mys_admbnda_adm1_unhcr_20210211") %>%
  st_as_sf(coords =c(
    "longitude", "latitude"),
           crs = 4326) %>%
  st_transform(crs = 3167)
```

However in this case study, for ease of analysis, we choose to focus on West Malaysia, and thus will be filtering out Sarawak, Sabah and Labuan.

```{r}
mys_sf <- mys_sf %>%
  filter(ADM1_EN != 'Sabah') %>%
  filter(ADM1_EN != 'Sarawak') %>%
  filter(ADM1_EN != 'W.P. Labuan') %>%
  mutate(state = replace(ADM1_EN, ADM1_EN == 'W.P. Kuala Lumpur', 'Kuala Lumpur'))
```

```{r}
mys_sf
```


## 2.3 Data Wrangling

### 2.3.1 Resolving data duplication

There is also an issue of double counting data, where state 'Malaysia' comprises of all the crimes, and type of crime 'all' also comprises of its type of crime.

As we are doing by state and not by district, we remove the double counting caused by district. At the same time, we will also remove Sabah and Sarawak, which are not the focus of our current analysis.

```{r}
crime_df <- crime_df %>%
                  filter(state !='Malaysia') %>% 
                  filter(type !='all') %>% 
                  filter(district =='All') %>%
                  filter(state != 'Sabah') %>%
                  filter(state != 'Sarawak') %>%
                  filter(state != 'Labuan')
crime_df
```

### 2.3.2 Resolving mismatch of state names

Some of the province names are mismatched between the crime rate csv file and the shpfile.

```{r}
crime_df <- crime_df %>% 
                  mutate(state = replace(state, state == 'W.P. Kuala Lumpur', 'Kuala Lumpur'))
```

### 2.3.3 Performing relational join

```{r}
crime_df_mys <- mys_sf %>%
  left_join(crime_df,
            by = c("ADM1_EN" = "state")) %>%
  dplyr::select(1, 8:10, 13:16)

crime_df_mys
```

```{r}
crime_df_mys_sf <- st_as_sf(crime_df_mys)

st_crs(crime_df_mys_sf) <- st_crs(mys_sf)
```

### 2.3.4 Visualizing the distribution of crime

```{r}
#| eval: false

tmap_mode("plot")
choro <- tm_shape(crime_df_mys) +
  tm_fill("crimes", 
          style = "quantile", 
          palette = "Blues",
          title = "Crimes") +
  tm_layout(main.title = "Distribution of crime in West Malaysia",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2)

choro
```

# 3. Analysis

## 3.1 Exploratory Data Analysis (EDA)



# 4. UI Design

## 4.1 Components Used

### 4.1.1 Prameters

### 4.1.2 Outputs

## 4.2 Layout

## 4.3 Story Board

(Story Board)\[https://giniceseah.netlify.app/posts/2021-07-31-storyboard/\]

# 5. Reflection
