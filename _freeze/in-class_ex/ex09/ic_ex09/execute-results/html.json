{
  "hash": "51f85cba421464a6f6be8871f41e2525",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 9\"\nauthor: \"Jeffery Lau\"\ndate: 09-23-2024\ndate-modified: \"last-modified\"\ndescription: |\n  In this exercise we learn how to \ncategories:\n  - In-class\nformat:\n  html:\n    toc: true\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# 1. Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(spdep, sp, tmap, sf, ClustGeo, \n               cluster, factoextra, NbClust,\n               tidyverse, GGally)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf <- read_rds(\"./data/rds/shan_sf.rds\")\nshan_ict <- read_rds(\"./data/rds/shan_ict.rds\")\n```\n:::\n\n\n# 2. Conventional Clustering\n\n## 2.1 Hirearchical Clustering\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproxmat <- dist(shan_ict, method = 'euclidean')\nhclust_ward <- hclust(proxmat, method = 'ward.D')\ngroups <- as.factor(cutree(hclust_ward, k=6))\n```\n:::\n\n\n## 2.2 Appending sf to cluster\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf_cluster <- cbind(shan_sf, \n                         as.matrix(groups)) %>%\n  rename(`CLUSTER`=`as.matrix.groups.`) %>%\n  select(-c(3:4, 7:9)) %>%\n  rename(TS = TS.x)\n```\n:::\n\n\n## 2.3 Plot dendogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, k = 6, border = 2.5)\n```\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-5-1.png){width=1152}\n:::\n:::\n\n\n## 2.4 Plot Clusters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_cluster, \"CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n# 3. Geographically Constrained Clustering\n\n## 3.1 Computing Spatial Dist Mat\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.nb <- poly2nb(shan_sf)\nsummary(shan.nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n```\n\n\n:::\n:::\n\n\n## 3.2 Visualizing Neighbours\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), border=grey(.5))\npts <- st_coordinates(st_centroid(shan_sf))\nplot(shan.nb, pts, col=\"blue\", add=TRUE)\n```\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## 3.3 Compute edge cost and visualzie MST\n\n::: {.cell}\n\n```{.r .cell-code}\nlcosts <- nbcosts(shan.nb, shan_ict)\n```\n:::\n\n\n## 3.4 Incomprate cost into weight objects\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.w <- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n```\n\n\n:::\n:::\n\n\n## 3.5 Compute MST\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.mst <- mstree(shan.w)\n```\n:::\n\n\n## 3.6 Visualize MST\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot.mst(shan.mst, \n         pts, \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n```\n:::\n\n\n## 3.7 Compute cluster using SKATER\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskater.clust6 <- skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5) #Cluster N-1\n```\n:::\n\n\n## 3.8 Visualize the SKATER tree\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot(skater.clust6, \n     pts, \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)\n```\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n## 3.9 Visualize Cluster\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups_mat <- as.matrix(skater.clust6$groups)\nshan_sf_spatialcluster <- cbind(shan_sf_cluster, as.factor(groups_mat)) %>%\n  rename(`skater_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"skater_CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhclust.map <- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.8, 0.6))\n\nshclust.map <- qtm(shan_sf_spatialcluster,\n                   \"skater_CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n```\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n# 4. ClustGeo Method\n\nUses Hierarchical Clustering (Soft User decide) vs SKATER (HARD, Picks optimium)\n\n## 4.1 Computing Spatial Dist Mat\n-   \n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- st_distance(shan_sf, shan_sf)\ndistmat <- as.dist(dist)\n```\n:::\n\n\n## 4.2 Cluster graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- choicealpha(proxmat, distmat, \n                  range.alpha = seq(0, 1, 0.1), \n                  K=6, graph = TRUE)\n```\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n:::\n\n\n## 4.3 Clustgeo Clustering\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.2)\ngroups <- as.factor(cutree(clustG, k=6))\nshan_sf_clustGeo <- cbind(shan_sf, \n                          as.matrix(groups)) %>%\n  rename(`clustGeo` = `as.matrix.groups.`)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_clustGeo, \"clustGeo\")\n```\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhclust.map <- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.8, 0.6))\n\nshclust.map <- qtm(shan_sf_spatialcluster,\n                   \"skater_CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\nclustGeo.map <- qtm(shan_sf_clustGeo,\n                   \"clustGeo\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\ntmap_arrange(hclust.map, shclust.map, \n             clustGeo.map,\n             asp=NA, ncol=3)\n```\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## 4.4 Parallel Coordinates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = shan_sf_clustGeo, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ clustGeo) + \n  theme(axis.text.x = element_text(angle = 30))\n```\n\n::: {.cell-output-display}\n![](ic_ex09_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nUse parallel coordinates to understand your cluster\n< 0.8 correlation can consider",
    "supporting": [
      "ic_ex09_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}