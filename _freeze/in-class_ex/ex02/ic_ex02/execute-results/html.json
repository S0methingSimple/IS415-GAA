{
  "hash": "b847e601c831a7d00aab70ae44304e8f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 2\"\nauthor: \"Jeffery Lau\"\ndate: 09-02-2024\ndate-modified: \"last-modified\"\ndescription: |\n  In this exercise we learn to handle corrupted data, transforming CRS as well as some geoprocessing and joining of geospatial and aspatial data\ncategories:\n  - In-class\nformat:\n  html:\n    toc: true\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# 1. Getting Started\n\nThe following code chunk uses p_load() to install and load the sf and tidyverse packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap, sf, raster, spatstat, maptools, sp, tidyverse)\n```\n:::\n\n\n# 2. Importing data\n\nThe following code chunk will import the Master Plan data in ESRI shapefile and kml file format into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_sf <- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/in-class_ex/ex02/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n\n```{.r .cell-code}\nmpsz_sf <- st_set_crs(mpsz_sf, 3414)\n\nsg_sf <- st_read(dsn = \"data\", layer = \"CostalOutline\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `CostalOutline' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/in-class_ex/ex02/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n```\n\n\n:::\n\n```{.r .cell-code}\nsg_sf <- st_set_crs(sg_sf, 3414)\n\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform( crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `child-care-services-geojson' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/in-class_ex/ex02/data/child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nchildcare_sf <- st_set_crs(childcare_sf, 3414)\n\n# st_union used to derive coastal outline sf data frame\nsg_sf <- mpsz_sf %>% st_union()\ntm_shape(sg_sf) + tm_borders()\n```\n\n::: {.cell-output-display}\n![](ic_ex02_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nUpdated way of conversion is to use `as_owin()` and `as_ppp()` to convert sp dataframe\nConvert to Raster: spatstat use as(kd_childcareSG_adaptive, \"SpatialGridDataFrame\") if maptools:: is not installed\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_sf <- read_csv(\"./data/ACLED_Myanmar.csv\") %>%\n  st_as_sf(coords= c(\"longitude\", \"latitude\"), crs=4326) %>%\n  st_transform(crs = 32647) %>%\n  mutate(event_date = dmy(event_date))\n\nqtm(acled_sf)\n```\n\n::: {.cell-output-display}\n![](ic_ex02_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ic_ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}