{
  "hash": "e8847211f6753714749b5021637cb09f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 12\"\nauthor: \"Jeffery Lau\"\ndate: 11-04-2024\ndate-modified: \"last-modified\"\ndescription: |\n  In this exercise we learn to perform data prepareation for geographically weighted predictive model.\ncategories:\n  - In-class\nformat:\n  html:\n    toc: true\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# 1. Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tmap, tidyverse, httr, performance)\n```\n:::\n\n\n## 1.1 Bind realis data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_list <- list.files(path = \"data/aspatial\",\n                        pattern = \"^realis.*\\\\.csv$\",\n                        full.names = TRUE)\n\nrealise_data <- file_list %>%\n  map_dfr(read_csv)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo_resale <- realise_data %>%\n  mutate(`Sale Date` = dmy(`Sale Date`)) %>%\n  filter(`Type of Sale` == \"Resale\" &\n          `Property Type` == \"Condominium\")\n```\n:::\n\n\n## 1.2 Reverse Geocode\n\n\n::: {.cell}\n\n```{.r .cell-code}\npostcode <- unique(condo_resale$`Postal Code`)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://onemap.gov.sg/api/common/elastic/search\"\nfound <- data.frame()\nnot_found <- data.frame()\n\n#for (postcode in postcode) {\n#  query <- list('searchVal'=postcode, 'returnGeom'='Y',\n#                'getAddrDetails'='Y', 'pageNum'='1')\n#  res <- GET(url,query=query)\n#  if((content(res)$found)!=0){\n#    found <- rbind(found, data.frame(content(res))[4:13])\n#  } else {notfound = data.frame(postcode)}\n#  \n#}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(found, \"./data/rds/found\")\nwrite_rds(not_found, \"./data/rds/not_found\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfound <- read_rds(\"./data/rds/found\")\nnot_found <- read_rds(\"./data/rds/not_found\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfound_new <- found %>%\n  select(c(6:8)) %>%\n  rename(POSTAL = `results.POSTAL`,\n         XCOORD = `results.X`,\n         YCOORD = `results.Y`)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo_resale_sf <- st_as_sf(condo_resale_geocoded,\n                            coords= c(\"XCOORD\", \"YCOORD\"),\n                            crs = 3414)\n```\n:::\n\n\n## 1.3 Jitter Points\n\n\n::: {.cell}\n\n```{.r .cell-code}\noverlapping_points <- condo_resale_sf %>%\n  mutate(overlap = lengths(st_equals(., .)) > 1)\noverlapping_points\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 5991 features and 22 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14973.78 ymin: 24730.35 xmax: 43287.74 ymax: 48670.84\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 5,991 × 23\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n * <chr>                                <dbl>         <dbl>                <dbl>\n 1 CASA ROSA                          1500000         1367.                 1097\n 2 THE MINTON                         1840000         1216.                 1513\n 3 NV RESIDENCES                      1350000         1109.                 1218\n 4 SANT RITZ                           890000          527.                 1687\n 5 ECO                                1620000          990.                 1636\n 6 MARINA BAY RESIDEN…                1420000          710.                 1999\n 7 THE GARDENS AT BIS…                1800000         1206.                 1493\n 8 THOMSON 800                        2800000         1625.                 1723\n 9 SELETAR PARK RESID…                1490000         1507.                  989\n10 THE ESTUARY                        1540000         1195.                 1289\n# ℹ 5,981 more rows\n# ℹ 19 more variables: `Sale Date` <date>, Address <chr>, `Type of Sale` <chr>,\n#   `Type of Area` <chr>, `Area (SQM)` <dbl>, `Unit Price ($ PSM)` <dbl>,\n#   `Nett Price($)` <chr>, `Property Type` <chr>, `Number of Units` <dbl>,\n#   Tenure <chr>, `Completion Date` <chr>, `Purchaser Address Indicator` <chr>,\n#   `Postal Code` <chr>, `Postal District` <chr>, `Postal Sector` <chr>,\n#   `Planning Region` <chr>, `Planning Area` <chr>, geometry <POINT [m]>, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo_resale_sf <- condo_resale_sf %>%\n  st_jitter(amount = 2)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}