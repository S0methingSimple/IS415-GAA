{
  "hash": "52a84cee9a5dcad20f561439c8695545",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 2\"\nauthor: \"Jeffery Lau\"\ndate: 08-19-2024\ndate-modified: \"last-modified\"\ndescription: |\n  In this exercise we work with themeatic mapping using tmap package to visualize our data\ncategories:\n  - Hands-on\nformat:\n  html:\n    toc: true\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# 1. Getting Started\n\nThe following code chunk uses p_load() to install and load the sf, tidyverse and tmap packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tmap, tidyverse)\n```\n:::\n\n\n# 2. Importing data\n\nThe following code chunk will import the Master Plan and Cycling Path data in ESRI shapefile format and Preschool data in kml file format into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/geospatial\",\n                layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/jeffery/S0methingSimple/IS415-GAA/hands-on_ex/ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n\n```{.r .cell-code}\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n```\n:::\n\n\nThe following is the glimpse of the imported data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpsz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(popdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 984,656\nColumns: 7\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ AG   <chr> \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to…\n$ Sex  <chr> \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"M…\n$ TOD  <chr> \"HDB 1- and 2-Room Flats\", \"HDB 3-Room Flats\", \"HDB 4-Room Flats\"…\n$ Pop  <dbl> 0, 10, 30, 50, 0, 0, 40, 0, 0, 10, 30, 60, 0, 0, 40, 0, 0, 10, 30…\n$ Time <dbl> 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,…\n```\n\n\n:::\n:::\n\n\n# 3. Data Preparation\n\nBefore working on the map the data is required to be wrangled to ensure only the relevant fields are included: - YOUNG: age group 0 to 4 until age groyup 20 to 24, - ECONOMY ACTIVE: age group 25-29 until age group 60-64, - AGED: age group 65 and above, - TOTAL: all age group, and - DEPENDENCY: the ratio between young and aged against economy active group\n\n## 3.1 Data Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter data to 2020, groupby and sum the population\npopdata2020grouped <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`))\n\n# Pivot wider by age \npopdata2020pivot <- popdata2020grouped %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, values_from=POP)\n\n# Sum into age groups\npopdata2020 <- popdata2020pivot %>%\n  mutate(`YOUNG` = rowSums(.[3:6]) + rowSums(.[14])) %>%\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+rowSums(.[15])) %>%\n  mutate(`AGED` = rowSums(.[16:21])) %>%\n  mutate(`TOTAL` = rowSums(.[3:21])) %>%\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\n# View popdata\nhead(popdata2020, n=5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  <chr>      <chr>                 <dbl>            <dbl> <dbl> <dbl>      <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Cent…  1290             2760   760  4810      0.743\n2 Ang Mo Kio Cheng San              5640            16460  6050 28150      0.710\n3 Ang Mo Kio Chong Boon             5100            15000  6470 26570      0.771\n4 Ang Mo Kio Kebun Bahru            4620            13010  5120 22750      0.749\n5 Ang Mo Kio Sembawang Hills        1880             3630  1310  6820      0.879\n```\n\n\n:::\n:::\n\n\nConvert PA and SZ fields to uppercase\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), .funs = list(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\nhead(popdata2020)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  <chr>      <chr>                 <dbl>            <dbl> <dbl> <dbl>      <dbl>\n1 ANG MO KIO ANG MO KIO TOWN CENT…  1290             2760   760  4810      0.743\n2 ANG MO KIO CHENG SAN              5640            16460  6050 28150      0.710\n3 ANG MO KIO CHONG BOON             5100            15000  6470 26570      0.771\n4 ANG MO KIO KEBUN BAHRU            4620            13010  5120 22750      0.749\n5 ANG MO KIO SEMBAWANG HILLS        1880             3630  1310  6820      0.879\n6 ANG MO KIO SHANGRI-LA             3330             9050  3610 15990      0.767\n```\n\n\n:::\n:::\n\n\n## 3.2 Joining the attribute data\n\nNext we will join the geographical data with the attribute table using the `SZ` as common identifier using the `dplyr` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_popdata2020 <- left_join(mpsz, popdata2020, by = c(\"SUBZONE_N\" = \"SZ\"))\n\nhead(mpsz_popdata2020)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 21 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area              PA YOUNG ECONOMY ACTIVE AGED\n1 29220.19   5267.381  1630379.3            <NA>    NA             NA   NA\n2 29782.05   3506.107   559816.2          OUTRAM   930           3130 2120\n3 29974.66   1740.926   160807.5 SINGAPORE RIVER     0             40   10\n4 29933.77   3313.625   595428.9     BUKIT MERAH  2600           7450 3320\n5 30005.70   2825.594   387429.4     BUKIT MERAH  2760           6160 1740\n6 29991.38   4428.913  1030378.8     BUKIT MERAH  2800           7340 3420\n  TOTAL DEPENDENCY                       geometry\n1    NA         NA MULTIPOLYGON (((31495.56 30...\n2  6180  0.9744409 MULTIPOLYGON (((29092.28 30...\n3    50  0.2500000 MULTIPOLYGON (((29932.33 29...\n4 13370  0.7946309 MULTIPOLYGON (((27131.28 30...\n5 10660  0.7305195 MULTIPOLYGON (((26451.03 30...\n6 13560  0.8474114 MULTIPOLYGON (((25899.7 297...\n```\n\n\n:::\n:::\n\n\nIn order to store the current state of the data frame we can export as an `rds` file to be reused later\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(mpsz_popdata2020, \"data/rds/mpszpop2020.rds\")\n```\n:::\n\n\n# 4. Chloropleth Mapping using `tmap`\n\nNext chloropleth mapping will be using to portray the spatial distribution of aged population of Singapore by Master Plan 2014 Subzone Boundary, generally 2 approaches can be used to prepare a thematic map; plotting with `qtm()` or plotting a custom map using `tmap` elements\n\n# 4.1. Plotting with `qtm()`\n\nThe quickest way to draw a choropleth map is by using `qtm()` which is concise and provides a good visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Specify plot mode to produce static map, for interative use view instead\ntmap_mode(\"plot\")\n\n# Plot map using attribute DEPENDENCY as the fill\nqtm(mpsz_popdata2020, fill = \"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## 4.2 Plotting using `tmap`'s element\n\nFor a more customized plot use tmap elements instead\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020) + \n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Blues\", title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\", \n            main.title.position = \"center\",main.title.size = 1.2, legend.height = 0.45, legend.width = 0.35, frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### 4.2.1 Drawing a basemap\n\nThe basic building of tmap is `tm_shape()` followed by one or more layer of elements such as `tm_fill()` or `tm_polygons()`. In the following the tm_shape() is used with tm_polygons() to draw the subzones.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020) +\n  tm_polygons()\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### 4.2.1 Using `tm_fill` and `tm_border`\n\nNext the `DEPENDENCY` attribute is included into the fill and polygon plot. Note that `tm_polygons()` is a wrapper for the `tm_fill()` which shades the polygons using the default color scheme and uses `tm_borders()` to add the borders of the shapefile\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfill_map <- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", title = \"Fill\")\n\n# Note that the borders are plotted\npolygon_map <- tm_shape(mpsz_popdata2020) + tm_polygons(\"DEPENDENCY\", title = \"Polygon\")\n\n# tm_fill with tm_borders added\nfill_border_map <- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", title = \"Fill + Border\") + tm_borders(lwd = 0.5, lty = \"solid\", alpha = 1, col = \"Black\" )\n\ntmap_arrange(fill_map, polygon_map, fill_border_map, asp=0, ncol=3)\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n-   The default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by tmap\n-   The default color scheme used is YlOrRd of ColorBrewer. By default, Missing value will be shaded in grey.\n\n## 4.3 Plotting with Classification methods\n\nMost plots requires some form of data classification to group a large number of observation into meaninful ranges or classes. tmap provides a total of ten classification methods; fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks. All of which can be defined with the style argument of `tm_fill()` or `tm_polygons()`\n\n### 4.3.1 Comparing Classification Styles\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Comparing the different classification styles\nsd_plot <- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"sd\", title = \"sd\") + tm_borders(alpha = 0.5)\nkmeans_plot <- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"kmeans\", title = \"kmeans\") + tm_borders(alpha = 0.5)\nquantile_plot <- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"quantile\", title = \"quantile\") + tm_borders(alpha = 0.5)\njenks_plot <- tm_shape(mpsz_popdata2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"jenks\", title = \"jenks\") + tm_borders(alpha = 0.5)\n\ntmap_arrange(sd_plot, kmeans_plot, quantile_plot, jenks_plot, asp=0, ncol=4)\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nWith the side by side comparison of the different styles, we could observe: - Quantile seems to have an even spread of colors BUT not in values, hence may not necessary be a good representation - sd is the least illustrative of the 4 BUT also the most equal in terms of value distribution\n\n### 4.3.2 Plotting with Custom break\n\nIn order to override the default breaks computed internally we can set it explicitly with the break argument in `tm_fill()`\n\nStart by taking a look at the summary to get some descriptive statistics of the data we are working with.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mpsz_popdata2020$DEPENDENCY)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n```\n\n\n:::\n:::\n\n\nWith the above reference we can set our breaks in the following\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) + \n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## 4.4 Color Scheme\n\nThe color ramp can also be change based on RColorBrewer package.\n\n![](data/color_code.png)\n\n### 4.4.1 Changing color ramp\n\nTo change the color ramp simply assign the palette argument in `tm_fill()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", n = 6, style = \"quantile\", palette = \"BuPu\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### 4.4.2 Reverse color ramp\n\nTo reverse the color ramp add a `-` to the palette\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", n = 6, style = \"quantile\", palette = \"-BuPu\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## 4.5 Map Layouts\n\nFor a comprehensive plot several map elements are required, such as the scale bar, compass, title etc.\n\n### 4.5.1 Map Legend\n\nIn the following we made out legend a histogram among other customization to it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", style = \"fisher\", palette = \"BuGn\", legend.hist = TRUE, legend.is.portrait = FALSE, legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Fisher classification)\",\n            main.title.position = \"center\", main.title.size = 1, legend.height = 0.45, legend.width = 0.35, legend.outside = FALSE, legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n### 4.5.2 Map Style\n\nTo simplify styling we can also use existing tmap styles\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020)+\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"cobalt\")\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n### 4.5.2 Cartographic Elements\n\nCartographic furnitures can also be added such compass, scale bar and grid lines using the `tm_compass()`, `tm_scale_bar()` and `tm_grid()` respectively\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"4star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\")) +\n  tmap_style(\"classic\")\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nTo reset tmap style to default simply run `tmap_style(\"white\")`\n\n## 4.6 Portraying Multiple Maps\n\nSmall maps aka facet maps can be arrange vertically or horizontally to help visualise relations between changes in variables. Such maps can be plotted in 3 ways: 1. By assigning multiple values to at least one of the aesthetic arguments, 2. by defining a group-by variable in tm_facets(), and 3. By creating multiple stand-alone maps with tmap_arrange().\n\n### 4.6.1 Defining with Aesthetic Arguments\n\nIn the following the values are assigned to ncols\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"), style = \"quantile\", palette = list(\"Blues\", \"Reds\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### 4.6.2 Defining with `tm_facets()`\n\nChoropleth created using `tm_facets()` based on the `REGION_N`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020) +\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"Blues\", thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", free.coords=TRUE, drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE, title.position = c(\"center\", \"center\"),title.size = 20) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n### 4.6.3 Defining with `tmap_arrange()`\n\nAs seen previously `tmap_arrange()` can be used to render individual maps\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyoungmap <- tm_shape(mpsz_popdata2020) + \n  tm_polygons(\"YOUNG\", style = \"quantile\", palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_popdata2020) + \n  tm_polygons(\"AGED\", style = \"quantile\", palette = \"Reds\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n## 4.7 Mapping with Selection Criterion\n\nInstead of mapping the entire data frame we can also map just parts of it by filtering the data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_popdata2020[mpsz_popdata2020$REGION_N==\"NORTH-EAST REGION\", ]) +\n  tm_fill(\"DEPENDENCY\", style = \"quantile\", palette = \"YlGnBu\", legend.hist = TRUE, legend.is.portrait = TRUE,legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE, legend.outside.size = 0.2, legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](ho_ex02_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ho_ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}