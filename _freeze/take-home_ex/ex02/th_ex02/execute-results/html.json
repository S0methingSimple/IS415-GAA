{
  "hash": "b185c1bd8b22974d8490c54f0ad63bdb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 2\"\nauthor: \"Jeffery Lau\"\ndate: 09-23-2024\ndate-modified: \"last-modified\"\ndescription: |\n  In this exercise, we will be analyzing drug use offence in Thailand from 2017 - 2022, using spatial autocorrelation techniques to identify clusters, outliers and hotspots of such offence. We'll also create maps to visualize the results and interpret the spatial patterns.\ncategories:\n  - Take-home\nformat:\n  html:\n    toc: true\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# 1. Introduction\n\n## 1.1 Context\n\nDrug abuse is a significant global health issue with far-reaching consequences, including negative health outcomes, financial burdens, and social problems. Despite efforts to combat it, illicit drug consumption remains prevalent and continues to grow. In 2021, an estimated 296 million people aged 15–64 worldwide had used a drug in the past 12 months.\n\nThailand, situated near the Golden Triangle - the largest drug production site in Asia - has become a market and transit route for drug trafficking due to its geographic location and infrastructure development. This has made drug abuse a major social issue within the country.\n\nYouth are particularly vulnerable to drug abuse, with approximately 2.7 million Thai youths using drugs. Among 15-19-year-olds, around 300,000 require drug treatment. Vocational-school students are disproportionately affected, with nearly double the number of drug users compared to secondary-school students.\n\n## 1.2 Objectives\n\n1.  Determine if drug abuse indicator are spatially dependent\n2.  Identify clusters, outliers and hotspots of drug abuse\n3.  Identify emerging hot and cold spots\n\n# 2. Setup\n\n## 2.1 Loading Packages\n\nIn this project we will be using the following packages:\n\n-   **`tmap`:** A package for creating thematic maps in R. It provides a simple and flexible interface for customizing maps and exporting them in various formats.\n\n-   **`sf`:** A package for simple feature data, which is a modern standard for representing geographic features. It provides efficient data structures and functions for spatial operations.\n\n-   **`sfdep`:** A package specifically designed for spatial dependence analysis. It provides functions for calculating spatial weights matrices, conducting global and local spatial autocorrelation tests (e.g., Moran's I, Geary's C), and performing spatial regression analysis.\n\n-   **`tidyverse`:** A collection of R packages designed for data manipulation, visualization, and analysis. It includes packages like dplyr, ggplot2, and tidyr, which are commonly used in data science workflows.\n\n-   **`kendall`:** A package used for performing Kendall's rank correlation test. This test is often used to assess the degree of association between two variables when the data is ordinal or continuous but not normally distributed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, tidyverse, ggplot2, gridExtra, kendall)\n```\n:::\n\n\n## 2.2 Loading Data\n\nThis dataset presents statistics related to different types of drug offenses in Thailand, categorized by fiscal year. The data provides insights into the prevalence of various drug-related cases and their distribution across different provinces.\n\n\n::: {.cell}\n\n```{.r .cell-code}\noff_sf <- read_csv(\"data/aspatial/thai_drug_offenses_2017_2022.csv\")\n```\n:::\n\n\nHere we will be loading Thailand's administrative 1 (province) boundaries, in accordance with the drug offense dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprov_sf <- st_read(dsn = \"data/geospatial/tha_adm_rtsd_itos_20210121_shp\", layer = \"tha_admbnda_adm1_rtsd_20220121\") %>%\n              st_transform(crs = 24047)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/jeffery/Projects/Y4S1/IS415/IS415-GAA/take-home_ex/ex02/data/geospatial/tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n# 3. Data Wrangling\n\nIn this section we will be wrangling our data and joining the drug offences dataframe with the provinces sf dataframe.\n\n## 3.1 Examining Data\n\nBefore performing the join we need to identify if the column we are joining is clear for joining (ie. share the same spelling).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprov_diff <- function(off_sf_provinces, prov_sf_provinces) {\n  # Check if all provinces from off_sf are in prov_sf\n  all_off_sf_in_prov_sf <- all(off_sf_provinces %in% prov_sf_provinces)\n  \n  # Check if all provinces from prov_sf are in off_sf\n  all_prov_sf_in_off_sf <- all(prov_sf_provinces %in% off_sf_provinces)\n  \n  # Check if the sets are equal\n  sets_are_equal <- all_off_sf_in_prov_sf && all_prov_sf_in_off_sf\n  \n  if (sets_are_equal) {\n    cat(\"All province names match.\\n\")\n  } else {\n    cat(\"There are mismatches in province names.\\n\")\n  \n    # Find the differences\n    cat(\"Missing in prov_sf:\", paste(setdiff(off_sf_provinces, prov_sf_provinces), collapse = \", \"), \"\\n\")\n    cat(\"Missing in off_sf:\", paste(setdiff(prov_sf_provinces, off_sf_provinces), collapse = \", \"), \"\\n\")\n  }\n}\n\nprov_diff(unique(off_sf$province_en), unique(prov_sf$ADM1_EN))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThere are mismatches in province names.\nMissing in prov_sf: Loburi, buogkan \nMissing in off_sf: Lop Buri, Bueng Kan \n```\n\n\n:::\n:::\n\n\n::: callout-note\n### Provinces to Update\n\nNotice in the above when we compare the unique set from both SF there is 2 misspellings, where we will be renaming the province in off_sf:\n\n1.  Loburi -\\> Lop Buri\n2.  Buogkan -\\> Bueng Kan\n:::\n\n## 3.2 Updaing Mixmatched Province\n\nWe will perform the suggested naming and check if the provinces matches.\n\n\n::: {.cell}\n\n```{.r .cell-code}\noff_sf <- off_sf %>%\n  mutate(province_en = case_when(\n    province_en == \"Loburi\" ~ \"Lop Buri\",\n    TRUE ~ province_en\n  ))\noff_sf <- off_sf %>%\n  mutate(province_en = case_when(\n    province_en == \"buogkan\" ~ \"Bueng Kan\",\n    TRUE ~ province_en\n  ))\n\nprov_diff(unique(off_sf$province_en), unique(prov_sf$ADM1_EN))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAll province names match.\n```\n\n\n:::\n:::\n\n\n## 3.3 Joining `sf` on Province\n\nNow we can join the province and drug offense dataframe, left join on province since it is the `sf` df.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_sf <- left_join(prov_sf, off_sf, by = c(\"ADM1_EN\" = \"province_en\"))\nhead(du_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 20 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 644049.1 ymin: 1491784 xmax: 710059.2 ymax: 1543010\nProjected CRS: Indian 1975 / UTM zone 47N\n  Shape_Leng Shape_Area ADM1_EN      ADM1_TH ADM1_PCODE ADM1_REF ADM1ALT1EN\n1   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n2   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n3   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n4   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n5   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n6   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n  ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH ADM0_PCODE       date\n1       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n2       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n3       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n4       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n5       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n6       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n     validOn validTo fiscal_year types_of_drug_offenses no_cases  province_th\n1 2022-01-22    <NA>        2017         drug_use_cases    11871 กรุงเทพมหานคร\n2 2022-01-22    <NA>        2018         drug_use_cases    16480 กรุงเทพมหานคร\n3 2022-01-22    <NA>        2019         drug_use_cases    15067 กรุงเทพมหานคร\n4 2022-01-22    <NA>        2020         drug_use_cases     9724 กรุงเทพมหานคร\n5 2022-01-22    <NA>        2021         drug_use_cases     9625 กรุงเทพมหานคร\n6 2022-01-22    <NA>        2022         drug_use_cases     2755 กรุงเทพมหานคร\n                        geometry\n1 MULTIPOLYGON (((674854.6 15...\n2 MULTIPOLYGON (((674854.6 15...\n3 MULTIPOLYGON (((674854.6 15...\n4 MULTIPOLYGON (((674854.6 15...\n5 MULTIPOLYGON (((674854.6 15...\n6 MULTIPOLYGON (((674854.6 15...\n```\n\n\n:::\n:::\n\n\n## 3.4 Filtering to just Drug Use\n\nThe following are the types of drug related use cases captured within the data, for this particular project we will be scoping down the data for analysis to just `drug_use_cases`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(du_sf$types_of_drug_offenses)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"drug_use_cases\"                                        \n [2] \"suspects_in_drug_use_cases\"                            \n [3] \"possession_cases\"                                      \n [4] \"suspects_in_possession_cases\"                          \n [5] \"possession_with_intent_to_distribute_cases\"            \n [6] \"suspects_in_possession_with_intent_to_distribute_cases\"\n [7] \"trafficking_cases\"                                     \n [8] \"suspects_in_trafficking_cases\"                         \n [9] \"production_cases\"                                      \n[10] \"suspects_in_production_cases\"                          \n[11] \"import_cases\"                                          \n[12] \"suspects_in_import_cases\"                              \n[13] \"export_cases\"                                          \n[14] \"suspects_in_export_cases\"                              \n[15] \"conspiracy_cases\"                                      \n[16] \"suspects_in_conspiracy_cases\"                          \n```\n\n\n:::\n:::\n\n\nSince we will be predominately working with drug use offense, we will filter by `drug_use_cases` and remove columns that are not involved in analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_sf <- du_sf %>%\n  select(fiscal_year, types_of_drug_offenses, no_cases, ADM1_EN, geometry) %>%\n  filter(types_of_drug_offenses == \"drug_use_cases\") %>%\n  rename(year = fiscal_year,\n         cases = no_cases,\n         province = ADM1_EN) %>%\n  select(-types_of_drug_offenses)\n\nhead(du_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 644049.1 ymin: 1491784 xmax: 710059.2 ymax: 1543010\nProjected CRS: Indian 1975 / UTM zone 47N\n  year cases province                       geometry\n1 2017 11871  Bangkok MULTIPOLYGON (((674854.6 15...\n2 2018 16480  Bangkok MULTIPOLYGON (((674854.6 15...\n3 2019 15067  Bangkok MULTIPOLYGON (((674854.6 15...\n4 2020  9724  Bangkok MULTIPOLYGON (((674854.6 15...\n5 2021  9625  Bangkok MULTIPOLYGON (((674854.6 15...\n6 2022  2755  Bangkok MULTIPOLYGON (((674854.6 15...\n```\n\n\n:::\n:::\n\n\n### 3.5 Saving Dataframe\n\nWe will save the filtered province and joined `sf` df for reuse later\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprov_sf <- prov_sf %>%\n  select(ADM1_EN, geometry) %>%\n  rename(province = ADM1_EN)\nwrite_rds(prov_sf, \"data/rds/province.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(du_sf, \"data/rds/drug_use.rds\")\n```\n:::\n\n\nLoad the province and joined df and create a drug use df without geometry for EDA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprov_sf <- read_rds(\"data/rds/province.rds\")\ndu_sf <- read_rds(\"data/rds/drug_use.rds\")\ndu_df <- du_sf %>%\n  select(year, cases, province) %>%\n  st_drop_geometry()\n```\n:::\n\n\n# 4. Exploratory Data Analysis\n\nBefore we begin on our Spatial Autocorrelation analysis it will help to understand the data we will be working with and spot general trends within the data.\n\n## 4.1 Drug Use Cases (2017-2022)\n\nThe data provided with the dataset is yearly record of the number of drug cases, let's start by observing the trend of drug use in the past few years.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aggregate cases by year\naggregated_data <- du_df %>%\n  group_by(year) %>%\n  summarize(total_cases = sum(cases))\n\n# Create the line chart with a curved line and a centered title\nggplot(aggregated_data, aes(x = year, y = total_cases)) +\n  geom_smooth(method = \"loess\", se = FALSE, color = \"red\") +\n  geom_text(aes(label = total_cases), vjust = -0.5) + \n  labs(title = \"Total Cases Over Time\",\n       x = \"Year\",\n       y = \"Total Cases\") +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nWe can see that the drug use cases spiked in 2021 doubling the number of cases in 2017.\n\n## 4.2 Top 10 Province\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a function to generate the pie chart for a given year\ncreate_pie_chart <- function(yr) {\n  # Group the data by province and sum the cases\n  province_data <- du_df %>%\n    filter(year == yr) %>%\n    group_by(province) %>%\n    summarize(total_cases = sum(cases))\n\n  # Sort the data by total_cases in descending order\n  province_data <- province_data[order(-province_data$total_cases), ]\n\n  # Select the top 10 provinces\n  top_10_provinces <- province_data[1:10, ]\n\n  # Create the pie chart with labels, smaller legend, text, and title\n  ggplot(top_10_provinces, aes(x = \"\", y = total_cases, fill = province)) +\n    geom_bar(stat = \"identity\", color = \"white\") +\n    coord_polar(theta = \"y\") +\n    geom_text(aes(label = total_cases), position = position_stack(vjust = 0.5), size = 2) +  # Smaller text size\n    labs(title = yr, size = 3) +  # Smaller title size\n    scale_fill_brewer(palette = \"YlOrRd\") +  # Use RdYlGn palette\n    theme_void() +\n    theme(legend.text = element_text(size = 3),\n          legend.key.size = unit(0.3, \"cm\"))  # Smaller legend text size\n}\n\n# Create a list of pie charts for each year\npie_charts <- list()\nfor (year in 2017:2022) {\n  pie_charts[[year-2016]] <- create_pie_chart(year)\n}\n\n# Arrange the charts in a 2x2 grid\ngrid.arrange(grobs = pie_charts, ncol = 3, nrow = 2)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nFrom the above pie charts the we can observe Bangkok, Chang Mai, Chon Buri have consistently remained at the top. It is also interesting to note Bangkok was off the list in 2022.\n\n## 4.3 Spatial Distrbution of Drug Use\n\n::: panel-tabset\n### Distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_cases <- min(du_sf$cases)\nmax_cases <- max(du_sf$cases)\n\ntm_shape(du_sf) +\n    tm_fill(\"cases\",\n            breaks = seq(min_cases, max_cases, length.out = 6),\n            palette = \"YlOrRd\") +\n    tm_borders(alpha = 0.5) +\n    tm_layout(legend.outside = TRUE,\n              legend.outside.position = \"right\") +\n    tm_facets(by=\"year\",\n              free.coords = F,\n              drop.units = T)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nFrom the choropleth plot we can observe that there seemed to be more cases of drug use 2021. Cases are seen in clusters in the central provinces around Bangkok and Chon Buri, north in Chang Mai and down south in Nakhon Si Thammarat.\n\n### Province\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n:::\n\n::: callout-note\n### Year Selection\n\nGiven the recency and the spike in cases during 2021, we shall work on the 3 years of 2020 - 2022 to narrow our focus and gather deeper insights from these years.\n:::\n\n# 5. Global Spatial Autocorrelation\n\nTo assess the overall spatial distribution of drug use across Thailand's provinces, we will begin by conducting global spatial autocorrelation analysis. We will employ both Moran's I and Geary's C tests to provide a more comprehensive understanding of the spatial patterns. Moran's I is sensitive to both clustering and dispersion, while Geary's C is more focused on detecting dispersion. By examining the results from both tests, we can gain valuable insights into the spatial structure of drug use in the country.\n\n::: callout-note\n## Moran's I vs Geary's C\n\n-   Moran's I: is a good starting point for most spatial autocorrelation analyses. Computes how features differ across entire study area\n-   Geary's C: can be considered if you are specifically interested in assessing variability. Computes how features differ from immediate neighobours.\n:::\n\n## 5.1 Examine Contiguity\n\n### 5.1.1 Computing Contiguity\n\nHere we will be computing the contiguity of our provinces, where we use the `queen` contiguity by default\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate contiguity neighbors\nnb <- st_contiguity(prov_sf$geometry)\n```\n:::\n\n\nThe st_contiguity analysis reveals that there are 77 contiguous regions in the data. The majority of regions have between 3 and 5 neighbors, indicating a moderate level of spatial connectivity. However, there are also some regions with fewer neighbors, including one region that has no neighbors at all. This region might be an outlier or an island that is not connected to any other regions in the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n```\n\n\n:::\n:::\n\n\nRegion 67 is indicated to have no links and it is identified to be Phuket which happens to be an island on it's own.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprov_sf$province[[67]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Phuket\"\n```\n\n\n:::\n:::\n\n\n::: callout-note\n##### Land link\n\nDespite Phuket being an island there is actually a land link between Phuket and Phang Nga. ![](assets/phuket.png)\n:::\n\n### 5.1.2 Fixing Contiguity\n\nTo ensure we account for the landlink we will be adding Phang Nga as part of Phuket's neighbor for the sake of our subsequent analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(unique(prov_sf$province) == \"Phangnga\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 66\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Adding into each others link\nnb[[67]] <- as.integer(c(66))\nnb[[66]] <- c(nb[[66]], as.integer(67))\n```\n:::\n\n\n### 5.1.3 Visualizing Contiguity\n\nThe following plot portrays the connectivity between the provinces using the queens contiguity, note that Phuket is also now linked with Phang Nga. With the `nb` we can proceed with perform the Spatial Autocorrelation analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize the contiguity\nplot(st_geometry(prov_sf), border = 'lightgrey')\nplot(nb, st_geometry(prov_sf), pch = 19, cex = 0.6, col = 'red', add = TRUE)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## 5.2 Moran's I\n\nTo identify general clustering and dispersion of drug use across provinces we shall employ Moran's I test.\n\n### 5.2.1 Moran's I Test\n\nWe will begin by computing the the weight matrix across the years 2020 - 2022.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Storing our weights into a list\ndu_wm <- list()\nfor (yr in 2020:2022) {\n  du_wm[[yr-2019]] <- du_sf %>%\n    filter(year == yr) %>%\n    mutate(nb = nb, wt = st_weights(nb, style = \"W\"), .before = 1)\n}\n\nhead(du_wm[[1]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n                      nb\n1    2, 3, 4, 15, 59, 60\n2                  1, 15\n3            1, 4, 5, 59\n4    1, 3, 5, 10, 15, 17\n5 3, 4, 6, 7, 10, 58, 59\n6            5, 7, 8, 58\n                                                                           wt\n1            0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n2                                                                    0.5, 0.5\n3                                                      0.25, 0.25, 0.25, 0.25\n4            0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n5 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n6                                                      0.25, 0.25, 0.25, 0.25\n  year cases                 province                       geometry\n1 2020  9724                  Bangkok MULTIPOLYGON (((674854.6 15...\n2 2020  1816             Samut Prakan MULTIPOLYGON (((687654.3 15...\n3 2020   937               Nonthaburi MULTIPOLYGON (((645332.7 15...\n4 2020  1192             Pathum Thani MULTIPOLYGON (((704600.8 15...\n5 2020  1745 Phra Nakhon Si Ayutthaya MULTIPOLYGON (((663456.7 16...\n6 2020   423                Ang Thong MULTIPOLYGON (((643988 1636...\n```\n\n\n:::\n:::\n\n\n::: panel-tabset\n#### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(global_moran(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.0876\n $ K: num 10.4\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal_moran_test(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 1.3777, p-value = 0.08414\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.087572782      -0.013157895       0.005345516 \n```\n\n\n:::\n:::\n\n\nBased on these results, there is some evidence of positive spatial autocorrelation in drug use in 2020 (I: 0.0876). However, the observed clustering is not statistically significant where p-value \\> 0.05. This suggests that while there might be a tendency for drug use to cluster geographically, the observed pattern could be due to chance.\n\n#### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(global_moran(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.201\n $ K: num 4.71\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal_moran_test(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.808, p-value = 0.002493\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.201001723      -0.013157895       0.005816956 \n```\n\n\n:::\n:::\n\n\nBased on these results, there is strong evidence of positive spatial autocorrelation in drug use in 2021 (I: 0.201). The observed clustering is statistically significant where p-value \\< 0.05, suggesting that the pattern is unlikely to be due to chance. This indicates a more pronounced tendency for drug use to cluster geographically in 2021 compared to 2020.\n\n#### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(global_moran(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.216\n $ K: num 3.88\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal_moran_test(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.9826, p-value = 0.001429\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.21564943       -0.01315789        0.00588501 \n```\n\n\n:::\n:::\n\n\nBased on these results, similar to 2021, there is strong evidence of positive spatial autocorrelation in drug use in 2022 (I: 0.216). The observed clustering is statistically significant where p-value \\< 0.05, suggesting that the pattern is unlikely to be due to chance.\n:::\n\n### 5.2.2 Moran I Perm Test\n\nGiven that we are running simulations, we start by setting the seed to ensure subsequent reproducibility.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(888)\n```\n:::\n\n\n::: panel-tabset\n#### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_mi_perm_20 <- global_moran_perm(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt, nsim = 99)\ndu_mi_perm_20\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.087573, observed rank = 92, p-value = 0.16\nalternative hypothesis: two.sided\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(du_mi_perm_20$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.13071 -0.05919 -0.02025 -0.01037  0.03147  0.25448 \n```\n\n\n:::\n:::\n\n\nBased on the observed Moran's I statistic of 0.087573 has a rank of 93 out of 100 simulations, resulting in a p-value of 0.16. This suggests a weak positive spatial autocorrelation, however the observed spatial autocorrelation is not statistically significant at a 5% level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(du_mi_perm_20$res, freq=TRUE, breaks=20, xlab=\"Simulated Moran's I\", main=\"Histogram of Simulated Moran's I (2020, sims = 99)\")\nabline(v=0, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n#### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_mi_perm_21 <- global_moran_perm(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt, nsim = 99)\ndu_mi_perm_21\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.201, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(du_mi_perm_21$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.17864 -0.06450 -0.01222 -0.01162  0.03652  0.20100 \n```\n\n\n:::\n:::\n\n\nBased on the observed Moran's I statistic of 0.201 has a rank of 99 out of 100 simulations, resulting in a p-value of 0.02. This suggests a positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level, as the p-value is less than 0.05.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(du_mi_perm_21$res, freq=TRUE, breaks=20, xlab=\"Simulated Moran's I\", main=\"Histogram of Simulated Moran's I (2021, sims = 99)\")\nabline(v=0, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n#### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_mi_perm_22 <- global_moran_perm(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt, nsim = 99)\ndu_mi_perm_22\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.21565, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(du_mi_perm_22$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.24803 -0.07494 -0.02639 -0.01746  0.03541  0.21565 \n```\n\n\n:::\n:::\n\n\nBased on the observed Moran's I statistic of 0.21565 has a rank of 100 out of 100 simulations, resulting in a p-value of 2.2e-16. This suggests a positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level, as the p-value is less than 0.05.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(du_mi_perm_22$res, freq=TRUE, breaks=20, xlab=\"Simulated Moran's I\", main=\"Histogram of Simulated Moran's I (2022, sims = 99)\")\nabline(v=0, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n:::\n\n## 5.3 Geary C\n\nNext we shall further understand and verify if our findings with Moran's I is consistent with the Geary's C test.\n\n### 5.2.1 Geary C Test\n\n::: panel-tabset\n#### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(global_c(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ C: num 0.952\n $ K: num 10.4\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal_c_test(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 0.47287, p-value = 0.3182\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       0.95158530        1.00000000        0.01048272 \n```\n\n\n:::\n:::\n\n\nBased on these results, there is weak evidence of spatial clustering in drug use in 2020. The Geary's C statistic of 0.9516 is close to the expected value of 1, and the p-value of 0.3182 is not statistically significant. This suggests that the observed pattern of drug use is not significantly dispersed across space.\n\n#### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(global_c(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ C: num 0.847\n $ K: num 4.71\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal_c_test(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 1.7358, p-value = 0.0413\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.847281286       1.000000000       0.007741081 \n```\n\n\n:::\n:::\n\n\nBased on these results, there is some evidence of spatial clustering in drug use in 2021. The Geary's C statistic of 0.847281286 is lower than the expected value of 1, and the p-value of 0.0413 is statistically significant. Suggesting a tendency for provinces with high drug use rates to be surrounded by provinces with low drug use rates (dispersion).\n\n#### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(global_c(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ C: num 0.836\n $ K: num 3.88\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal_c_test(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 1.9173, p-value = 0.0276\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.835677203       1.000000000       0.007345315 \n```\n\n\n:::\n:::\n\n\nBased on these results, similar to 2021 there is some evidence of spatial clustering in drug use in 2022. The Geary's C statistic of 0.835677203 is lower than the expected value of 1, and the p-value of 0.0276 is statistically significant. Suggesting a tendency for provinces with high drug use rates to be surrounded by provinces with low drug use rates (dispersion).\n:::\n\n### 5.2.2 Geary C Perm Test\n\n::: panel-tabset\n#### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_gc_perm_20 <- global_c_perm(du_wm[[1]]$cases, du_wm[[1]]$nb, du_wm[[1]]$wt, nsim = 99)\ndu_gc_perm_20\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.95159, observed rank = 31, p-value = 0.31\nalternative hypothesis: greater\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(du_gc_perm_20$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7866  0.9359  1.0073  1.0061  1.0732  1.2449 \n```\n\n\n:::\n:::\n\n\nBased on the observed Geary C statistic of 0.95159 has a rank of 29 out of 100 simulations, resulting in a p-value of 0.29. This suggests a weak positive spatial autocorrelation in the data and that the observed spatial dispersion is not statistically significant at a 5% level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(du_gc_perm_20$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\", main=\"Histogram of Simulated Geary's c (2020, sims = 99)\")\nabline(v=1, col=\"red\")\nabline(v=du_gc_perm_20$statistic, col=\"blue\", lwd=2)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n#### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_gc_perm_21 <- global_c_perm(du_wm[[2]]$cases, du_wm[[2]]$nb, du_wm[[2]]$wt, nsim = 99)\ndu_gc_perm_21\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.84728, observed rank = 4, p-value = 0.04\nalternative hypothesis: greater\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(du_gc_perm_21$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7609  0.9299  1.0052  0.9994  1.0581  1.3582 \n```\n\n\n:::\n:::\n\n\nBased on the observed Geary C statistic of 0.84728 has a rank of 8 out of 100 simulations, resulting in a p-value of 0.08. This suggests a weak positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(du_gc_perm_21$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\", main=\"Histogram of Simulated Geary's c (2021, sims = 99)\")\nabline(v=1, col=\"red\")\nabline(v=du_gc_perm_21$statistic, col=\"blue\", lwd=2)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n#### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_gc_perm_22 <- global_c_perm(du_wm[[3]]$cases, du_wm[[3]]$nb, du_wm[[3]]$wt, nsim = 99)\ndu_gc_perm_22\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.83568, observed rank = 5, p-value = 0.05\nalternative hypothesis: greater\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(du_gc_perm_22$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7756  0.9421  0.9924  0.9927  1.0448  1.2929 \n```\n\n\n:::\n:::\n\n\nBased on the observed Geary C statistic of 0.83568 has a rank of 2 out of 100 simulations, resulting in a p-value of 0.02. This suggests a weak positive spatial autocorrelation in the data and that the observed spatial autocorrelation is statistically significant at a 5% level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(du_gc_perm_22$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\", main=\"Histogram of Simulated Geary's c (2022, sims = 99)\")\nabline(v=1, col=\"red\")\nabline(v=du_gc_perm_22$statistic, col=\"blue\", lwd=2)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n:::\n\n# 6. Local Spatial Autocorrelation\n\nTo identify specific regions with high or low concentrations of drug use, we will conduct local spatial autocorrelation analysis using the Local Moran's I statistic. This will allow us to pinpoint areas that exhibit statistically significant clustering or dispersion of drug use, providing valuable insights into the spatial distribution of the phenomenon at a local level.\n\n## 6.1 Moran I\n\n### 6.1.1 Computing Local Moran I\n\nWe start by computing the local Moran's I for each year.\n\n::: panel-tabset\n#### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_lm_20 <- du_wm[[1]] %>%\n  mutate(local_moran = local_moran(cases, nb, wt, nsim = 99), .before = 1) %>%\n  unnest(local_moran)\n\nhead(du_lm_20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 17 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 18\n       ii       eii    var_ii   z_ii     p_ii p_ii_sim p_folded_sim skewness\n    <dbl>     <dbl>     <dbl>  <dbl>    <dbl>    <dbl>        <dbl>    <dbl>\n1 -0.904  -0.466    1.74      -0.332 0.740        0.84         0.42    0.699\n2 -0.0335 -0.000444 0.0000866 -3.55  0.000386     0.02         0.01   -1.36 \n3 -0.556  -0.00112  0.0698    -2.10  0.0358       0.08         0.04   -1.16 \n4 -0.217   0.00130  0.0240    -1.40  0.160        0.22         0.11   -1.23 \n5  0.0223 -0.00293  0.000508   1.12  0.264        0.18         0.09   -1.03 \n6  0.317  -0.00215  0.190      0.731 0.465        0.34         0.17   -1.54 \n# ℹ 10 more variables: kurtosis <dbl>, mean <fct>, median <fct>, pysal <fct>,\n#   nb <nb>, wt <list>, year <dbl>, cases <dbl>, province <chr>,\n#   geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n\n#### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_lm_21 <- du_wm[[2]] %>%\n  mutate(local_moran = local_moran(cases, nb, wt, nsim = 99), .before = 1) %>%\n  unnest(local_moran)\n\nhead(du_lm_21)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 17 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 18\n       ii      eii  var_ii   z_ii   p_ii p_ii_sim p_folded_sim skewness kurtosis\n    <dbl>    <dbl>   <dbl>  <dbl>  <dbl>    <dbl>        <dbl>    <dbl>    <dbl>\n1 -0.906   3.43e-3 1.48    -0.747 0.455      0.56         0.28    0.729    0.456\n2 -0.321  -2.07e-3 0.0195  -2.29  0.0221     0.06         0.03   -0.708   -0.255\n3  0.0221 -4.44e-4 0.00137  0.610 0.542      0.5          0.25    0.711    0.297\n4 -0.150   1.33e-3 0.0436  -0.727 0.467      0.5          0.25   -0.411   -0.399\n5  0.294   3.71e-2 0.0352   1.37  0.171      0.12         0.06   -0.428   -0.671\n6  0.635   1.25e-2 0.198    1.40  0.162      0.12         0.06   -0.455   -0.472\n# ℹ 9 more variables: mean <fct>, median <fct>, pysal <fct>, nb <nb>,\n#   wt <list>, year <dbl>, cases <dbl>, province <chr>,\n#   geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n\n#### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndu_lm_22 <- du_wm[[3]] %>%\n  mutate(local_moran = local_moran(cases, nb, wt, nsim = 99), .before = 1) %>%\n  unnest(local_moran)\n\nhead(du_lm_22)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 17 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 18\n       ii      eii   var_ii   z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n    <dbl>    <dbl>    <dbl>  <dbl> <dbl>    <dbl>        <dbl>    <dbl>    <dbl>\n1 -0.285   0.0358  0.170    -0.779 0.436     0.44         0.22    0.242   -0.501\n2  0.111  -0.00160 0.0396    0.567 0.571     0.58         0.29    0.927    1.50 \n3 -0.165   0.00604 0.143    -0.451 0.652     0.56         0.28   -0.692    0.559\n4  0.0112  0.00209 0.000393  0.459 0.646     0.7          0.35   -0.274   -0.349\n5  0.132  -0.00189 0.0156    1.07  0.284     0.2          0.1    -0.539    0.344\n6  0.436  -0.0287  0.161     1.16  0.246     0.26         0.13   -0.157   -0.894\n# ℹ 9 more variables: mean <fct>, median <fct>, pysal <fct>, nb <nb>,\n#   wt <list>, year <dbl>, cases <dbl>, province <chr>,\n#   geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n:::\n\n::: callout-note\n#### Intepretation of Attributes\n\n-   ii: local moran i\n\n-   p_ii: p-value with base method\n\n-   p_ii_sim: Based on simulation\n\n-   mean: Cluster type Labels\n\n-   median: Similar to mean (Better option if there are significant skewness in data)\n:::\n\n### 6.1.2 Visualizing I Values\n\n::: panel-tabset\n#### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\npii_m <- tm_shape(du_lm_20) +\n  tm_fill(\"p_ii_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value (2020)\", main.title.size = 1)\n\nii_m <- tm_shape(du_lm_20) +\n  tm_fill(\"ii\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I (2020)\", main.title.size = 1)\n\ntmap_arrange(ii_m, pii_m, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\nBased on the plot, we observed clusters of higher drug use in central provinces like Chon Buri and Rayong, while Mae Hong Son appeared as an outlier with significantly different drug use patterns (low) as compared to it's neighbors. The low p-values associated with these clusters indicate a high likelihood of statistically significant spatial autocorrelation, suggesting that the observed patterns may likely not be due to chance.\n\n#### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\npii_m <- tm_shape(du_lm_21) +\n  tm_fill(\"p_ii_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value (2021)\", main.title.size = 1)\n\nii_m <- tm_shape(du_lm_21) +\n  tm_fill(\"ii\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I (2021)\", main.title.size = 1)\n\ntmap_arrange(ii_m, pii_m, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\nBased on the plot, we observed clusters of higher drug use increased across Thailand. Besides the central provinces like Chon Buri and Rayong, the southern province of Surat Thani and Nakhon as well as the eastern province of Ubon all experienced higher drug and clustering patterns, while Mae Hong Son remains as an outlier as compared to it's neighbors. The p-values however seems to be mixed, indicating a varied likelihood of statistically significant spatial autocorrelation.\n\n#### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\npii_m <- tm_shape(du_lm_22) +\n  tm_fill(\"p_ii_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's p-value (2022)\", main.title.size = 1)\n\nii_m <- tm_shape(du_lm_22) +\n  tm_fill(\"ii\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local Moran's I (2022)\", main.title.size = 1)\n\ntmap_arrange(ii_m, pii_m, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\nBased on the plot, we observed a general decrease in drug use across Thailand. However we observe strong clustering patterns in central provinces of Udon, Kalasin and Khon Kaen, while Mae Hong Son remains as an outlier as compared to it's neighbors. The p-values associated with the central province seems to be low, indicating a high likelihood of statistically significant spatial autocorrelation.\n\n#### Province\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n:::\n\n### 6.1.3 LISA Cluster Map\n\nNext we will examining the significant locations color coded by type of spatial autocorrelation.\n\n::: panel-tabset\n#### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <- du_lm_20 %>%\n  filter(p_ii_sim < 0.1) \n\ntm_shape(du_lm_20) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n\nBased on the LISA map, we observed a high-high cluster of drug use in the central provinces surrounding Bangkok. This suggests that areas with high drug use rates are clustered together in this region. Additionally, several low-high outliers were identified, indicating areas with high drug use rates surrounded by areas with low drug use rates. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n#### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <- du_lm_21 %>%\n  filter(p_ii_sim < 0.1) \n\ntm_shape(du_lm_21) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n\nBased on the LISA map, we observed a low-low cluster of drug use in the western provinces. Additionally, we can observe several smaller high-high clusters scattered around. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n#### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <- du_lm_22 %>%\n  filter(p_ii_sim < 0.1) \n\ntm_shape(du_lm_22) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n\nBased on the LISA map, similar to 2021 we observed a low-low cluster of drug use in the western provinces. Additionally, we can observe large high-high clusters in the northen-central provinces of Kalasin and Udon Thani. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n#### Province\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n:::\n\n## 6.2 Hotspot and Coldspot Analysis\n\nTo further analyze the spatial distribution of drug use, we can employ the Getis-Ord Gi\\* statistic to identify local hotspots and coldspots. This analysis will help pinpoint specific areas with significantly high or low concentrations of drug use, providing valuable insights into the spatial patterns of the phenomenon. Before we start we will need to get the inverse weight matrix for Gi\\* statistics to work.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Storing our weights into a list\ndu_iwm <- list()\nfor (yr in 2020:2022) {\n  du_iwm[[yr-2019]] <- du_sf %>%\n    filter(year == yr) %>%\n    mutate(nb = nb,\n           wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1),\n           .before = 1)\n}\n\nhead(du_iwm[[1]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n                      nb\n1    2, 3, 4, 15, 59, 60\n2                  1, 15\n3            1, 4, 5, 59\n4    1, 3, 5, 10, 15, 17\n5 3, 4, 6, 7, 10, 58, 59\n6            5, 7, 8, 58\n                                                                                               wts\n1               5.330037e-05, 2.809414e-05, 2.416100e-05, 9.504299e-06, 1.709074e-05, 2.216785e-05\n2                                                                       5.330037e-05, 1.095141e-05\n3                                           2.809414e-05, 3.315966e-05, 1.995419e-05, 3.180094e-05\n4               2.416100e-05, 3.315966e-05, 2.932427e-05, 1.431406e-05, 8.594233e-06, 1.667747e-05\n5 1.995419e-05, 2.932427e-05, 3.095582e-05, 9.832177e-06, 1.967158e-05, 1.638466e-05, 1.407828e-05\n6                                           3.095582e-05, 1.069042e-05, 2.974675e-05, 2.628824e-05\n  year cases                 province                       geometry\n1 2020  9724                  Bangkok MULTIPOLYGON (((674854.6 15...\n2 2020  1816             Samut Prakan MULTIPOLYGON (((687654.3 15...\n3 2020   937               Nonthaburi MULTIPOLYGON (((645332.7 15...\n4 2020  1192             Pathum Thani MULTIPOLYGON (((704600.8 15...\n5 2020  1745 Phra Nakhon Si Ayutthaya MULTIPOLYGON (((663456.7 16...\n6 2020   423                Ang Thong MULTIPOLYGON (((643988 1636...\n```\n\n\n:::\n:::\n\n\n### 6.2.1 Computing Local Gi\\*\n\n::: panel-tabset\n#### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhcsa_20 <- du_iwm[[1]] %>%\n  mutate(local_Gi = local_gstar_perm(cases, nb, wts, nsim = 99), .before = 1) %>%\n  unnest(local_Gi) \n\nhead(hcsa_20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 16\n  gi_star cluster   e_gi    var_gi std_dev  p_value p_sim p_folded_sim skewness\n    <dbl> <fct>    <dbl>     <dbl>   <dbl>    <dbl> <dbl>        <dbl>    <dbl>\n1    1.34 High    0.0208 0.0000132  -0.513 0.608     0.72         0.36    0.518\n2    2.98 Low     0.0133 0.0000353   3.42  0.000635  0.04         0.02    1.93 \n3    1.71 Low     0.0120 0.0000207   2.21  0.0271    0.12         0.06    1.02 \n4    1.21 Low     0.0123 0.0000173   1.45  0.146     0.18         0.09    1.72 \n5   -1.08 Low     0.0130 0.0000205  -0.995 0.320     0.18         0.09    0.983\n6   -1.09 Low     0.0101 0.0000187  -0.668 0.504     0.58         0.29    1.41 \n# ℹ 7 more variables: kurtosis <dbl>, nb <nb>, wts <list>, year <dbl>,\n#   cases <dbl>, province <chr>, geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n\n#### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhcsa_21 <- du_iwm[[2]] %>%\n  mutate(local_Gi = local_gstar_perm(cases, nb, wts, nsim = 99), .before = 1) %>%\n  unnest(local_Gi) \n\nhead(hcsa_21)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 16\n  gi_star cluster   e_gi    var_gi std_dev p_value p_sim p_folded_sim skewness\n    <dbl> <fct>    <dbl>     <dbl>   <dbl>   <dbl> <dbl>        <dbl>    <dbl>\n1   0.289 High    0.0163 0.0000116  -0.661  0.509   0.56         0.28   0.520 \n2   1.74  Low     0.0122 0.0000287   2.09   0.0370  0.1          0.05   1.01  \n3   0.538 High    0.0126 0.0000162   0.712  0.476   0.5          0.25   0.714 \n4   0.482 Low     0.0124 0.0000199   0.542  0.588   0.44         0.22   1.23  \n5  -1.68  Low     0.0120 0.0000119  -1.44   0.151   0.18         0.09   0.495 \n6  -1.68  Low     0.0107 0.0000128  -1.52   0.129   0.12         0.06   0.0274\n# ℹ 7 more variables: kurtosis <dbl>, nb <nb>, wts <list>, year <dbl>,\n#   cases <dbl>, province <chr>, geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n\n#### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhcsa_22 <- du_iwm[[3]] %>%\n  mutate(local_Gi = local_gstar_perm(cases, nb, wts, nsim = 99), .before = 1) %>%\n  unnest(local_Gi) \n\nhead(hcsa_22)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n# A tibble: 6 × 16\n  gi_star cluster   e_gi    var_gi std_dev p_value p_sim p_folded_sim skewness\n    <dbl> <fct>    <dbl>     <dbl>   <dbl>   <dbl> <dbl>        <dbl>    <dbl>\n1 -0.308  High    0.0140 0.0000105  -0.609   0.543  0.58         0.29    0.326\n2  0.647  High    0.0144 0.0000188   0.435   0.664  0.62         0.31    0.625\n3  0.0640 Low     0.0116 0.0000150   0.430   0.667  0.54         0.27    0.828\n4 -0.575  Low     0.0127 0.0000118  -0.452   0.651  0.78         0.39    0.366\n5 -1.21   Low     0.0125 0.0000105  -0.979   0.327  0.38         0.19    0.237\n6 -1.40   Low     0.0113 0.0000150  -0.965   0.335  0.24         0.12    0.921\n# ℹ 7 more variables: kurtosis <dbl>, nb <nb>, wts <list>, year <dbl>,\n#   cases <dbl>, province <chr>, geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n:::\n\n### 6.2.2 Visualizing Gi\\* Values\n\n::: panel-tabset\n#### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nh_pii_m <- tm_shape(hcsa_20) +\n  tm_fill(\"p_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value (2020)\", main.title.size = 1)\n\nh_ii_m <- tm_shape(hcsa_20) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I (2020)\", main.title.size = 1)\n\ntmap_arrange(h_ii_m, h_pii_m, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n\nBased on the plot, similar to Moran's I plot we observed a cluster of hotspots in central provinces, slightly north around Nakhon Sawan we observe a cluster of coldspot. The generally low p-values associated with these clusters indicate a high likelihood of statistically significant hotspot and coldspot.\n\n#### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nh_pii_m <- tm_shape(hcsa_21) +\n  tm_fill(\"p_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value (2021)\", main.title.size = 1)\n\nh_ii_m <- tm_shape(hcsa_21) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I (2021)\", main.title.size = 1)\n\ntmap_arrange(h_ii_m, h_pii_m, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n:::\n\n\nBased on the plot, we observed a cluster of hotspots in eastern provinces, and similar to Moran's I analysis a cluster of coldspot to the western provinces. The mixed p-values associated with these clusters indicate a varying likelihood of statistically significant hotspot and coldspot.\n\n#### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nh_pii_m <- tm_shape(hcsa_22) +\n  tm_fill(\"p_sim\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* p-value (2022)\", main.title.size = 1)\n\nh_ii_m <- tm_shape(hcsa_22) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Local G* I (2022)\", main.title.size = 1)\n\ntmap_arrange(h_ii_m, h_pii_m, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n\nBased on the plot, we observed a cluster of hotspots in north-central province, and similary a cluster of coldspot to the western provinces. The relatively low p-values associated with these clusters indicate a highly likelihood of statistically significant hotspot and coldspot.\n\n#### Province\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n:::\n\n### 6.1.3 HCSA LISA Map\n\n::: panel-tabset\n#### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig <- hcsa_20 %>%\n  filter(p_sim < 0.1) \n\ntm_shape(hcsa_20) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-61-1.png){width=672}\n:::\n:::\n\n\nBased on the LISA map, we observed a hotspot in the central near Chantha Buri, and a couple of coldspots in the proximity of Nakhon Sawan. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n#### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig <- hcsa_21 %>%\n  filter(p_sim < 0.1) \n\ntm_shape(hcsa_21) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-62-1.png){width=672}\n:::\n:::\n\n\nBased on the LISA map, we observe a cluster of coldspots in the western provinces and several hotspots to the east. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n#### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig <- hcsa_22 %>%\n  filter(p_sim < 0.1) \n\ntm_shape(hcsa_22) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n\nBased on the LISA map, similar to 2021 we observe a cluster of coldspots in the western provinces although not as significant. Additionally we also the development of a cluster of hotspots in and around the northern province of Kalasin in 2022. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n#### Province\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-64-1.png){width=672}\n:::\n:::\n\n:::\n\n# 7. Emerging Hotspot Analysis\n\nNext we will be employing Emerging Hotspot Analysis with Getis-Ord Gi\\* to identify areas where a specific phenomenon (in this case, drug use) is rapidly increasing or decreasing over time. It involves combining spatial autocorrelation analysis with temporal trend analysis to detect emerging clusters or outliers.\n\n## 7.1 Computing BOS\n\nWe start by calculating the spacetime object with the drug use df and the province `sf` df.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbos <- spacetime(du_df, prov_sf,\n                 .loc_col = \"province\",\n                 .time_col = \"year\")\n```\n:::\n\n\nNext we compute the neighbor and weights for the spacetime object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbos_nb <- bos %>% \n  activate(\"geometry\") %>%\n  mutate(\n    nb = include_self(st_contiguity(geometry)),\n    wt = st_weights(nb)\n  ) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n\n## 7.2 Emerging Hotspot Analysis\n\nEmerging Hot Spot Analysis identifies trends in spatial clustering over a period of time. Emerging hot spot analysis combines the Getis-Ord Gi\\* statistic with the Mann-Kendall trend test to determine if there is a temporal trend associated with local clustering of hot and cold spots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- emerging_hotspot_analysis(\n  x = bos_nb,\n  .var = \"cases\",\n  k = 1,\n  nsim = 99,\n  nb_col = \"nb\",\n  wt_col = \"wt\"\n)\nhead(ehsa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  location        tau   p_value      classification\n1                  Bangkok  0.3333333 0.4523704 no pattern detected\n2             Samut Prakan -0.3333333 0.4523704   sporadic coldspot\n3               Nonthaburi  0.2000000 0.7071142    sporadic hotspot\n4             Pathum Thani  0.3333333 0.4523704 no pattern detected\n5 Phra Nakhon Si Ayutthaya  0.3333333 0.4523704         new hotspot\n6                Ang Thong  0.3333333 0.4523704    sporadic hotspot\n```\n\n\n:::\n:::\n\n\n::: callout-note\n##### EHSA Intepretation\n\ntau: The tau value represents the Kendall's tau coefficient, which measures the strength and direction of the monotonic trend in the Gi\\* values over time. - tau \\> 0: Indicates a positive trend, suggesting that the location is becoming a hotspot (increasing Gi\\* values). - tau \\< 0: Indicates a negative trend, suggesting that the location is becoming a coldspot (decreasing Gi\\* values). - tau ≈ 0: Indicates no significant trend.\n:::\n\nWe will be joining the ehsa df with the province `sf` df for the spatial attribute.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sf <- left_join(prov_sf, ehsa, by = c(\"province\" = \"location\"))\nhead(ehsa_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 628818.1 ymin: 1490443 xmax: 712955 ymax: 1636548\nProjected CRS: Indian 1975 / UTM zone 47N\n                  province        tau   p_value      classification\n1                  Bangkok  0.3333333 0.4523704 no pattern detected\n2             Samut Prakan -0.3333333 0.4523704   sporadic coldspot\n3               Nonthaburi  0.2000000 0.7071142    sporadic hotspot\n4             Pathum Thani  0.3333333 0.4523704 no pattern detected\n5 Phra Nakhon Si Ayutthaya  0.3333333 0.4523704         new hotspot\n6                Ang Thong  0.3333333 0.4523704    sporadic hotspot\n                        geometry\n1 MULTIPOLYGON (((674854.6 15...\n2 MULTIPOLYGON (((687654.3 15...\n3 MULTIPOLYGON (((645332.7 15...\n4 MULTIPOLYGON (((704600.8 15...\n5 MULTIPOLYGON (((663456.7 16...\n6 MULTIPOLYGON (((643988 1636...\n```\n\n\n:::\n:::\n\n\n## 7.3 Visualizing EHCA\n\n### 7.3.1 Tau, Classification and p-value\n\n\n::: {.cell}\n\n```{.r .cell-code}\ne_p_m <- tm_shape(ehsa_sf) +\n  tm_fill(\"p_value\", palette = \"Purples\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"EHSA p-value\", main.title.size = 1)\n\ne_c_m <- tm_shape(ehsa_sf) +\n  tm_fill(\"classification\", palette = \"Spectral\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"EHSA Classification\", main.title.size = 1)\n\ne_t_m <- tm_shape(ehsa_sf) +\n  tm_fill(\"tau\", palette = \"-RdYlBu\") + \n  tm_borders(alpha=0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"EHSA tau-value\", main.title.size = 1)\n\ntmap_arrange(e_t_m, e_c_m, e_p_m, ncol = 3)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-69-1.png){width=672}\n:::\n:::\n\n\nWe can observe a scatter of emerging hot and cold spots within our tau plot while the classification plot further points out several new hotspots. However the p-value is highly mixed which results in varying statistically significance. To help narrow down our analysis we can filter by p-value in a EHSA LISA map for further analysis.\n\n### 7.2.3 EHSA LISA Map (85% Confidence)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nEHSA_sig <- ehsa_sf %>%\n  filter(p_value < 0.15) \n\ne_tp_m <- tm_shape(ehsa_sf) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(EHSA_sig) +\n  tm_fill(\"tau\", palette = \"-RdYlBu\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"EHSA tau (>85%)\", main.title.size = 1)\n\ne_cp_m <- tm_shape(ehsa_sf) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(EHSA_sig) +\n  tm_fill(\"classification\", palette = \"Spectral\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"EHSA Classification (>85%)\", main.title.size = 1)\n\np_m <- tm_shape(prov_sf) +\n  tm_polygons() +\n  tm_text(\"province\", size = 0.3) +\n  tm_layout(main.title = \"Province\", main.title.size = 1)\n\ntmap_arrange(e_tp_m, e_cp_m, p_m, ncol = 3)\n```\n\n::: {.cell-output-display}\n![](th_ex02_files/figure-html/unnamed-chunk-70-1.png){width=672}\n:::\n:::\n\n\nBased on the LISA map, we can confirm the emergence of several hotspots in Chon Buri as a sporadic hotspot and Nakhon Nayok as a new emerging hotspot. Additionally we can also identify several emerging hotspots in the northern provinces such as Chang mai, with sporadic coldspots. These findings are statistically significant at the 10% level, suggesting that the observed patterns are unlikely to be due to chance.\n\n# 8. Findings\n\n## 8.1 Overall Trend\n\nThe analysis reveals a significant spike in drug use cases between 2017 and 2021, with the number of cases doubling during this period. Bangkok, Chiang Mai, and Chon Buri consistently ranked among the top provinces with the highest drug use rates, although Bangkok was not among the top 10 in 2022.\n\n## 8.2 Breakdown\n\n### 8.2.1 Global Spatial Autocorrelation\n\n-   2020: Weak evidence of positive spatial autocorrelation, suggesting a slight tendency for drug use to cluster geographically.\n-   2021: Strong evidence of positive spatial autocorrelation, indicating a pronounced clustering pattern.\n-   2022: Similar to 2021, strong evidence of positive spatial autocorrelation.\n\n### 8.2.2 Global Spatial Autocorrelation\n\n-   2020: Clusters identified in central provinces (Chon Buri, Rayong) and an outlier in Mae Hong Son.\n-   2021: Increased clustering observed in central and southern provinces, with Mae Hong Son remaining an outlier.\n-   2022: Decreased overall drug use, but persistent clustering in central provinces (Udon, Kalasin, Khon Kaen) and continued outlier status for Mae Hong Son.\n\n### 8.2.3 Global Spatial Autocorrelation\n\n-   Sporadic emerging hotspots: Identified in various regions, including Chon Buri, Nakhon Nayok, and northern provinces.\n-   Varying statistical significance: The significance of emerging hotspots varies, indicating the need for further analysis.\n\n## 8.3 Key Findings\n\n-   Spatial clustering: Some evidence of spatial autocorrelation suggests that drug use is clustered geographically.\n-   Persistent hotspots: Certain regions (e.g., central provinces) consistently exhibit higher drug use rates.\n-   Outlier regions: Mae Hong Son consistently stands out as an outlier with different drug use patterns.\n\n# 9. Reflections\n\nIn the project I manage to pick up on the different techniques used for perform Spatial Autocorrelation. Understood how interpret autocorrelation as a global and local measure and how to support findings with other technique (e.g. Moran's I with Geary's C). I've also learnt to pay more attention to details, such as noticing regions with no links (Phuket) and figuring out if we can consider it to be linked with another province.\n\nThe project have also allowed me to gain deeper insights into pervasive issues of drug offenses in Thailand. It was interesting finding out clusters does not tend to remain in a single spot across the years and how this cluster could also affect neighboring provinces. We can also attribute the amount of drug offenses to the population density of certain provines too. These findings highligths the importance of spatial autocorrelation in addressing drug abuse, considering both spatial and sociodemographic factors.\n",
    "supporting": [
      "th_ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}